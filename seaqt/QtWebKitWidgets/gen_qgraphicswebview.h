#pragma once
#ifndef SEAQT_QTWEBKITWIDGETS_GEN_QGRAPHICSWEBVIEW_H
#define SEAQT_QTWEBKITWIDGETS_GEN_QGRAPHICSWEBVIEW_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../libseaqt/libseaqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAction;
class QChildEvent;
class QCloseEvent;
class QEvent;
class QFocusEvent;
class QGraphicsItem;
class QGraphicsLayoutItem;
class QGraphicsObject;
class QGraphicsSceneContextMenuEvent;
class QGraphicsSceneDragDropEvent;
class QGraphicsSceneHoverEvent;
class QGraphicsSceneMouseEvent;
class QGraphicsSceneMoveEvent;
class QGraphicsSceneResizeEvent;
class QGraphicsSceneWheelEvent;
class QGraphicsWebView;
class QGraphicsWidget;
class QHideEvent;
class QIcon;
class QInputMethodEvent;
class QKeyEvent;
class QMetaMethod;
class QMetaObject;
class QNetworkRequest;
class QObject;
class QPainter;
class QPainterPath;
class QPointF;
class QRectF;
class QShowEvent;
class QSizeF;
class QStyleOption;
class QStyleOptionGraphicsItem;
class QTimerEvent;
class QUrl;
class QVariant;
class QWebHistory;
class QWebPage;
class QWebSettings;
class QWidget;
#else
typedef struct QAction QAction;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QGraphicsItem QGraphicsItem;
typedef struct QGraphicsLayoutItem QGraphicsLayoutItem;
typedef struct QGraphicsObject QGraphicsObject;
typedef struct QGraphicsSceneContextMenuEvent QGraphicsSceneContextMenuEvent;
typedef struct QGraphicsSceneDragDropEvent QGraphicsSceneDragDropEvent;
typedef struct QGraphicsSceneHoverEvent QGraphicsSceneHoverEvent;
typedef struct QGraphicsSceneMouseEvent QGraphicsSceneMouseEvent;
typedef struct QGraphicsSceneMoveEvent QGraphicsSceneMoveEvent;
typedef struct QGraphicsSceneResizeEvent QGraphicsSceneResizeEvent;
typedef struct QGraphicsSceneWheelEvent QGraphicsSceneWheelEvent;
typedef struct QGraphicsWebView QGraphicsWebView;
typedef struct QGraphicsWidget QGraphicsWidget;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QNetworkRequest QNetworkRequest;
typedef struct QObject QObject;
typedef struct QPainter QPainter;
typedef struct QPainterPath QPainterPath;
typedef struct QPointF QPointF;
typedef struct QRectF QRectF;
typedef struct QShowEvent QShowEvent;
typedef struct QSizeF QSizeF;
typedef struct QStyleOption QStyleOption;
typedef struct QStyleOptionGraphicsItem QStyleOptionGraphicsItem;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUrl QUrl;
typedef struct QVariant QVariant;
typedef struct QWebHistory QWebHistory;
typedef struct QWebPage QWebPage;
typedef struct QWebSettings QWebSettings;
typedef struct QWidget QWidget;
#endif

typedef struct VirtualQGraphicsWebView VirtualQGraphicsWebView;
typedef struct QGraphicsWebView_VTable{
	void (*destructor)(VirtualQGraphicsWebView* self);
	QMetaObject* (*metaObject)(const VirtualQGraphicsWebView* self);
	void* (*metacast)(VirtualQGraphicsWebView* self, const char* param1);
	int (*metacall)(VirtualQGraphicsWebView* self, int param1, int param2, void** param3);
	void (*setGeometry)(VirtualQGraphicsWebView* self, QRectF* rect);
	void (*updateGeometry)(VirtualQGraphicsWebView* self);
	void (*paint)(VirtualQGraphicsWebView* self, QPainter* param1, QStyleOptionGraphicsItem* options, QWidget* widget);
	QVariant* (*itemChange)(VirtualQGraphicsWebView* self, int change, QVariant* value);
	bool (*event)(VirtualQGraphicsWebView* self, QEvent* param1);
	QSizeF* (*sizeHint)(const VirtualQGraphicsWebView* self, int which, QSizeF* constraint);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsWebView* self, int query);
	void (*mousePressEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
	void (*mouseReleaseEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
	void (*mouseMoveEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
	void (*hoverMoveEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneHoverEvent* param1);
	void (*hoverLeaveEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneHoverEvent* param1);
	void (*wheelEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneWheelEvent* param1);
	void (*keyPressEvent)(VirtualQGraphicsWebView* self, QKeyEvent* param1);
	void (*keyReleaseEvent)(VirtualQGraphicsWebView* self, QKeyEvent* param1);
	void (*contextMenuEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneContextMenuEvent* param1);
	void (*dragEnterEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
	void (*dragLeaveEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
	void (*dragMoveEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
	void (*dropEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
	void (*focusInEvent)(VirtualQGraphicsWebView* self, QFocusEvent* param1);
	void (*focusOutEvent)(VirtualQGraphicsWebView* self, QFocusEvent* param1);
	void (*inputMethodEvent)(VirtualQGraphicsWebView* self, QInputMethodEvent* param1);
	bool (*focusNextPrevChild)(VirtualQGraphicsWebView* self, bool next);
	bool (*sceneEvent)(VirtualQGraphicsWebView* self, QEvent* param1);
	void (*getContentsMargins)(const VirtualQGraphicsWebView* self, double* left, double* top, double* right, double* bottom);
	int (*type)(const VirtualQGraphicsWebView* self);
	void (*paintWindowFrame)(VirtualQGraphicsWebView* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	QRectF* (*boundingRect)(const VirtualQGraphicsWebView* self);
	QPainterPath* (*shape)(const VirtualQGraphicsWebView* self);
	void (*initStyleOption)(const VirtualQGraphicsWebView* self, QStyleOption* option);
	QVariant* (*propertyChange)(VirtualQGraphicsWebView* self, struct miqt_string propertyName, QVariant* value);
	bool (*windowFrameEvent)(VirtualQGraphicsWebView* self, QEvent* e);
	int (*windowFrameSectionAt)(const VirtualQGraphicsWebView* self, QPointF* pos);
	void (*changeEvent)(VirtualQGraphicsWebView* self, QEvent* event);
	void (*closeEvent)(VirtualQGraphicsWebView* self, QCloseEvent* event);
	void (*hideEvent)(VirtualQGraphicsWebView* self, QHideEvent* event);
	void (*moveEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneMoveEvent* event);
	void (*polishEvent)(VirtualQGraphicsWebView* self);
	void (*resizeEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneResizeEvent* event);
	void (*showEvent)(VirtualQGraphicsWebView* self, QShowEvent* event);
	void (*grabMouseEvent)(VirtualQGraphicsWebView* self, QEvent* event);
	void (*ungrabMouseEvent)(VirtualQGraphicsWebView* self, QEvent* event);
	void (*grabKeyboardEvent)(VirtualQGraphicsWebView* self, QEvent* event);
	void (*ungrabKeyboardEvent)(VirtualQGraphicsWebView* self, QEvent* event);
	bool (*eventFilter)(VirtualQGraphicsWebView* self, QObject* watched, QEvent* event);
	void (*timerEvent)(VirtualQGraphicsWebView* self, QTimerEvent* event);
	void (*childEvent)(VirtualQGraphicsWebView* self, QChildEvent* event);
	void (*customEvent)(VirtualQGraphicsWebView* self, QEvent* event);
	void (*connectNotify)(VirtualQGraphicsWebView* self, QMetaMethod* signal);
	void (*disconnectNotify)(VirtualQGraphicsWebView* self, QMetaMethod* signal);
	void (*advance)(VirtualQGraphicsWebView* self, int phase);
	bool (*contains)(const VirtualQGraphicsWebView* self, QPointF* point);
	bool (*collidesWithItem)(const VirtualQGraphicsWebView* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsWebView* self, QPainterPath* path, int mode);
	bool (*isObscuredBy)(const VirtualQGraphicsWebView* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsWebView* self);
	bool (*sceneEventFilter)(VirtualQGraphicsWebView* self, QGraphicsItem* watched, QEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsWebView* self, QGraphicsSceneHoverEvent* event);
	bool (*supportsExtension)(const VirtualQGraphicsWebView* self, int extension);
	void (*setExtension)(VirtualQGraphicsWebView* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsWebView* self, QVariant* variant);
}QGraphicsWebView_VTable;

const QGraphicsWebView_VTable* QGraphicsWebView_vtbl(const VirtualQGraphicsWebView* self);
void* QGraphicsWebView_vdata(const VirtualQGraphicsWebView* self);
void QGraphicsWebView_setVdata(VirtualQGraphicsWebView* self, void* vdata);

VirtualQGraphicsWebView* QGraphicsWebView_new(const QGraphicsWebView_VTable* vtbl, void* vdata);
VirtualQGraphicsWebView* QGraphicsWebView_new2(const QGraphicsWebView_VTable* vtbl, void* vdata, QGraphicsItem* parent);

void QGraphicsWebView_virtbase(QGraphicsWebView* src, QGraphicsWidget** outptr_QGraphicsWidget);
QMetaObject* QGraphicsWebView_metaObject(const QGraphicsWebView* self);
void* QGraphicsWebView_metacast(QGraphicsWebView* self, const char* param1);
int QGraphicsWebView_metacall(QGraphicsWebView* self, int param1, int param2, void** param3);
struct miqt_string QGraphicsWebView_tr(const char* s);
struct miqt_string QGraphicsWebView_trUtf8(const char* s);
QWebPage* QGraphicsWebView_page(const QGraphicsWebView* self);
void QGraphicsWebView_setPage(QGraphicsWebView* self, QWebPage* page);
QUrl* QGraphicsWebView_url(const QGraphicsWebView* self);
void QGraphicsWebView_setUrl(QGraphicsWebView* self, QUrl* url);
struct miqt_string QGraphicsWebView_title(const QGraphicsWebView* self);
QIcon* QGraphicsWebView_icon(const QGraphicsWebView* self);
double QGraphicsWebView_zoomFactor(const QGraphicsWebView* self);
void QGraphicsWebView_setZoomFactor(QGraphicsWebView* self, double zoomFactor);
bool QGraphicsWebView_isModified(const QGraphicsWebView* self);
void QGraphicsWebView_load(QGraphicsWebView* self, QUrl* url);
void QGraphicsWebView_loadWithRequest(QGraphicsWebView* self, QNetworkRequest* request);
void QGraphicsWebView_setHtml(QGraphicsWebView* self, struct miqt_string html);
void QGraphicsWebView_setContent(QGraphicsWebView* self, struct miqt_string data);
QWebHistory* QGraphicsWebView_history(const QGraphicsWebView* self);
QWebSettings* QGraphicsWebView_settings(const QGraphicsWebView* self);
QAction* QGraphicsWebView_pageAction(const QGraphicsWebView* self, int action);
void QGraphicsWebView_triggerPageAction(QGraphicsWebView* self, int action);
bool QGraphicsWebView_findText(QGraphicsWebView* self, struct miqt_string subString);
bool QGraphicsWebView_resizesToContents(const QGraphicsWebView* self);
void QGraphicsWebView_setResizesToContents(QGraphicsWebView* self, bool enabled);
bool QGraphicsWebView_isTiledBackingStoreFrozen(const QGraphicsWebView* self);
void QGraphicsWebView_setTiledBackingStoreFrozen(QGraphicsWebView* self, bool frozen);
void QGraphicsWebView_setGeometry(QGraphicsWebView* self, QRectF* rect);
void QGraphicsWebView_updateGeometry(QGraphicsWebView* self);
void QGraphicsWebView_paint(QGraphicsWebView* self, QPainter* param1, QStyleOptionGraphicsItem* options, QWidget* widget);
QVariant* QGraphicsWebView_itemChange(QGraphicsWebView* self, int change, QVariant* value);
bool QGraphicsWebView_event(QGraphicsWebView* self, QEvent* param1);
QSizeF* QGraphicsWebView_sizeHint(const QGraphicsWebView* self, int which, QSizeF* constraint);
QVariant* QGraphicsWebView_inputMethodQuery(const QGraphicsWebView* self, int query);
int QGraphicsWebView_renderHints(const QGraphicsWebView* self);
void QGraphicsWebView_setRenderHints(QGraphicsWebView* self, int renderHints);
void QGraphicsWebView_setRenderHint(QGraphicsWebView* self, int param1);
void QGraphicsWebView_stop(QGraphicsWebView* self);
void QGraphicsWebView_back(QGraphicsWebView* self);
void QGraphicsWebView_forward(QGraphicsWebView* self);
void QGraphicsWebView_reload(QGraphicsWebView* self);
void QGraphicsWebView_loadStarted(QGraphicsWebView* self);
void QGraphicsWebView_connect_loadStarted(VirtualQGraphicsWebView* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsWebView_loadFinished(QGraphicsWebView* self, bool param1);
void QGraphicsWebView_connect_loadFinished(VirtualQGraphicsWebView* self, intptr_t slot, void (*callback)(intptr_t, bool), void (*release)(intptr_t));
void QGraphicsWebView_loadProgress(QGraphicsWebView* self, int progress);
void QGraphicsWebView_connect_loadProgress(VirtualQGraphicsWebView* self, intptr_t slot, void (*callback)(intptr_t, int), void (*release)(intptr_t));
void QGraphicsWebView_urlChanged(QGraphicsWebView* self, QUrl* param1);
void QGraphicsWebView_connect_urlChanged(VirtualQGraphicsWebView* self, intptr_t slot, void (*callback)(intptr_t, QUrl*), void (*release)(intptr_t));
void QGraphicsWebView_titleChanged(QGraphicsWebView* self, struct miqt_string param1);
void QGraphicsWebView_connect_titleChanged(VirtualQGraphicsWebView* self, intptr_t slot, void (*callback)(intptr_t, struct miqt_string), void (*release)(intptr_t));
void QGraphicsWebView_iconChanged(QGraphicsWebView* self);
void QGraphicsWebView_connect_iconChanged(VirtualQGraphicsWebView* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsWebView_statusBarMessage(QGraphicsWebView* self, struct miqt_string message);
void QGraphicsWebView_connect_statusBarMessage(VirtualQGraphicsWebView* self, intptr_t slot, void (*callback)(intptr_t, struct miqt_string), void (*release)(intptr_t));
void QGraphicsWebView_linkClicked(QGraphicsWebView* self, QUrl* param1);
void QGraphicsWebView_connect_linkClicked(VirtualQGraphicsWebView* self, intptr_t slot, void (*callback)(intptr_t, QUrl*), void (*release)(intptr_t));
void QGraphicsWebView_mousePressEvent(QGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
void QGraphicsWebView_mouseDoubleClickEvent(QGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
void QGraphicsWebView_mouseReleaseEvent(QGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
void QGraphicsWebView_mouseMoveEvent(QGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
void QGraphicsWebView_hoverMoveEvent(QGraphicsWebView* self, QGraphicsSceneHoverEvent* param1);
void QGraphicsWebView_hoverLeaveEvent(QGraphicsWebView* self, QGraphicsSceneHoverEvent* param1);
void QGraphicsWebView_wheelEvent(QGraphicsWebView* self, QGraphicsSceneWheelEvent* param1);
void QGraphicsWebView_keyPressEvent(QGraphicsWebView* self, QKeyEvent* param1);
void QGraphicsWebView_keyReleaseEvent(QGraphicsWebView* self, QKeyEvent* param1);
void QGraphicsWebView_contextMenuEvent(QGraphicsWebView* self, QGraphicsSceneContextMenuEvent* param1);
void QGraphicsWebView_dragEnterEvent(QGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
void QGraphicsWebView_dragLeaveEvent(QGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
void QGraphicsWebView_dragMoveEvent(QGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
void QGraphicsWebView_dropEvent(QGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
void QGraphicsWebView_focusInEvent(QGraphicsWebView* self, QFocusEvent* param1);
void QGraphicsWebView_focusOutEvent(QGraphicsWebView* self, QFocusEvent* param1);
void QGraphicsWebView_inputMethodEvent(QGraphicsWebView* self, QInputMethodEvent* param1);
bool QGraphicsWebView_focusNextPrevChild(QGraphicsWebView* self, bool next);
bool QGraphicsWebView_sceneEvent(QGraphicsWebView* self, QEvent* param1);
struct miqt_string QGraphicsWebView_tr2(const char* s, const char* c);
struct miqt_string QGraphicsWebView_tr3(const char* s, const char* c, int n);
struct miqt_string QGraphicsWebView_trUtf82(const char* s, const char* c);
struct miqt_string QGraphicsWebView_trUtf83(const char* s, const char* c, int n);
void QGraphicsWebView_load2(QGraphicsWebView* self, QNetworkRequest* request, int operation);
void QGraphicsWebView_load3(QGraphicsWebView* self, QNetworkRequest* request, int operation, struct miqt_string body);
void QGraphicsWebView_setHtml2(QGraphicsWebView* self, struct miqt_string html, QUrl* baseUrl);
void QGraphicsWebView_setContent2(QGraphicsWebView* self, struct miqt_string data, struct miqt_string mimeType);
void QGraphicsWebView_setContent3(QGraphicsWebView* self, struct miqt_string data, struct miqt_string mimeType, QUrl* baseUrl);
void QGraphicsWebView_triggerPageAction2(QGraphicsWebView* self, int action, bool checked);
bool QGraphicsWebView_findText2(QGraphicsWebView* self, struct miqt_string subString, int options);
void QGraphicsWebView_setRenderHint2(QGraphicsWebView* self, int param1, bool enabled);

QMetaObject* QGraphicsWebView_virtualbase_metaObject(const VirtualQGraphicsWebView* self);
void* QGraphicsWebView_virtualbase_metacast(VirtualQGraphicsWebView* self, const char* param1);
int QGraphicsWebView_virtualbase_metacall(VirtualQGraphicsWebView* self, int param1, int param2, void** param3);
void QGraphicsWebView_virtualbase_setGeometry(VirtualQGraphicsWebView* self, QRectF* rect);
void QGraphicsWebView_virtualbase_updateGeometry(VirtualQGraphicsWebView* self);
void QGraphicsWebView_virtualbase_paint(VirtualQGraphicsWebView* self, QPainter* param1, QStyleOptionGraphicsItem* options, QWidget* widget);
QVariant* QGraphicsWebView_virtualbase_itemChange(VirtualQGraphicsWebView* self, int change, QVariant* value);
bool QGraphicsWebView_virtualbase_event(VirtualQGraphicsWebView* self, QEvent* param1);
QSizeF* QGraphicsWebView_virtualbase_sizeHint(const VirtualQGraphicsWebView* self, int which, QSizeF* constraint);
QVariant* QGraphicsWebView_virtualbase_inputMethodQuery(const VirtualQGraphicsWebView* self, int query);
void QGraphicsWebView_virtualbase_mousePressEvent(VirtualQGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
void QGraphicsWebView_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
void QGraphicsWebView_virtualbase_mouseReleaseEvent(VirtualQGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
void QGraphicsWebView_virtualbase_mouseMoveEvent(VirtualQGraphicsWebView* self, QGraphicsSceneMouseEvent* param1);
void QGraphicsWebView_virtualbase_hoverMoveEvent(VirtualQGraphicsWebView* self, QGraphicsSceneHoverEvent* param1);
void QGraphicsWebView_virtualbase_hoverLeaveEvent(VirtualQGraphicsWebView* self, QGraphicsSceneHoverEvent* param1);
void QGraphicsWebView_virtualbase_wheelEvent(VirtualQGraphicsWebView* self, QGraphicsSceneWheelEvent* param1);
void QGraphicsWebView_virtualbase_keyPressEvent(VirtualQGraphicsWebView* self, QKeyEvent* param1);
void QGraphicsWebView_virtualbase_keyReleaseEvent(VirtualQGraphicsWebView* self, QKeyEvent* param1);
void QGraphicsWebView_virtualbase_contextMenuEvent(VirtualQGraphicsWebView* self, QGraphicsSceneContextMenuEvent* param1);
void QGraphicsWebView_virtualbase_dragEnterEvent(VirtualQGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
void QGraphicsWebView_virtualbase_dragLeaveEvent(VirtualQGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
void QGraphicsWebView_virtualbase_dragMoveEvent(VirtualQGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
void QGraphicsWebView_virtualbase_dropEvent(VirtualQGraphicsWebView* self, QGraphicsSceneDragDropEvent* param1);
void QGraphicsWebView_virtualbase_focusInEvent(VirtualQGraphicsWebView* self, QFocusEvent* param1);
void QGraphicsWebView_virtualbase_focusOutEvent(VirtualQGraphicsWebView* self, QFocusEvent* param1);
void QGraphicsWebView_virtualbase_inputMethodEvent(VirtualQGraphicsWebView* self, QInputMethodEvent* param1);
bool QGraphicsWebView_virtualbase_focusNextPrevChild(VirtualQGraphicsWebView* self, bool next);
bool QGraphicsWebView_virtualbase_sceneEvent(VirtualQGraphicsWebView* self, QEvent* param1);
void QGraphicsWebView_virtualbase_getContentsMargins(const VirtualQGraphicsWebView* self, double* left, double* top, double* right, double* bottom);
int QGraphicsWebView_virtualbase_type(const VirtualQGraphicsWebView* self);
void QGraphicsWebView_virtualbase_paintWindowFrame(VirtualQGraphicsWebView* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
QRectF* QGraphicsWebView_virtualbase_boundingRect(const VirtualQGraphicsWebView* self);
QPainterPath* QGraphicsWebView_virtualbase_shape(const VirtualQGraphicsWebView* self);
void QGraphicsWebView_virtualbase_initStyleOption(const VirtualQGraphicsWebView* self, QStyleOption* option);
QVariant* QGraphicsWebView_virtualbase_propertyChange(VirtualQGraphicsWebView* self, struct miqt_string propertyName, QVariant* value);
bool QGraphicsWebView_virtualbase_windowFrameEvent(VirtualQGraphicsWebView* self, QEvent* e);
int QGraphicsWebView_virtualbase_windowFrameSectionAt(const VirtualQGraphicsWebView* self, QPointF* pos);
void QGraphicsWebView_virtualbase_changeEvent(VirtualQGraphicsWebView* self, QEvent* event);
void QGraphicsWebView_virtualbase_closeEvent(VirtualQGraphicsWebView* self, QCloseEvent* event);
void QGraphicsWebView_virtualbase_hideEvent(VirtualQGraphicsWebView* self, QHideEvent* event);
void QGraphicsWebView_virtualbase_moveEvent(VirtualQGraphicsWebView* self, QGraphicsSceneMoveEvent* event);
void QGraphicsWebView_virtualbase_polishEvent(VirtualQGraphicsWebView* self);
void QGraphicsWebView_virtualbase_resizeEvent(VirtualQGraphicsWebView* self, QGraphicsSceneResizeEvent* event);
void QGraphicsWebView_virtualbase_showEvent(VirtualQGraphicsWebView* self, QShowEvent* event);
void QGraphicsWebView_virtualbase_grabMouseEvent(VirtualQGraphicsWebView* self, QEvent* event);
void QGraphicsWebView_virtualbase_ungrabMouseEvent(VirtualQGraphicsWebView* self, QEvent* event);
void QGraphicsWebView_virtualbase_grabKeyboardEvent(VirtualQGraphicsWebView* self, QEvent* event);
void QGraphicsWebView_virtualbase_ungrabKeyboardEvent(VirtualQGraphicsWebView* self, QEvent* event);
bool QGraphicsWebView_virtualbase_eventFilter(VirtualQGraphicsWebView* self, QObject* watched, QEvent* event);
void QGraphicsWebView_virtualbase_timerEvent(VirtualQGraphicsWebView* self, QTimerEvent* event);
void QGraphicsWebView_virtualbase_childEvent(VirtualQGraphicsWebView* self, QChildEvent* event);
void QGraphicsWebView_virtualbase_customEvent(VirtualQGraphicsWebView* self, QEvent* event);
void QGraphicsWebView_virtualbase_connectNotify(VirtualQGraphicsWebView* self, QMetaMethod* signal);
void QGraphicsWebView_virtualbase_disconnectNotify(VirtualQGraphicsWebView* self, QMetaMethod* signal);
void QGraphicsWebView_virtualbase_advance(VirtualQGraphicsWebView* self, int phase);
bool QGraphicsWebView_virtualbase_contains(const VirtualQGraphicsWebView* self, QPointF* point);
bool QGraphicsWebView_virtualbase_collidesWithItem(const VirtualQGraphicsWebView* self, QGraphicsItem* other, int mode);
bool QGraphicsWebView_virtualbase_collidesWithPath(const VirtualQGraphicsWebView* self, QPainterPath* path, int mode);
bool QGraphicsWebView_virtualbase_isObscuredBy(const VirtualQGraphicsWebView* self, QGraphicsItem* item);
QPainterPath* QGraphicsWebView_virtualbase_opaqueArea(const VirtualQGraphicsWebView* self);
bool QGraphicsWebView_virtualbase_sceneEventFilter(VirtualQGraphicsWebView* self, QGraphicsItem* watched, QEvent* event);
void QGraphicsWebView_virtualbase_hoverEnterEvent(VirtualQGraphicsWebView* self, QGraphicsSceneHoverEvent* event);
bool QGraphicsWebView_virtualbase_supportsExtension(const VirtualQGraphicsWebView* self, int extension);
void QGraphicsWebView_virtualbase_setExtension(VirtualQGraphicsWebView* self, int extension, QVariant* variant);
QVariant* QGraphicsWebView_virtualbase_extension(const VirtualQGraphicsWebView* self, QVariant* variant);

void QGraphicsWebView_protectedbase_updateMicroFocus(VirtualQGraphicsWebView* self);
QObject* QGraphicsWebView_protectedbase_sender(const VirtualQGraphicsWebView* self);
int QGraphicsWebView_protectedbase_senderSignalIndex(const VirtualQGraphicsWebView* self);
int QGraphicsWebView_protectedbase_receivers(const VirtualQGraphicsWebView* self, const char* signal);
bool QGraphicsWebView_protectedbase_isSignalConnected(const VirtualQGraphicsWebView* self, QMetaMethod* signal);
void QGraphicsWebView_protectedbase_addToIndex(VirtualQGraphicsWebView* self);
void QGraphicsWebView_protectedbase_removeFromIndex(VirtualQGraphicsWebView* self);
void QGraphicsWebView_protectedbase_prepareGeometryChange(VirtualQGraphicsWebView* self);
void QGraphicsWebView_protectedbase_setGraphicsItem(VirtualQGraphicsWebView* self, QGraphicsItem* item);
void QGraphicsWebView_protectedbase_setOwnedByLayout(VirtualQGraphicsWebView* self, bool ownedByLayout);

const QMetaObject* QGraphicsWebView_staticMetaObject();
void QGraphicsWebView_delete(QGraphicsWebView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
