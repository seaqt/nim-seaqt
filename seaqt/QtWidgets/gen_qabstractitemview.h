#pragma once
#ifndef SEAQT_QTWIDGETS_GEN_QABSTRACTITEMVIEW_H
#define SEAQT_QTWIDGETS_GEN_QABSTRACTITEMVIEW_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../libseaqt/libseaqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAbstractItemDelegate;
class QAbstractItemModel;
class QAbstractItemView;
class QAbstractScrollArea;
class QActionEvent;
class QChildEvent;
class QCloseEvent;
class QContextMenuEvent;
class QDragEnterEvent;
class QDragLeaveEvent;
class QDragMoveEvent;
class QDropEvent;
class QEvent;
class QFocusEvent;
class QFrame;
class QHideEvent;
class QInputMethodEvent;
class QItemSelection;
class QItemSelectionModel;
class QKeyEvent;
class QMargins;
class QMetaMethod;
class QMetaObject;
class QModelIndex;
class QMouseEvent;
class QMoveEvent;
class QObject;
class QPaintDevice;
class QPaintEngine;
class QPaintEvent;
class QPainter;
class QPoint;
class QRect;
class QRegion;
class QResizeEvent;
class QShowEvent;
class QSize;
class QStyleOptionFrame;
class QStyleOptionViewItem;
class QTabletEvent;
class QTimerEvent;
class QVariant;
class QWheelEvent;
class QWidget;
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

typedef struct VirtualQAbstractItemView VirtualQAbstractItemView;
typedef struct QAbstractItemView_VTable{
	void (*destructor)(VirtualQAbstractItemView* self);
	QMetaObject* (*metaObject)(const VirtualQAbstractItemView* self);
	void* (*metacast)(VirtualQAbstractItemView* self, const char* param1);
	int (*metacall)(VirtualQAbstractItemView* self, int param1, int param2, void** param3);
	void (*setModel)(VirtualQAbstractItemView* self, QAbstractItemModel* model);
	void (*setSelectionModel)(VirtualQAbstractItemView* self, QItemSelectionModel* selectionModel);
	void (*keyboardSearch)(VirtualQAbstractItemView* self, struct miqt_string search);
	QRect* (*visualRect)(const VirtualQAbstractItemView* self, QModelIndex* index);
	void (*scrollTo)(VirtualQAbstractItemView* self, QModelIndex* index, int hint);
	QModelIndex* (*indexAt)(const VirtualQAbstractItemView* self, QPoint* point);
	int (*sizeHintForRow)(const VirtualQAbstractItemView* self, int row);
	int (*sizeHintForColumn)(const VirtualQAbstractItemView* self, int column);
	QVariant* (*inputMethodQuery)(const VirtualQAbstractItemView* self, int query);
	void (*reset)(VirtualQAbstractItemView* self);
	void (*setRootIndex)(VirtualQAbstractItemView* self, QModelIndex* index);
	void (*doItemsLayout)(VirtualQAbstractItemView* self);
	void (*selectAll)(VirtualQAbstractItemView* self);
	void (*dataChanged)(VirtualQAbstractItemView* self, QModelIndex* topLeft, QModelIndex* bottomRight, struct miqt_array /* of int */  roles);
	void (*rowsInserted)(VirtualQAbstractItemView* self, QModelIndex* parent, int start, int end);
	void (*rowsAboutToBeRemoved)(VirtualQAbstractItemView* self, QModelIndex* parent, int start, int end);
	void (*selectionChanged)(VirtualQAbstractItemView* self, QItemSelection* selected, QItemSelection* deselected);
	void (*currentChanged)(VirtualQAbstractItemView* self, QModelIndex* current, QModelIndex* previous);
	void (*updateEditorData)(VirtualQAbstractItemView* self);
	void (*updateEditorGeometries)(VirtualQAbstractItemView* self);
	void (*updateGeometries)(VirtualQAbstractItemView* self);
	void (*verticalScrollbarAction)(VirtualQAbstractItemView* self, int action);
	void (*horizontalScrollbarAction)(VirtualQAbstractItemView* self, int action);
	void (*verticalScrollbarValueChanged)(VirtualQAbstractItemView* self, int value);
	void (*horizontalScrollbarValueChanged)(VirtualQAbstractItemView* self, int value);
	void (*closeEditor)(VirtualQAbstractItemView* self, QWidget* editor, int hint);
	void (*commitData)(VirtualQAbstractItemView* self, QWidget* editor);
	void (*editorDestroyed)(VirtualQAbstractItemView* self, QObject* editor);
	QModelIndex* (*moveCursor)(VirtualQAbstractItemView* self, int cursorAction, int modifiers);
	int (*horizontalOffset)(const VirtualQAbstractItemView* self);
	int (*verticalOffset)(const VirtualQAbstractItemView* self);
	bool (*isIndexHidden)(const VirtualQAbstractItemView* self, QModelIndex* index);
	void (*setSelection)(VirtualQAbstractItemView* self, QRect* rect, int command);
	QRegion* (*visualRegionForSelection)(const VirtualQAbstractItemView* self, QItemSelection* selection);
	struct miqt_array /* of QModelIndex* */  (*selectedIndexes)(const VirtualQAbstractItemView* self);
	bool (*edit2)(VirtualQAbstractItemView* self, QModelIndex* index, int trigger, QEvent* event);
	int (*selectionCommand)(const VirtualQAbstractItemView* self, QModelIndex* index, QEvent* event);
	void (*startDrag)(VirtualQAbstractItemView* self, int supportedActions);
	QStyleOptionViewItem* (*viewOptions)(const VirtualQAbstractItemView* self);
	bool (*focusNextPrevChild)(VirtualQAbstractItemView* self, bool next);
	bool (*event)(VirtualQAbstractItemView* self, QEvent* event);
	bool (*viewportEvent)(VirtualQAbstractItemView* self, QEvent* event);
	void (*mousePressEvent)(VirtualQAbstractItemView* self, QMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQAbstractItemView* self, QMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQAbstractItemView* self, QMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQAbstractItemView* self, QMouseEvent* event);
	void (*dragEnterEvent)(VirtualQAbstractItemView* self, QDragEnterEvent* event);
	void (*dragMoveEvent)(VirtualQAbstractItemView* self, QDragMoveEvent* event);
	void (*dragLeaveEvent)(VirtualQAbstractItemView* self, QDragLeaveEvent* event);
	void (*dropEvent)(VirtualQAbstractItemView* self, QDropEvent* event);
	void (*focusInEvent)(VirtualQAbstractItemView* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQAbstractItemView* self, QFocusEvent* event);
	void (*keyPressEvent)(VirtualQAbstractItemView* self, QKeyEvent* event);
	void (*resizeEvent)(VirtualQAbstractItemView* self, QResizeEvent* event);
	void (*timerEvent)(VirtualQAbstractItemView* self, QTimerEvent* event);
	void (*inputMethodEvent)(VirtualQAbstractItemView* self, QInputMethodEvent* event);
	bool (*eventFilter)(VirtualQAbstractItemView* self, QObject* object, QEvent* event);
	QSize* (*viewportSizeHint)(const VirtualQAbstractItemView* self);
	QSize* (*minimumSizeHint)(const VirtualQAbstractItemView* self);
	QSize* (*sizeHint)(const VirtualQAbstractItemView* self);
	void (*setupViewport)(VirtualQAbstractItemView* self, QWidget* viewport);
	void (*paintEvent)(VirtualQAbstractItemView* self, QPaintEvent* param1);
	void (*wheelEvent)(VirtualQAbstractItemView* self, QWheelEvent* param1);
	void (*contextMenuEvent)(VirtualQAbstractItemView* self, QContextMenuEvent* param1);
	void (*scrollContentsBy)(VirtualQAbstractItemView* self, int dx, int dy);
	void (*changeEvent)(VirtualQAbstractItemView* self, QEvent* param1);
	int (*devType)(const VirtualQAbstractItemView* self);
	void (*setVisible)(VirtualQAbstractItemView* self, bool visible);
	int (*heightForWidth)(const VirtualQAbstractItemView* self, int param1);
	bool (*hasHeightForWidth)(const VirtualQAbstractItemView* self);
	QPaintEngine* (*paintEngine)(const VirtualQAbstractItemView* self);
	void (*keyReleaseEvent)(VirtualQAbstractItemView* self, QKeyEvent* event);
	void (*enterEvent)(VirtualQAbstractItemView* self, QEvent* event);
	void (*leaveEvent)(VirtualQAbstractItemView* self, QEvent* event);
	void (*moveEvent)(VirtualQAbstractItemView* self, QMoveEvent* event);
	void (*closeEvent)(VirtualQAbstractItemView* self, QCloseEvent* event);
	void (*tabletEvent)(VirtualQAbstractItemView* self, QTabletEvent* event);
	void (*actionEvent)(VirtualQAbstractItemView* self, QActionEvent* event);
	void (*showEvent)(VirtualQAbstractItemView* self, QShowEvent* event);
	void (*hideEvent)(VirtualQAbstractItemView* self, QHideEvent* event);
	bool (*nativeEvent)(VirtualQAbstractItemView* self, struct miqt_string eventType, void* message, long* result);
	int (*metric)(const VirtualQAbstractItemView* self, int param1);
	void (*initPainter)(const VirtualQAbstractItemView* self, QPainter* painter);
	QPaintDevice* (*redirected)(const VirtualQAbstractItemView* self, QPoint* offset);
	QPainter* (*sharedPainter)(const VirtualQAbstractItemView* self);
	void (*childEvent)(VirtualQAbstractItemView* self, QChildEvent* event);
	void (*customEvent)(VirtualQAbstractItemView* self, QEvent* event);
	void (*connectNotify)(VirtualQAbstractItemView* self, QMetaMethod* signal);
	void (*disconnectNotify)(VirtualQAbstractItemView* self, QMetaMethod* signal);
}QAbstractItemView_VTable;

const QAbstractItemView_VTable* QAbstractItemView_vtbl(const VirtualQAbstractItemView* self);
void* QAbstractItemView_vdata(const VirtualQAbstractItemView* self);
void QAbstractItemView_setVdata(VirtualQAbstractItemView* self, void* vdata);

VirtualQAbstractItemView* QAbstractItemView_new(const QAbstractItemView_VTable* vtbl, void* vdata, QWidget* parent);
VirtualQAbstractItemView* QAbstractItemView_new2(const QAbstractItemView_VTable* vtbl, void* vdata);

void QAbstractItemView_virtbase(QAbstractItemView* src, QAbstractScrollArea** outptr_QAbstractScrollArea);
QMetaObject* QAbstractItemView_metaObject(const QAbstractItemView* self);
void* QAbstractItemView_metacast(QAbstractItemView* self, const char* param1);
int QAbstractItemView_metacall(QAbstractItemView* self, int param1, int param2, void** param3);
struct miqt_string QAbstractItemView_tr(const char* s);
struct miqt_string QAbstractItemView_trUtf8(const char* s);
void QAbstractItemView_setModel(QAbstractItemView* self, QAbstractItemModel* model);
QAbstractItemModel* QAbstractItemView_model(const QAbstractItemView* self);
void QAbstractItemView_setSelectionModel(QAbstractItemView* self, QItemSelectionModel* selectionModel);
QItemSelectionModel* QAbstractItemView_selectionModel(const QAbstractItemView* self);
void QAbstractItemView_setItemDelegate(QAbstractItemView* self, QAbstractItemDelegate* delegate);
QAbstractItemDelegate* QAbstractItemView_itemDelegate(const QAbstractItemView* self);
void QAbstractItemView_setSelectionMode(QAbstractItemView* self, int mode);
int QAbstractItemView_selectionMode(const QAbstractItemView* self);
void QAbstractItemView_setSelectionBehavior(QAbstractItemView* self, int behavior);
int QAbstractItemView_selectionBehavior(const QAbstractItemView* self);
QModelIndex* QAbstractItemView_currentIndex(const QAbstractItemView* self);
QModelIndex* QAbstractItemView_rootIndex(const QAbstractItemView* self);
void QAbstractItemView_setEditTriggers(QAbstractItemView* self, int triggers);
int QAbstractItemView_editTriggers(const QAbstractItemView* self);
void QAbstractItemView_setVerticalScrollMode(QAbstractItemView* self, int mode);
int QAbstractItemView_verticalScrollMode(const QAbstractItemView* self);
void QAbstractItemView_resetVerticalScrollMode(QAbstractItemView* self);
void QAbstractItemView_setHorizontalScrollMode(QAbstractItemView* self, int mode);
int QAbstractItemView_horizontalScrollMode(const QAbstractItemView* self);
void QAbstractItemView_resetHorizontalScrollMode(QAbstractItemView* self);
void QAbstractItemView_setAutoScroll(QAbstractItemView* self, bool enable);
bool QAbstractItemView_hasAutoScroll(const QAbstractItemView* self);
void QAbstractItemView_setAutoScrollMargin(QAbstractItemView* self, int margin);
int QAbstractItemView_autoScrollMargin(const QAbstractItemView* self);
void QAbstractItemView_setTabKeyNavigation(QAbstractItemView* self, bool enable);
bool QAbstractItemView_tabKeyNavigation(const QAbstractItemView* self);
void QAbstractItemView_setDropIndicatorShown(QAbstractItemView* self, bool enable);
bool QAbstractItemView_showDropIndicator(const QAbstractItemView* self);
void QAbstractItemView_setDragEnabled(QAbstractItemView* self, bool enable);
bool QAbstractItemView_dragEnabled(const QAbstractItemView* self);
void QAbstractItemView_setDragDropOverwriteMode(QAbstractItemView* self, bool overwrite);
bool QAbstractItemView_dragDropOverwriteMode(const QAbstractItemView* self);
void QAbstractItemView_setDragDropMode(QAbstractItemView* self, int behavior);
int QAbstractItemView_dragDropMode(const QAbstractItemView* self);
void QAbstractItemView_setDefaultDropAction(QAbstractItemView* self, int dropAction);
int QAbstractItemView_defaultDropAction(const QAbstractItemView* self);
void QAbstractItemView_setAlternatingRowColors(QAbstractItemView* self, bool enable);
bool QAbstractItemView_alternatingRowColors(const QAbstractItemView* self);
void QAbstractItemView_setIconSize(QAbstractItemView* self, QSize* size);
QSize* QAbstractItemView_iconSize(const QAbstractItemView* self);
void QAbstractItemView_setTextElideMode(QAbstractItemView* self, int mode);
int QAbstractItemView_textElideMode(const QAbstractItemView* self);
void QAbstractItemView_keyboardSearch(QAbstractItemView* self, struct miqt_string search);
QRect* QAbstractItemView_visualRect(const QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_scrollTo(QAbstractItemView* self, QModelIndex* index, int hint);
QModelIndex* QAbstractItemView_indexAt(const QAbstractItemView* self, QPoint* point);
QSize* QAbstractItemView_sizeHintForIndex(const QAbstractItemView* self, QModelIndex* index);
int QAbstractItemView_sizeHintForRow(const QAbstractItemView* self, int row);
int QAbstractItemView_sizeHintForColumn(const QAbstractItemView* self, int column);
void QAbstractItemView_openPersistentEditor(QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_closePersistentEditor(QAbstractItemView* self, QModelIndex* index);
bool QAbstractItemView_isPersistentEditorOpen(const QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_setIndexWidget(QAbstractItemView* self, QModelIndex* index, QWidget* widget);
QWidget* QAbstractItemView_indexWidget(const QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_setItemDelegateForRow(QAbstractItemView* self, int row, QAbstractItemDelegate* delegate);
QAbstractItemDelegate* QAbstractItemView_itemDelegateForRow(const QAbstractItemView* self, int row);
void QAbstractItemView_setItemDelegateForColumn(QAbstractItemView* self, int column, QAbstractItemDelegate* delegate);
QAbstractItemDelegate* QAbstractItemView_itemDelegateForColumn(const QAbstractItemView* self, int column);
QAbstractItemDelegate* QAbstractItemView_itemDelegateWithIndex(const QAbstractItemView* self, QModelIndex* index);
QVariant* QAbstractItemView_inputMethodQuery(const QAbstractItemView* self, int query);
void QAbstractItemView_reset(QAbstractItemView* self);
void QAbstractItemView_setRootIndex(QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_doItemsLayout(QAbstractItemView* self);
void QAbstractItemView_selectAll(QAbstractItemView* self);
void QAbstractItemView_edit(QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_clearSelection(QAbstractItemView* self);
void QAbstractItemView_setCurrentIndex(QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_scrollToTop(QAbstractItemView* self);
void QAbstractItemView_scrollToBottom(QAbstractItemView* self);
void QAbstractItemView_update(QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_dataChanged(QAbstractItemView* self, QModelIndex* topLeft, QModelIndex* bottomRight, struct miqt_array /* of int */  roles);
void QAbstractItemView_rowsInserted(QAbstractItemView* self, QModelIndex* parent, int start, int end);
void QAbstractItemView_rowsAboutToBeRemoved(QAbstractItemView* self, QModelIndex* parent, int start, int end);
void QAbstractItemView_selectionChanged(QAbstractItemView* self, QItemSelection* selected, QItemSelection* deselected);
void QAbstractItemView_currentChanged(QAbstractItemView* self, QModelIndex* current, QModelIndex* previous);
void QAbstractItemView_updateEditorData(QAbstractItemView* self);
void QAbstractItemView_updateEditorGeometries(QAbstractItemView* self);
void QAbstractItemView_updateGeometries(QAbstractItemView* self);
void QAbstractItemView_verticalScrollbarAction(QAbstractItemView* self, int action);
void QAbstractItemView_horizontalScrollbarAction(QAbstractItemView* self, int action);
void QAbstractItemView_verticalScrollbarValueChanged(QAbstractItemView* self, int value);
void QAbstractItemView_horizontalScrollbarValueChanged(QAbstractItemView* self, int value);
void QAbstractItemView_closeEditor(QAbstractItemView* self, QWidget* editor, int hint);
void QAbstractItemView_commitData(QAbstractItemView* self, QWidget* editor);
void QAbstractItemView_editorDestroyed(QAbstractItemView* self, QObject* editor);
void QAbstractItemView_pressed(QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_connect_pressed(VirtualQAbstractItemView* self, intptr_t slot, void (*callback)(intptr_t, QModelIndex*), void (*release)(intptr_t));
void QAbstractItemView_clicked(QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_connect_clicked(VirtualQAbstractItemView* self, intptr_t slot, void (*callback)(intptr_t, QModelIndex*), void (*release)(intptr_t));
void QAbstractItemView_doubleClicked(QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_connect_doubleClicked(VirtualQAbstractItemView* self, intptr_t slot, void (*callback)(intptr_t, QModelIndex*), void (*release)(intptr_t));
void QAbstractItemView_activated(QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_connect_activated(VirtualQAbstractItemView* self, intptr_t slot, void (*callback)(intptr_t, QModelIndex*), void (*release)(intptr_t));
void QAbstractItemView_entered(QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_connect_entered(VirtualQAbstractItemView* self, intptr_t slot, void (*callback)(intptr_t, QModelIndex*), void (*release)(intptr_t));
void QAbstractItemView_viewportEntered(QAbstractItemView* self);
void QAbstractItemView_connect_viewportEntered(VirtualQAbstractItemView* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QAbstractItemView_iconSizeChanged(QAbstractItemView* self, QSize* size);
void QAbstractItemView_connect_iconSizeChanged(VirtualQAbstractItemView* self, intptr_t slot, void (*callback)(intptr_t, QSize*), void (*release)(intptr_t));
QModelIndex* QAbstractItemView_moveCursor(QAbstractItemView* self, int cursorAction, int modifiers);
int QAbstractItemView_horizontalOffset(const QAbstractItemView* self);
int QAbstractItemView_verticalOffset(const QAbstractItemView* self);
bool QAbstractItemView_isIndexHidden(const QAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_setSelection(QAbstractItemView* self, QRect* rect, int command);
QRegion* QAbstractItemView_visualRegionForSelection(const QAbstractItemView* self, QItemSelection* selection);
struct miqt_array /* of QModelIndex* */  QAbstractItemView_selectedIndexes(const QAbstractItemView* self);
bool QAbstractItemView_edit2(QAbstractItemView* self, QModelIndex* index, int trigger, QEvent* event);
int QAbstractItemView_selectionCommand(const QAbstractItemView* self, QModelIndex* index, QEvent* event);
void QAbstractItemView_startDrag(QAbstractItemView* self, int supportedActions);
QStyleOptionViewItem* QAbstractItemView_viewOptions(const QAbstractItemView* self);
bool QAbstractItemView_focusNextPrevChild(QAbstractItemView* self, bool next);
bool QAbstractItemView_event(QAbstractItemView* self, QEvent* event);
bool QAbstractItemView_viewportEvent(QAbstractItemView* self, QEvent* event);
void QAbstractItemView_mousePressEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_mouseMoveEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_mouseReleaseEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_mouseDoubleClickEvent(QAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_dragEnterEvent(QAbstractItemView* self, QDragEnterEvent* event);
void QAbstractItemView_dragMoveEvent(QAbstractItemView* self, QDragMoveEvent* event);
void QAbstractItemView_dragLeaveEvent(QAbstractItemView* self, QDragLeaveEvent* event);
void QAbstractItemView_dropEvent(QAbstractItemView* self, QDropEvent* event);
void QAbstractItemView_focusInEvent(QAbstractItemView* self, QFocusEvent* event);
void QAbstractItemView_focusOutEvent(QAbstractItemView* self, QFocusEvent* event);
void QAbstractItemView_keyPressEvent(QAbstractItemView* self, QKeyEvent* event);
void QAbstractItemView_resizeEvent(QAbstractItemView* self, QResizeEvent* event);
void QAbstractItemView_timerEvent(QAbstractItemView* self, QTimerEvent* event);
void QAbstractItemView_inputMethodEvent(QAbstractItemView* self, QInputMethodEvent* event);
bool QAbstractItemView_eventFilter(QAbstractItemView* self, QObject* object, QEvent* event);
QSize* QAbstractItemView_viewportSizeHint(const QAbstractItemView* self);
struct miqt_string QAbstractItemView_tr2(const char* s, const char* c);
struct miqt_string QAbstractItemView_tr3(const char* s, const char* c, int n);
struct miqt_string QAbstractItemView_trUtf82(const char* s, const char* c);
struct miqt_string QAbstractItemView_trUtf83(const char* s, const char* c, int n);

QMetaObject* QAbstractItemView_virtualbase_metaObject(const VirtualQAbstractItemView* self);
void* QAbstractItemView_virtualbase_metacast(VirtualQAbstractItemView* self, const char* param1);
int QAbstractItemView_virtualbase_metacall(VirtualQAbstractItemView* self, int param1, int param2, void** param3);
void QAbstractItemView_virtualbase_setModel(VirtualQAbstractItemView* self, QAbstractItemModel* model);
void QAbstractItemView_virtualbase_setSelectionModel(VirtualQAbstractItemView* self, QItemSelectionModel* selectionModel);
void QAbstractItemView_virtualbase_keyboardSearch(VirtualQAbstractItemView* self, struct miqt_string search);
QRect* QAbstractItemView_virtualbase_visualRect(const VirtualQAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_virtualbase_scrollTo(VirtualQAbstractItemView* self, QModelIndex* index, int hint);
QModelIndex* QAbstractItemView_virtualbase_indexAt(const VirtualQAbstractItemView* self, QPoint* point);
int QAbstractItemView_virtualbase_sizeHintForRow(const VirtualQAbstractItemView* self, int row);
int QAbstractItemView_virtualbase_sizeHintForColumn(const VirtualQAbstractItemView* self, int column);
QVariant* QAbstractItemView_virtualbase_inputMethodQuery(const VirtualQAbstractItemView* self, int query);
void QAbstractItemView_virtualbase_reset(VirtualQAbstractItemView* self);
void QAbstractItemView_virtualbase_setRootIndex(VirtualQAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_virtualbase_doItemsLayout(VirtualQAbstractItemView* self);
void QAbstractItemView_virtualbase_selectAll(VirtualQAbstractItemView* self);
void QAbstractItemView_virtualbase_dataChanged(VirtualQAbstractItemView* self, QModelIndex* topLeft, QModelIndex* bottomRight, struct miqt_array /* of int */  roles);
void QAbstractItemView_virtualbase_rowsInserted(VirtualQAbstractItemView* self, QModelIndex* parent, int start, int end);
void QAbstractItemView_virtualbase_rowsAboutToBeRemoved(VirtualQAbstractItemView* self, QModelIndex* parent, int start, int end);
void QAbstractItemView_virtualbase_selectionChanged(VirtualQAbstractItemView* self, QItemSelection* selected, QItemSelection* deselected);
void QAbstractItemView_virtualbase_currentChanged(VirtualQAbstractItemView* self, QModelIndex* current, QModelIndex* previous);
void QAbstractItemView_virtualbase_updateEditorData(VirtualQAbstractItemView* self);
void QAbstractItemView_virtualbase_updateEditorGeometries(VirtualQAbstractItemView* self);
void QAbstractItemView_virtualbase_updateGeometries(VirtualQAbstractItemView* self);
void QAbstractItemView_virtualbase_verticalScrollbarAction(VirtualQAbstractItemView* self, int action);
void QAbstractItemView_virtualbase_horizontalScrollbarAction(VirtualQAbstractItemView* self, int action);
void QAbstractItemView_virtualbase_verticalScrollbarValueChanged(VirtualQAbstractItemView* self, int value);
void QAbstractItemView_virtualbase_horizontalScrollbarValueChanged(VirtualQAbstractItemView* self, int value);
void QAbstractItemView_virtualbase_closeEditor(VirtualQAbstractItemView* self, QWidget* editor, int hint);
void QAbstractItemView_virtualbase_commitData(VirtualQAbstractItemView* self, QWidget* editor);
void QAbstractItemView_virtualbase_editorDestroyed(VirtualQAbstractItemView* self, QObject* editor);
QModelIndex* QAbstractItemView_virtualbase_moveCursor(VirtualQAbstractItemView* self, int cursorAction, int modifiers);
int QAbstractItemView_virtualbase_horizontalOffset(const VirtualQAbstractItemView* self);
int QAbstractItemView_virtualbase_verticalOffset(const VirtualQAbstractItemView* self);
bool QAbstractItemView_virtualbase_isIndexHidden(const VirtualQAbstractItemView* self, QModelIndex* index);
void QAbstractItemView_virtualbase_setSelection(VirtualQAbstractItemView* self, QRect* rect, int command);
QRegion* QAbstractItemView_virtualbase_visualRegionForSelection(const VirtualQAbstractItemView* self, QItemSelection* selection);
struct miqt_array /* of QModelIndex* */  QAbstractItemView_virtualbase_selectedIndexes(const VirtualQAbstractItemView* self);
bool QAbstractItemView_virtualbase_edit2(VirtualQAbstractItemView* self, QModelIndex* index, int trigger, QEvent* event);
int QAbstractItemView_virtualbase_selectionCommand(const VirtualQAbstractItemView* self, QModelIndex* index, QEvent* event);
void QAbstractItemView_virtualbase_startDrag(VirtualQAbstractItemView* self, int supportedActions);
QStyleOptionViewItem* QAbstractItemView_virtualbase_viewOptions(const VirtualQAbstractItemView* self);
bool QAbstractItemView_virtualbase_focusNextPrevChild(VirtualQAbstractItemView* self, bool next);
bool QAbstractItemView_virtualbase_event(VirtualQAbstractItemView* self, QEvent* event);
bool QAbstractItemView_virtualbase_viewportEvent(VirtualQAbstractItemView* self, QEvent* event);
void QAbstractItemView_virtualbase_mousePressEvent(VirtualQAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_virtualbase_mouseMoveEvent(VirtualQAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_virtualbase_mouseReleaseEvent(VirtualQAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_virtualbase_mouseDoubleClickEvent(VirtualQAbstractItemView* self, QMouseEvent* event);
void QAbstractItemView_virtualbase_dragEnterEvent(VirtualQAbstractItemView* self, QDragEnterEvent* event);
void QAbstractItemView_virtualbase_dragMoveEvent(VirtualQAbstractItemView* self, QDragMoveEvent* event);
void QAbstractItemView_virtualbase_dragLeaveEvent(VirtualQAbstractItemView* self, QDragLeaveEvent* event);
void QAbstractItemView_virtualbase_dropEvent(VirtualQAbstractItemView* self, QDropEvent* event);
void QAbstractItemView_virtualbase_focusInEvent(VirtualQAbstractItemView* self, QFocusEvent* event);
void QAbstractItemView_virtualbase_focusOutEvent(VirtualQAbstractItemView* self, QFocusEvent* event);
void QAbstractItemView_virtualbase_keyPressEvent(VirtualQAbstractItemView* self, QKeyEvent* event);
void QAbstractItemView_virtualbase_resizeEvent(VirtualQAbstractItemView* self, QResizeEvent* event);
void QAbstractItemView_virtualbase_timerEvent(VirtualQAbstractItemView* self, QTimerEvent* event);
void QAbstractItemView_virtualbase_inputMethodEvent(VirtualQAbstractItemView* self, QInputMethodEvent* event);
bool QAbstractItemView_virtualbase_eventFilter(VirtualQAbstractItemView* self, QObject* object, QEvent* event);
QSize* QAbstractItemView_virtualbase_viewportSizeHint(const VirtualQAbstractItemView* self);
QSize* QAbstractItemView_virtualbase_minimumSizeHint(const VirtualQAbstractItemView* self);
QSize* QAbstractItemView_virtualbase_sizeHint(const VirtualQAbstractItemView* self);
void QAbstractItemView_virtualbase_setupViewport(VirtualQAbstractItemView* self, QWidget* viewport);
void QAbstractItemView_virtualbase_paintEvent(VirtualQAbstractItemView* self, QPaintEvent* param1);
void QAbstractItemView_virtualbase_wheelEvent(VirtualQAbstractItemView* self, QWheelEvent* param1);
void QAbstractItemView_virtualbase_contextMenuEvent(VirtualQAbstractItemView* self, QContextMenuEvent* param1);
void QAbstractItemView_virtualbase_scrollContentsBy(VirtualQAbstractItemView* self, int dx, int dy);
void QAbstractItemView_virtualbase_changeEvent(VirtualQAbstractItemView* self, QEvent* param1);
int QAbstractItemView_virtualbase_devType(const VirtualQAbstractItemView* self);
void QAbstractItemView_virtualbase_setVisible(VirtualQAbstractItemView* self, bool visible);
int QAbstractItemView_virtualbase_heightForWidth(const VirtualQAbstractItemView* self, int param1);
bool QAbstractItemView_virtualbase_hasHeightForWidth(const VirtualQAbstractItemView* self);
QPaintEngine* QAbstractItemView_virtualbase_paintEngine(const VirtualQAbstractItemView* self);
void QAbstractItemView_virtualbase_keyReleaseEvent(VirtualQAbstractItemView* self, QKeyEvent* event);
void QAbstractItemView_virtualbase_enterEvent(VirtualQAbstractItemView* self, QEvent* event);
void QAbstractItemView_virtualbase_leaveEvent(VirtualQAbstractItemView* self, QEvent* event);
void QAbstractItemView_virtualbase_moveEvent(VirtualQAbstractItemView* self, QMoveEvent* event);
void QAbstractItemView_virtualbase_closeEvent(VirtualQAbstractItemView* self, QCloseEvent* event);
void QAbstractItemView_virtualbase_tabletEvent(VirtualQAbstractItemView* self, QTabletEvent* event);
void QAbstractItemView_virtualbase_actionEvent(VirtualQAbstractItemView* self, QActionEvent* event);
void QAbstractItemView_virtualbase_showEvent(VirtualQAbstractItemView* self, QShowEvent* event);
void QAbstractItemView_virtualbase_hideEvent(VirtualQAbstractItemView* self, QHideEvent* event);
bool QAbstractItemView_virtualbase_nativeEvent(VirtualQAbstractItemView* self, struct miqt_string eventType, void* message, long* result);
int QAbstractItemView_virtualbase_metric(const VirtualQAbstractItemView* self, int param1);
void QAbstractItemView_virtualbase_initPainter(const VirtualQAbstractItemView* self, QPainter* painter);
QPaintDevice* QAbstractItemView_virtualbase_redirected(const VirtualQAbstractItemView* self, QPoint* offset);
QPainter* QAbstractItemView_virtualbase_sharedPainter(const VirtualQAbstractItemView* self);
void QAbstractItemView_virtualbase_childEvent(VirtualQAbstractItemView* self, QChildEvent* event);
void QAbstractItemView_virtualbase_customEvent(VirtualQAbstractItemView* self, QEvent* event);
void QAbstractItemView_virtualbase_connectNotify(VirtualQAbstractItemView* self, QMetaMethod* signal);
void QAbstractItemView_virtualbase_disconnectNotify(VirtualQAbstractItemView* self, QMetaMethod* signal);

void QAbstractItemView_protectedbase_setHorizontalStepsPerItem(VirtualQAbstractItemView* self, int steps);
int QAbstractItemView_protectedbase_horizontalStepsPerItem(const VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_setVerticalStepsPerItem(VirtualQAbstractItemView* self, int steps);
int QAbstractItemView_protectedbase_verticalStepsPerItem(const VirtualQAbstractItemView* self);
int QAbstractItemView_protectedbase_state(const VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_setState(VirtualQAbstractItemView* self, int state);
void QAbstractItemView_protectedbase_scheduleDelayedItemsLayout(VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_executeDelayedItemsLayout(VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_setDirtyRegion(VirtualQAbstractItemView* self, QRegion* region);
void QAbstractItemView_protectedbase_scrollDirtyRegion(VirtualQAbstractItemView* self, int dx, int dy);
QPoint* QAbstractItemView_protectedbase_dirtyRegionOffset(const VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_startAutoScroll(VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_stopAutoScroll(VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_doAutoScroll(VirtualQAbstractItemView* self);
int QAbstractItemView_protectedbase_dropIndicatorPosition(const VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_setViewportMargins(VirtualQAbstractItemView* self, int left, int top, int right, int bottom);
QMargins* QAbstractItemView_protectedbase_viewportMargins(const VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_drawFrame(VirtualQAbstractItemView* self, QPainter* param1);
void QAbstractItemView_protectedbase_initStyleOption(const VirtualQAbstractItemView* self, QStyleOptionFrame* option);
void QAbstractItemView_protectedbase_updateMicroFocus(VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_create(VirtualQAbstractItemView* self);
void QAbstractItemView_protectedbase_destroy(VirtualQAbstractItemView* self);
bool QAbstractItemView_protectedbase_focusNextChild(VirtualQAbstractItemView* self);
bool QAbstractItemView_protectedbase_focusPreviousChild(VirtualQAbstractItemView* self);
QObject* QAbstractItemView_protectedbase_sender(const VirtualQAbstractItemView* self);
int QAbstractItemView_protectedbase_senderSignalIndex(const VirtualQAbstractItemView* self);
int QAbstractItemView_protectedbase_receivers(const VirtualQAbstractItemView* self, const char* signal);
bool QAbstractItemView_protectedbase_isSignalConnected(const VirtualQAbstractItemView* self, QMetaMethod* signal);

const QMetaObject* QAbstractItemView_staticMetaObject();
void QAbstractItemView_delete(QAbstractItemView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
