#pragma once
#ifndef SEAQT_QTWIDGETS_GEN_QGRAPHICSITEM_H
#define SEAQT_QTWIDGETS_GEN_QGRAPHICSITEM_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../libseaqt/libseaqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAbstractGraphicsShapeItem;
class QBrush;
class QChildEvent;
class QColor;
class QCursor;
class QEvent;
class QFocusEvent;
class QFont;
class QGraphicsEffect;
class QGraphicsEllipseItem;
class QGraphicsItem;
class QGraphicsItemGroup;
class QGraphicsLineItem;
class QGraphicsObject;
class QGraphicsPathItem;
class QGraphicsPixmapItem;
class QGraphicsPolygonItem;
class QGraphicsRectItem;
class QGraphicsScene;
class QGraphicsSceneContextMenuEvent;
class QGraphicsSceneDragDropEvent;
class QGraphicsSceneHoverEvent;
class QGraphicsSceneMouseEvent;
class QGraphicsSceneWheelEvent;
class QGraphicsSimpleTextItem;
class QGraphicsTextItem;
class QGraphicsTransform;
class QGraphicsWidget;
class QInputMethodEvent;
class QKeyEvent;
class QLineF;
class QMetaMethod;
class QMetaObject;
class QObject;
class QPainter;
class QPainterPath;
class QPen;
class QPixmap;
class QPointF;
class QRectF;
class QRegion;
class QSize;
class QStyleOptionGraphicsItem;
class QTextCursor;
class QTextDocument;
class QTimerEvent;
class QTransform;
class QVariant;
class QWidget;
#else
typedef struct QAbstractGraphicsShapeItem QAbstractGraphicsShapeItem;
typedef struct QBrush QBrush;
typedef struct QChildEvent QChildEvent;
typedef struct QColor QColor;
typedef struct QCursor QCursor;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QGraphicsEffect QGraphicsEffect;
typedef struct QGraphicsEllipseItem QGraphicsEllipseItem;
typedef struct QGraphicsItem QGraphicsItem;
typedef struct QGraphicsItemGroup QGraphicsItemGroup;
typedef struct QGraphicsLineItem QGraphicsLineItem;
typedef struct QGraphicsObject QGraphicsObject;
typedef struct QGraphicsPathItem QGraphicsPathItem;
typedef struct QGraphicsPixmapItem QGraphicsPixmapItem;
typedef struct QGraphicsPolygonItem QGraphicsPolygonItem;
typedef struct QGraphicsRectItem QGraphicsRectItem;
typedef struct QGraphicsScene QGraphicsScene;
typedef struct QGraphicsSceneContextMenuEvent QGraphicsSceneContextMenuEvent;
typedef struct QGraphicsSceneDragDropEvent QGraphicsSceneDragDropEvent;
typedef struct QGraphicsSceneHoverEvent QGraphicsSceneHoverEvent;
typedef struct QGraphicsSceneMouseEvent QGraphicsSceneMouseEvent;
typedef struct QGraphicsSceneWheelEvent QGraphicsSceneWheelEvent;
typedef struct QGraphicsSimpleTextItem QGraphicsSimpleTextItem;
typedef struct QGraphicsTextItem QGraphicsTextItem;
typedef struct QGraphicsTransform QGraphicsTransform;
typedef struct QGraphicsWidget QGraphicsWidget;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QLineF QLineF;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QObject QObject;
typedef struct QPainter QPainter;
typedef struct QPainterPath QPainterPath;
typedef struct QPen QPen;
typedef struct QPixmap QPixmap;
typedef struct QPointF QPointF;
typedef struct QRectF QRectF;
typedef struct QRegion QRegion;
typedef struct QSize QSize;
typedef struct QStyleOptionGraphicsItem QStyleOptionGraphicsItem;
typedef struct QTextCursor QTextCursor;
typedef struct QTextDocument QTextDocument;
typedef struct QTimerEvent QTimerEvent;
typedef struct QTransform QTransform;
typedef struct QVariant QVariant;
typedef struct QWidget QWidget;
#endif

typedef struct VirtualQGraphicsItem VirtualQGraphicsItem;
typedef struct QGraphicsItem_VTable{
	void (*destructor)(VirtualQGraphicsItem* self);
	void (*advance)(VirtualQGraphicsItem* self, int phase);
	QRectF* (*boundingRect)(const VirtualQGraphicsItem* self);
	QPainterPath* (*shape)(const VirtualQGraphicsItem* self);
	bool (*contains)(const VirtualQGraphicsItem* self, QPointF* point);
	bool (*collidesWithItem)(const VirtualQGraphicsItem* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsItem* self, QPainterPath* path, int mode);
	bool (*isObscuredBy)(const VirtualQGraphicsItem* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsItem* self);
	void (*paint)(VirtualQGraphicsItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	int (*type)(const VirtualQGraphicsItem* self);
	bool (*sceneEventFilter)(VirtualQGraphicsItem* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQGraphicsItem* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsItem* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQGraphicsItem* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsItem* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsItem* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsItem* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsItem* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsItem* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsItem* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsItem* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsItem* self, int query);
	QVariant* (*itemChange)(VirtualQGraphicsItem* self, int change, QVariant* value);
	bool (*supportsExtension)(const VirtualQGraphicsItem* self, int extension);
	void (*setExtension)(VirtualQGraphicsItem* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsItem* self, QVariant* variant);
}QGraphicsItem_VTable;

const QGraphicsItem_VTable* QGraphicsItem_vtbl(const VirtualQGraphicsItem* self);
void* QGraphicsItem_vdata(const VirtualQGraphicsItem* self);
void QGraphicsItem_setVdata(VirtualQGraphicsItem* self, void* vdata);

VirtualQGraphicsItem* QGraphicsItem_new(const QGraphicsItem_VTable* vtbl, void* vdata);
VirtualQGraphicsItem* QGraphicsItem_new2(const QGraphicsItem_VTable* vtbl, void* vdata, QGraphicsItem* parent);

QGraphicsScene* QGraphicsItem_scene(const QGraphicsItem* self);
QGraphicsItem* QGraphicsItem_parentItem(const QGraphicsItem* self);
QGraphicsItem* QGraphicsItem_topLevelItem(const QGraphicsItem* self);
QGraphicsObject* QGraphicsItem_parentObject(const QGraphicsItem* self);
QGraphicsWidget* QGraphicsItem_parentWidget(const QGraphicsItem* self);
QGraphicsWidget* QGraphicsItem_topLevelWidget(const QGraphicsItem* self);
QGraphicsWidget* QGraphicsItem_window(const QGraphicsItem* self);
QGraphicsItem* QGraphicsItem_panel(const QGraphicsItem* self);
void QGraphicsItem_setParentItem(QGraphicsItem* self, QGraphicsItem* parent);
struct miqt_array /* of QGraphicsItem* */  QGraphicsItem_childItems(const QGraphicsItem* self);
bool QGraphicsItem_isWidget(const QGraphicsItem* self);
bool QGraphicsItem_isWindow(const QGraphicsItem* self);
bool QGraphicsItem_isPanel(const QGraphicsItem* self);
QGraphicsObject* QGraphicsItem_toGraphicsObject(QGraphicsItem* self);
QGraphicsObject* QGraphicsItem_toGraphicsObject2(const QGraphicsItem* self);
QGraphicsItemGroup* QGraphicsItem_group(const QGraphicsItem* self);
void QGraphicsItem_setGroup(QGraphicsItem* self, QGraphicsItemGroup* group);
int QGraphicsItem_flags(const QGraphicsItem* self);
void QGraphicsItem_setFlag(QGraphicsItem* self, int flag);
void QGraphicsItem_setFlags(QGraphicsItem* self, int flags);
int QGraphicsItem_cacheMode(const QGraphicsItem* self);
void QGraphicsItem_setCacheMode(QGraphicsItem* self, int mode);
int QGraphicsItem_panelModality(const QGraphicsItem* self);
void QGraphicsItem_setPanelModality(QGraphicsItem* self, int panelModality);
bool QGraphicsItem_isBlockedByModalPanel(const QGraphicsItem* self);
struct miqt_string QGraphicsItem_toolTip(const QGraphicsItem* self);
void QGraphicsItem_setToolTip(QGraphicsItem* self, struct miqt_string toolTip);
QCursor* QGraphicsItem_cursor(const QGraphicsItem* self);
void QGraphicsItem_setCursor(QGraphicsItem* self, QCursor* cursor);
bool QGraphicsItem_hasCursor(const QGraphicsItem* self);
void QGraphicsItem_unsetCursor(QGraphicsItem* self);
bool QGraphicsItem_isVisible(const QGraphicsItem* self);
bool QGraphicsItem_isVisibleTo(const QGraphicsItem* self, QGraphicsItem* parent);
void QGraphicsItem_setVisible(QGraphicsItem* self, bool visible);
void QGraphicsItem_hide(QGraphicsItem* self);
void QGraphicsItem_show(QGraphicsItem* self);
bool QGraphicsItem_isEnabled(const QGraphicsItem* self);
void QGraphicsItem_setEnabled(QGraphicsItem* self, bool enabled);
bool QGraphicsItem_isSelected(const QGraphicsItem* self);
void QGraphicsItem_setSelected(QGraphicsItem* self, bool selected);
bool QGraphicsItem_acceptDrops(const QGraphicsItem* self);
void QGraphicsItem_setAcceptDrops(QGraphicsItem* self, bool on);
double QGraphicsItem_opacity(const QGraphicsItem* self);
double QGraphicsItem_effectiveOpacity(const QGraphicsItem* self);
void QGraphicsItem_setOpacity(QGraphicsItem* self, double opacity);
QGraphicsEffect* QGraphicsItem_graphicsEffect(const QGraphicsItem* self);
void QGraphicsItem_setGraphicsEffect(QGraphicsItem* self, QGraphicsEffect* effect);
int QGraphicsItem_acceptedMouseButtons(const QGraphicsItem* self);
void QGraphicsItem_setAcceptedMouseButtons(QGraphicsItem* self, int buttons);
bool QGraphicsItem_acceptHoverEvents(const QGraphicsItem* self);
void QGraphicsItem_setAcceptHoverEvents(QGraphicsItem* self, bool enabled);
bool QGraphicsItem_acceptTouchEvents(const QGraphicsItem* self);
void QGraphicsItem_setAcceptTouchEvents(QGraphicsItem* self, bool enabled);
bool QGraphicsItem_filtersChildEvents(const QGraphicsItem* self);
void QGraphicsItem_setFiltersChildEvents(QGraphicsItem* self, bool enabled);
bool QGraphicsItem_handlesChildEvents(const QGraphicsItem* self);
void QGraphicsItem_setHandlesChildEvents(QGraphicsItem* self, bool enabled);
bool QGraphicsItem_isActive(const QGraphicsItem* self);
void QGraphicsItem_setActive(QGraphicsItem* self, bool active);
bool QGraphicsItem_hasFocus(const QGraphicsItem* self);
void QGraphicsItem_setFocus(QGraphicsItem* self);
void QGraphicsItem_clearFocus(QGraphicsItem* self);
QGraphicsItem* QGraphicsItem_focusProxy(const QGraphicsItem* self);
void QGraphicsItem_setFocusProxy(QGraphicsItem* self, QGraphicsItem* item);
QGraphicsItem* QGraphicsItem_focusItem(const QGraphicsItem* self);
QGraphicsItem* QGraphicsItem_focusScopeItem(const QGraphicsItem* self);
void QGraphicsItem_grabMouse(QGraphicsItem* self);
void QGraphicsItem_ungrabMouse(QGraphicsItem* self);
void QGraphicsItem_grabKeyboard(QGraphicsItem* self);
void QGraphicsItem_ungrabKeyboard(QGraphicsItem* self);
QPointF* QGraphicsItem_pos(const QGraphicsItem* self);
double QGraphicsItem_x(const QGraphicsItem* self);
void QGraphicsItem_setX(QGraphicsItem* self, double x);
double QGraphicsItem_y(const QGraphicsItem* self);
void QGraphicsItem_setY(QGraphicsItem* self, double y);
QPointF* QGraphicsItem_scenePos(const QGraphicsItem* self);
void QGraphicsItem_setPos(QGraphicsItem* self, QPointF* pos);
void QGraphicsItem_setPos2(QGraphicsItem* self, double x, double y);
void QGraphicsItem_moveBy(QGraphicsItem* self, double dx, double dy);
void QGraphicsItem_ensureVisible(QGraphicsItem* self);
void QGraphicsItem_ensureVisible2(QGraphicsItem* self, double x, double y, double w, double h);
QTransform* QGraphicsItem_transform(const QGraphicsItem* self);
QTransform* QGraphicsItem_sceneTransform(const QGraphicsItem* self);
QTransform* QGraphicsItem_deviceTransform(const QGraphicsItem* self, QTransform* viewportTransform);
QTransform* QGraphicsItem_itemTransform(const QGraphicsItem* self, QGraphicsItem* other);
void QGraphicsItem_setTransform(QGraphicsItem* self, QTransform* matrix);
void QGraphicsItem_resetTransform(QGraphicsItem* self);
void QGraphicsItem_setRotation(QGraphicsItem* self, double angle);
double QGraphicsItem_rotation(const QGraphicsItem* self);
void QGraphicsItem_setScale(QGraphicsItem* self, double scale);
double QGraphicsItem_scale(const QGraphicsItem* self);
struct miqt_array /* of QGraphicsTransform* */  QGraphicsItem_transformations(const QGraphicsItem* self);
void QGraphicsItem_setTransformations(QGraphicsItem* self, struct miqt_array /* of QGraphicsTransform* */  transformations);
QPointF* QGraphicsItem_transformOriginPoint(const QGraphicsItem* self);
void QGraphicsItem_setTransformOriginPoint(QGraphicsItem* self, QPointF* origin);
void QGraphicsItem_setTransformOriginPoint2(QGraphicsItem* self, double ax, double ay);
void QGraphicsItem_advance(QGraphicsItem* self, int phase);
double QGraphicsItem_zValue(const QGraphicsItem* self);
void QGraphicsItem_setZValue(QGraphicsItem* self, double z);
void QGraphicsItem_stackBefore(QGraphicsItem* self, QGraphicsItem* sibling);
QRectF* QGraphicsItem_boundingRect(const QGraphicsItem* self);
QRectF* QGraphicsItem_childrenBoundingRect(const QGraphicsItem* self);
QRectF* QGraphicsItem_sceneBoundingRect(const QGraphicsItem* self);
QPainterPath* QGraphicsItem_shape(const QGraphicsItem* self);
bool QGraphicsItem_isClipped(const QGraphicsItem* self);
QPainterPath* QGraphicsItem_clipPath(const QGraphicsItem* self);
bool QGraphicsItem_contains(const QGraphicsItem* self, QPointF* point);
bool QGraphicsItem_collidesWithItem(const QGraphicsItem* self, QGraphicsItem* other, int mode);
bool QGraphicsItem_collidesWithPath(const QGraphicsItem* self, QPainterPath* path, int mode);
struct miqt_array /* of QGraphicsItem* */  QGraphicsItem_collidingItems(const QGraphicsItem* self);
bool QGraphicsItem_isObscured(const QGraphicsItem* self);
bool QGraphicsItem_isObscured2(const QGraphicsItem* self, double x, double y, double w, double h);
bool QGraphicsItem_isObscuredBy(const QGraphicsItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsItem_opaqueArea(const QGraphicsItem* self);
QRegion* QGraphicsItem_boundingRegion(const QGraphicsItem* self, QTransform* itemToDeviceTransform);
double QGraphicsItem_boundingRegionGranularity(const QGraphicsItem* self);
void QGraphicsItem_setBoundingRegionGranularity(QGraphicsItem* self, double granularity);
void QGraphicsItem_paint(QGraphicsItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
void QGraphicsItem_update(QGraphicsItem* self);
void QGraphicsItem_update2(QGraphicsItem* self, double x, double y, double width, double height);
void QGraphicsItem_scroll(QGraphicsItem* self, double dx, double dy);
QPointF* QGraphicsItem_mapToItem(const QGraphicsItem* self, QGraphicsItem* item, QPointF* point);
QPointF* QGraphicsItem_mapToParent(const QGraphicsItem* self, QPointF* point);
QPointF* QGraphicsItem_mapToScene(const QGraphicsItem* self, QPointF* point);
QRectF* QGraphicsItem_mapRectToItem(const QGraphicsItem* self, QGraphicsItem* item, QRectF* rect);
QRectF* QGraphicsItem_mapRectToParent(const QGraphicsItem* self, QRectF* rect);
QRectF* QGraphicsItem_mapRectToScene(const QGraphicsItem* self, QRectF* rect);
QPainterPath* QGraphicsItem_mapToItem4(const QGraphicsItem* self, QGraphicsItem* item, QPainterPath* path);
QPainterPath* QGraphicsItem_mapToParentWithPath(const QGraphicsItem* self, QPainterPath* path);
QPainterPath* QGraphicsItem_mapToSceneWithPath(const QGraphicsItem* self, QPainterPath* path);
QPointF* QGraphicsItem_mapFromItem(const QGraphicsItem* self, QGraphicsItem* item, QPointF* point);
QPointF* QGraphicsItem_mapFromParent(const QGraphicsItem* self, QPointF* point);
QPointF* QGraphicsItem_mapFromScene(const QGraphicsItem* self, QPointF* point);
QRectF* QGraphicsItem_mapRectFromItem(const QGraphicsItem* self, QGraphicsItem* item, QRectF* rect);
QRectF* QGraphicsItem_mapRectFromParent(const QGraphicsItem* self, QRectF* rect);
QRectF* QGraphicsItem_mapRectFromScene(const QGraphicsItem* self, QRectF* rect);
QPainterPath* QGraphicsItem_mapFromItem4(const QGraphicsItem* self, QGraphicsItem* item, QPainterPath* path);
QPainterPath* QGraphicsItem_mapFromParentWithPath(const QGraphicsItem* self, QPainterPath* path);
QPainterPath* QGraphicsItem_mapFromSceneWithPath(const QGraphicsItem* self, QPainterPath* path);
QPointF* QGraphicsItem_mapToItem5(const QGraphicsItem* self, QGraphicsItem* item, double x, double y);
QPointF* QGraphicsItem_mapToParent2(const QGraphicsItem* self, double x, double y);
QPointF* QGraphicsItem_mapToScene2(const QGraphicsItem* self, double x, double y);
QRectF* QGraphicsItem_mapRectToItem2(const QGraphicsItem* self, QGraphicsItem* item, double x, double y, double w, double h);
QRectF* QGraphicsItem_mapRectToParent2(const QGraphicsItem* self, double x, double y, double w, double h);
QRectF* QGraphicsItem_mapRectToScene2(const QGraphicsItem* self, double x, double y, double w, double h);
QPointF* QGraphicsItem_mapFromItem5(const QGraphicsItem* self, QGraphicsItem* item, double x, double y);
QPointF* QGraphicsItem_mapFromParent2(const QGraphicsItem* self, double x, double y);
QPointF* QGraphicsItem_mapFromScene2(const QGraphicsItem* self, double x, double y);
QRectF* QGraphicsItem_mapRectFromItem2(const QGraphicsItem* self, QGraphicsItem* item, double x, double y, double w, double h);
QRectF* QGraphicsItem_mapRectFromParent2(const QGraphicsItem* self, double x, double y, double w, double h);
QRectF* QGraphicsItem_mapRectFromScene2(const QGraphicsItem* self, double x, double y, double w, double h);
bool QGraphicsItem_isAncestorOf(const QGraphicsItem* self, QGraphicsItem* child);
QGraphicsItem* QGraphicsItem_commonAncestorItem(const QGraphicsItem* self, QGraphicsItem* other);
bool QGraphicsItem_isUnderMouse(const QGraphicsItem* self);
QVariant* QGraphicsItem_data(const QGraphicsItem* self, int key);
void QGraphicsItem_setData(QGraphicsItem* self, int key, QVariant* value);
int QGraphicsItem_inputMethodHints(const QGraphicsItem* self);
void QGraphicsItem_setInputMethodHints(QGraphicsItem* self, int hints);
int QGraphicsItem_type(const QGraphicsItem* self);
void QGraphicsItem_installSceneEventFilter(QGraphicsItem* self, QGraphicsItem* filterItem);
void QGraphicsItem_removeSceneEventFilter(QGraphicsItem* self, QGraphicsItem* filterItem);
bool QGraphicsItem_sceneEventFilter(QGraphicsItem* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsItem_sceneEvent(QGraphicsItem* self, QEvent* event);
void QGraphicsItem_contextMenuEvent(QGraphicsItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsItem_dragEnterEvent(QGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItem_dragLeaveEvent(QGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItem_dragMoveEvent(QGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItem_dropEvent(QGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItem_focusInEvent(QGraphicsItem* self, QFocusEvent* event);
void QGraphicsItem_focusOutEvent(QGraphicsItem* self, QFocusEvent* event);
void QGraphicsItem_hoverEnterEvent(QGraphicsItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsItem_hoverMoveEvent(QGraphicsItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsItem_hoverLeaveEvent(QGraphicsItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsItem_keyPressEvent(QGraphicsItem* self, QKeyEvent* event);
void QGraphicsItem_keyReleaseEvent(QGraphicsItem* self, QKeyEvent* event);
void QGraphicsItem_mousePressEvent(QGraphicsItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItem_mouseMoveEvent(QGraphicsItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItem_mouseReleaseEvent(QGraphicsItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItem_mouseDoubleClickEvent(QGraphicsItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItem_wheelEvent(QGraphicsItem* self, QGraphicsSceneWheelEvent* event);
void QGraphicsItem_inputMethodEvent(QGraphicsItem* self, QInputMethodEvent* event);
QVariant* QGraphicsItem_inputMethodQuery(const QGraphicsItem* self, int query);
QVariant* QGraphicsItem_itemChange(QGraphicsItem* self, int change, QVariant* value);
bool QGraphicsItem_supportsExtension(const QGraphicsItem* self, int extension);
void QGraphicsItem_setExtension(QGraphicsItem* self, int extension, QVariant* variant);
QVariant* QGraphicsItem_extension(const QGraphicsItem* self, QVariant* variant);
void QGraphicsItem_setFlag2(QGraphicsItem* self, int flag, bool enabled);
void QGraphicsItem_setCacheMode2(QGraphicsItem* self, int mode, QSize* cacheSize);
void QGraphicsItem_setFocus1(QGraphicsItem* self, int focusReason);
void QGraphicsItem_ensureVisible1(QGraphicsItem* self, QRectF* rect);
void QGraphicsItem_ensureVisible22(QGraphicsItem* self, QRectF* rect, int xmargin);
void QGraphicsItem_ensureVisible3(QGraphicsItem* self, QRectF* rect, int xmargin, int ymargin);
void QGraphicsItem_ensureVisible5(QGraphicsItem* self, double x, double y, double w, double h, int xmargin);
void QGraphicsItem_ensureVisible6(QGraphicsItem* self, double x, double y, double w, double h, int xmargin, int ymargin);
QTransform* QGraphicsItem_itemTransform2(const QGraphicsItem* self, QGraphicsItem* other, bool* ok);
void QGraphicsItem_setTransform2(QGraphicsItem* self, QTransform* matrix, bool combine);
struct miqt_array /* of QGraphicsItem* */  QGraphicsItem_collidingItems1(const QGraphicsItem* self, int mode);
bool QGraphicsItem_isObscured1(const QGraphicsItem* self, QRectF* rect);
void QGraphicsItem_update1(QGraphicsItem* self, QRectF* rect);
void QGraphicsItem_scroll3(QGraphicsItem* self, double dx, double dy, QRectF* rect);

void QGraphicsItem_virtualbase_advance(VirtualQGraphicsItem* self, int phase);
QRectF* QGraphicsItem_virtualbase_boundingRect(const VirtualQGraphicsItem* self);
QPainterPath* QGraphicsItem_virtualbase_shape(const VirtualQGraphicsItem* self);
bool QGraphicsItem_virtualbase_contains(const VirtualQGraphicsItem* self, QPointF* point);
bool QGraphicsItem_virtualbase_collidesWithItem(const VirtualQGraphicsItem* self, QGraphicsItem* other, int mode);
bool QGraphicsItem_virtualbase_collidesWithPath(const VirtualQGraphicsItem* self, QPainterPath* path, int mode);
bool QGraphicsItem_virtualbase_isObscuredBy(const VirtualQGraphicsItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsItem_virtualbase_opaqueArea(const VirtualQGraphicsItem* self);
void QGraphicsItem_virtualbase_paint(VirtualQGraphicsItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
int QGraphicsItem_virtualbase_type(const VirtualQGraphicsItem* self);
bool QGraphicsItem_virtualbase_sceneEventFilter(VirtualQGraphicsItem* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsItem_virtualbase_sceneEvent(VirtualQGraphicsItem* self, QEvent* event);
void QGraphicsItem_virtualbase_contextMenuEvent(VirtualQGraphicsItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsItem_virtualbase_dragEnterEvent(VirtualQGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItem_virtualbase_dragLeaveEvent(VirtualQGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItem_virtualbase_dragMoveEvent(VirtualQGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItem_virtualbase_dropEvent(VirtualQGraphicsItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItem_virtualbase_focusInEvent(VirtualQGraphicsItem* self, QFocusEvent* event);
void QGraphicsItem_virtualbase_focusOutEvent(VirtualQGraphicsItem* self, QFocusEvent* event);
void QGraphicsItem_virtualbase_hoverEnterEvent(VirtualQGraphicsItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsItem_virtualbase_hoverMoveEvent(VirtualQGraphicsItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsItem_virtualbase_hoverLeaveEvent(VirtualQGraphicsItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsItem_virtualbase_keyPressEvent(VirtualQGraphicsItem* self, QKeyEvent* event);
void QGraphicsItem_virtualbase_keyReleaseEvent(VirtualQGraphicsItem* self, QKeyEvent* event);
void QGraphicsItem_virtualbase_mousePressEvent(VirtualQGraphicsItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItem_virtualbase_mouseMoveEvent(VirtualQGraphicsItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItem_virtualbase_mouseReleaseEvent(VirtualQGraphicsItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItem_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItem_virtualbase_wheelEvent(VirtualQGraphicsItem* self, QGraphicsSceneWheelEvent* event);
void QGraphicsItem_virtualbase_inputMethodEvent(VirtualQGraphicsItem* self, QInputMethodEvent* event);
QVariant* QGraphicsItem_virtualbase_inputMethodQuery(const VirtualQGraphicsItem* self, int query);
QVariant* QGraphicsItem_virtualbase_itemChange(VirtualQGraphicsItem* self, int change, QVariant* value);
bool QGraphicsItem_virtualbase_supportsExtension(const VirtualQGraphicsItem* self, int extension);
void QGraphicsItem_virtualbase_setExtension(VirtualQGraphicsItem* self, int extension, QVariant* variant);
QVariant* QGraphicsItem_virtualbase_extension(const VirtualQGraphicsItem* self, QVariant* variant);

void QGraphicsItem_protectedbase_updateMicroFocus(VirtualQGraphicsItem* self);
void QGraphicsItem_protectedbase_addToIndex(VirtualQGraphicsItem* self);
void QGraphicsItem_protectedbase_removeFromIndex(VirtualQGraphicsItem* self);
void QGraphicsItem_protectedbase_prepareGeometryChange(VirtualQGraphicsItem* self);

void QGraphicsItem_delete(QGraphicsItem* self);

typedef struct VirtualQGraphicsObject VirtualQGraphicsObject;
typedef struct QGraphicsObject_VTable{
	void (*destructor)(VirtualQGraphicsObject* self);
	QMetaObject* (*metaObject)(const VirtualQGraphicsObject* self);
	void* (*metacast)(VirtualQGraphicsObject* self, const char* param1);
	int (*metacall)(VirtualQGraphicsObject* self, int param1, int param2, void** param3);
	bool (*event)(VirtualQGraphicsObject* self, QEvent* ev);
	bool (*eventFilter)(VirtualQGraphicsObject* self, QObject* watched, QEvent* event);
	void (*timerEvent)(VirtualQGraphicsObject* self, QTimerEvent* event);
	void (*childEvent)(VirtualQGraphicsObject* self, QChildEvent* event);
	void (*customEvent)(VirtualQGraphicsObject* self, QEvent* event);
	void (*connectNotify)(VirtualQGraphicsObject* self, QMetaMethod* signal);
	void (*disconnectNotify)(VirtualQGraphicsObject* self, QMetaMethod* signal);
	void (*advance)(VirtualQGraphicsObject* self, int phase);
	QRectF* (*boundingRect)(const VirtualQGraphicsObject* self);
	QPainterPath* (*shape)(const VirtualQGraphicsObject* self);
	bool (*contains)(const VirtualQGraphicsObject* self, QPointF* point);
	bool (*collidesWithItem)(const VirtualQGraphicsObject* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsObject* self, QPainterPath* path, int mode);
	bool (*isObscuredBy)(const VirtualQGraphicsObject* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsObject* self);
	void (*paint)(VirtualQGraphicsObject* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	int (*type)(const VirtualQGraphicsObject* self);
	bool (*sceneEventFilter)(VirtualQGraphicsObject* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQGraphicsObject* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsObject* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsObject* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsObject* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsObject* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsObject* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQGraphicsObject* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsObject* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsObject* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsObject* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsObject* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsObject* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsObject* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsObject* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsObject* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsObject* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsObject* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsObject* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsObject* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsObject* self, int query);
	QVariant* (*itemChange)(VirtualQGraphicsObject* self, int change, QVariant* value);
	bool (*supportsExtension)(const VirtualQGraphicsObject* self, int extension);
	void (*setExtension)(VirtualQGraphicsObject* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsObject* self, QVariant* variant);
}QGraphicsObject_VTable;

const QGraphicsObject_VTable* QGraphicsObject_vtbl(const VirtualQGraphicsObject* self);
void* QGraphicsObject_vdata(const VirtualQGraphicsObject* self);
void QGraphicsObject_setVdata(VirtualQGraphicsObject* self, void* vdata);

VirtualQGraphicsObject* QGraphicsObject_new(const QGraphicsObject_VTable* vtbl, void* vdata);
VirtualQGraphicsObject* QGraphicsObject_new2(const QGraphicsObject_VTable* vtbl, void* vdata, QGraphicsItem* parent);

void QGraphicsObject_virtbase(QGraphicsObject* src, QObject** outptr_QObject, QGraphicsItem** outptr_QGraphicsItem);
QMetaObject* QGraphicsObject_metaObject(const QGraphicsObject* self);
void* QGraphicsObject_metacast(QGraphicsObject* self, const char* param1);
int QGraphicsObject_metacall(QGraphicsObject* self, int param1, int param2, void** param3);
struct miqt_string QGraphicsObject_tr(const char* s);
void QGraphicsObject_grabGesture(QGraphicsObject* self, int type);
void QGraphicsObject_ungrabGesture(QGraphicsObject* self, int type);
void QGraphicsObject_parentChanged(QGraphicsObject* self);
void QGraphicsObject_connect_parentChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_opacityChanged(QGraphicsObject* self);
void QGraphicsObject_connect_opacityChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_visibleChanged(QGraphicsObject* self);
void QGraphicsObject_connect_visibleChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_enabledChanged(QGraphicsObject* self);
void QGraphicsObject_connect_enabledChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_xChanged(QGraphicsObject* self);
void QGraphicsObject_connect_xChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_yChanged(QGraphicsObject* self);
void QGraphicsObject_connect_yChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_zChanged(QGraphicsObject* self);
void QGraphicsObject_connect_zChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_rotationChanged(QGraphicsObject* self);
void QGraphicsObject_connect_rotationChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_scaleChanged(QGraphicsObject* self);
void QGraphicsObject_connect_scaleChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_childrenChanged(QGraphicsObject* self);
void QGraphicsObject_connect_childrenChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_widthChanged(QGraphicsObject* self);
void QGraphicsObject_connect_widthChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsObject_heightChanged(QGraphicsObject* self);
void QGraphicsObject_connect_heightChanged(VirtualQGraphicsObject* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
bool QGraphicsObject_event(QGraphicsObject* self, QEvent* ev);
struct miqt_string QGraphicsObject_tr2(const char* s, const char* c);
struct miqt_string QGraphicsObject_tr3(const char* s, const char* c, int n);
void QGraphicsObject_grabGesture2(QGraphicsObject* self, int type, int flags);

QMetaObject* QGraphicsObject_virtualbase_metaObject(const VirtualQGraphicsObject* self);
void* QGraphicsObject_virtualbase_metacast(VirtualQGraphicsObject* self, const char* param1);
int QGraphicsObject_virtualbase_metacall(VirtualQGraphicsObject* self, int param1, int param2, void** param3);
bool QGraphicsObject_virtualbase_event(VirtualQGraphicsObject* self, QEvent* ev);
bool QGraphicsObject_virtualbase_eventFilter(VirtualQGraphicsObject* self, QObject* watched, QEvent* event);
void QGraphicsObject_virtualbase_timerEvent(VirtualQGraphicsObject* self, QTimerEvent* event);
void QGraphicsObject_virtualbase_childEvent(VirtualQGraphicsObject* self, QChildEvent* event);
void QGraphicsObject_virtualbase_customEvent(VirtualQGraphicsObject* self, QEvent* event);
void QGraphicsObject_virtualbase_connectNotify(VirtualQGraphicsObject* self, QMetaMethod* signal);
void QGraphicsObject_virtualbase_disconnectNotify(VirtualQGraphicsObject* self, QMetaMethod* signal);
void QGraphicsObject_virtualbase_advance(VirtualQGraphicsObject* self, int phase);
QRectF* QGraphicsObject_virtualbase_boundingRect(const VirtualQGraphicsObject* self);
QPainterPath* QGraphicsObject_virtualbase_shape(const VirtualQGraphicsObject* self);
bool QGraphicsObject_virtualbase_contains(const VirtualQGraphicsObject* self, QPointF* point);
bool QGraphicsObject_virtualbase_collidesWithItem(const VirtualQGraphicsObject* self, QGraphicsItem* other, int mode);
bool QGraphicsObject_virtualbase_collidesWithPath(const VirtualQGraphicsObject* self, QPainterPath* path, int mode);
bool QGraphicsObject_virtualbase_isObscuredBy(const VirtualQGraphicsObject* self, QGraphicsItem* item);
QPainterPath* QGraphicsObject_virtualbase_opaqueArea(const VirtualQGraphicsObject* self);
void QGraphicsObject_virtualbase_paint(VirtualQGraphicsObject* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
int QGraphicsObject_virtualbase_type(const VirtualQGraphicsObject* self);
bool QGraphicsObject_virtualbase_sceneEventFilter(VirtualQGraphicsObject* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsObject_virtualbase_sceneEvent(VirtualQGraphicsObject* self, QEvent* event);
void QGraphicsObject_virtualbase_contextMenuEvent(VirtualQGraphicsObject* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsObject_virtualbase_dragEnterEvent(VirtualQGraphicsObject* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsObject_virtualbase_dragLeaveEvent(VirtualQGraphicsObject* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsObject_virtualbase_dragMoveEvent(VirtualQGraphicsObject* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsObject_virtualbase_dropEvent(VirtualQGraphicsObject* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsObject_virtualbase_focusInEvent(VirtualQGraphicsObject* self, QFocusEvent* event);
void QGraphicsObject_virtualbase_focusOutEvent(VirtualQGraphicsObject* self, QFocusEvent* event);
void QGraphicsObject_virtualbase_hoverEnterEvent(VirtualQGraphicsObject* self, QGraphicsSceneHoverEvent* event);
void QGraphicsObject_virtualbase_hoverMoveEvent(VirtualQGraphicsObject* self, QGraphicsSceneHoverEvent* event);
void QGraphicsObject_virtualbase_hoverLeaveEvent(VirtualQGraphicsObject* self, QGraphicsSceneHoverEvent* event);
void QGraphicsObject_virtualbase_keyPressEvent(VirtualQGraphicsObject* self, QKeyEvent* event);
void QGraphicsObject_virtualbase_keyReleaseEvent(VirtualQGraphicsObject* self, QKeyEvent* event);
void QGraphicsObject_virtualbase_mousePressEvent(VirtualQGraphicsObject* self, QGraphicsSceneMouseEvent* event);
void QGraphicsObject_virtualbase_mouseMoveEvent(VirtualQGraphicsObject* self, QGraphicsSceneMouseEvent* event);
void QGraphicsObject_virtualbase_mouseReleaseEvent(VirtualQGraphicsObject* self, QGraphicsSceneMouseEvent* event);
void QGraphicsObject_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsObject* self, QGraphicsSceneMouseEvent* event);
void QGraphicsObject_virtualbase_wheelEvent(VirtualQGraphicsObject* self, QGraphicsSceneWheelEvent* event);
void QGraphicsObject_virtualbase_inputMethodEvent(VirtualQGraphicsObject* self, QInputMethodEvent* event);
QVariant* QGraphicsObject_virtualbase_inputMethodQuery(const VirtualQGraphicsObject* self, int query);
QVariant* QGraphicsObject_virtualbase_itemChange(VirtualQGraphicsObject* self, int change, QVariant* value);
bool QGraphicsObject_virtualbase_supportsExtension(const VirtualQGraphicsObject* self, int extension);
void QGraphicsObject_virtualbase_setExtension(VirtualQGraphicsObject* self, int extension, QVariant* variant);
QVariant* QGraphicsObject_virtualbase_extension(const VirtualQGraphicsObject* self, QVariant* variant);

void QGraphicsObject_protectedbase_updateMicroFocus(VirtualQGraphicsObject* self);
QObject* QGraphicsObject_protectedbase_sender(const VirtualQGraphicsObject* self);
int QGraphicsObject_protectedbase_senderSignalIndex(const VirtualQGraphicsObject* self);
int QGraphicsObject_protectedbase_receivers(const VirtualQGraphicsObject* self, const char* signal);
bool QGraphicsObject_protectedbase_isSignalConnected(const VirtualQGraphicsObject* self, QMetaMethod* signal);
void QGraphicsObject_protectedbase_addToIndex(VirtualQGraphicsObject* self);
void QGraphicsObject_protectedbase_removeFromIndex(VirtualQGraphicsObject* self);
void QGraphicsObject_protectedbase_prepareGeometryChange(VirtualQGraphicsObject* self);

const QMetaObject* QGraphicsObject_staticMetaObject();
void QGraphicsObject_delete(QGraphicsObject* self);

typedef struct VirtualQAbstractGraphicsShapeItem VirtualQAbstractGraphicsShapeItem;
typedef struct QAbstractGraphicsShapeItem_VTable{
	void (*destructor)(VirtualQAbstractGraphicsShapeItem* self);
	bool (*isObscuredBy)(const VirtualQAbstractGraphicsShapeItem* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQAbstractGraphicsShapeItem* self);
	void (*advance)(VirtualQAbstractGraphicsShapeItem* self, int phase);
	QRectF* (*boundingRect)(const VirtualQAbstractGraphicsShapeItem* self);
	QPainterPath* (*shape)(const VirtualQAbstractGraphicsShapeItem* self);
	bool (*contains)(const VirtualQAbstractGraphicsShapeItem* self, QPointF* point);
	bool (*collidesWithItem)(const VirtualQAbstractGraphicsShapeItem* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQAbstractGraphicsShapeItem* self, QPainterPath* path, int mode);
	void (*paint)(VirtualQAbstractGraphicsShapeItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	int (*type)(const VirtualQAbstractGraphicsShapeItem* self);
	bool (*sceneEventFilter)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQAbstractGraphicsShapeItem* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQAbstractGraphicsShapeItem* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQAbstractGraphicsShapeItem* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQAbstractGraphicsShapeItem* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQAbstractGraphicsShapeItem* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQAbstractGraphicsShapeItem* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQAbstractGraphicsShapeItem* self, int query);
	QVariant* (*itemChange)(VirtualQAbstractGraphicsShapeItem* self, int change, QVariant* value);
	bool (*supportsExtension)(const VirtualQAbstractGraphicsShapeItem* self, int extension);
	void (*setExtension)(VirtualQAbstractGraphicsShapeItem* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQAbstractGraphicsShapeItem* self, QVariant* variant);
}QAbstractGraphicsShapeItem_VTable;

const QAbstractGraphicsShapeItem_VTable* QAbstractGraphicsShapeItem_vtbl(const VirtualQAbstractGraphicsShapeItem* self);
void* QAbstractGraphicsShapeItem_vdata(const VirtualQAbstractGraphicsShapeItem* self);
void QAbstractGraphicsShapeItem_setVdata(VirtualQAbstractGraphicsShapeItem* self, void* vdata);

VirtualQAbstractGraphicsShapeItem* QAbstractGraphicsShapeItem_new(const QAbstractGraphicsShapeItem_VTable* vtbl, void* vdata);
VirtualQAbstractGraphicsShapeItem* QAbstractGraphicsShapeItem_new2(const QAbstractGraphicsShapeItem_VTable* vtbl, void* vdata, QGraphicsItem* parent);

void QAbstractGraphicsShapeItem_virtbase(QAbstractGraphicsShapeItem* src, QGraphicsItem** outptr_QGraphicsItem);
QPen* QAbstractGraphicsShapeItem_pen(const QAbstractGraphicsShapeItem* self);
void QAbstractGraphicsShapeItem_setPen(QAbstractGraphicsShapeItem* self, QPen* pen);
QBrush* QAbstractGraphicsShapeItem_brush(const QAbstractGraphicsShapeItem* self);
void QAbstractGraphicsShapeItem_setBrush(QAbstractGraphicsShapeItem* self, QBrush* brush);
bool QAbstractGraphicsShapeItem_isObscuredBy(const QAbstractGraphicsShapeItem* self, QGraphicsItem* item);
QPainterPath* QAbstractGraphicsShapeItem_opaqueArea(const QAbstractGraphicsShapeItem* self);

bool QAbstractGraphicsShapeItem_virtualbase_isObscuredBy(const VirtualQAbstractGraphicsShapeItem* self, QGraphicsItem* item);
QPainterPath* QAbstractGraphicsShapeItem_virtualbase_opaqueArea(const VirtualQAbstractGraphicsShapeItem* self);
void QAbstractGraphicsShapeItem_virtualbase_advance(VirtualQAbstractGraphicsShapeItem* self, int phase);
QRectF* QAbstractGraphicsShapeItem_virtualbase_boundingRect(const VirtualQAbstractGraphicsShapeItem* self);
QPainterPath* QAbstractGraphicsShapeItem_virtualbase_shape(const VirtualQAbstractGraphicsShapeItem* self);
bool QAbstractGraphicsShapeItem_virtualbase_contains(const VirtualQAbstractGraphicsShapeItem* self, QPointF* point);
bool QAbstractGraphicsShapeItem_virtualbase_collidesWithItem(const VirtualQAbstractGraphicsShapeItem* self, QGraphicsItem* other, int mode);
bool QAbstractGraphicsShapeItem_virtualbase_collidesWithPath(const VirtualQAbstractGraphicsShapeItem* self, QPainterPath* path, int mode);
void QAbstractGraphicsShapeItem_virtualbase_paint(VirtualQAbstractGraphicsShapeItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
int QAbstractGraphicsShapeItem_virtualbase_type(const VirtualQAbstractGraphicsShapeItem* self);
bool QAbstractGraphicsShapeItem_virtualbase_sceneEventFilter(VirtualQAbstractGraphicsShapeItem* self, QGraphicsItem* watched, QEvent* event);
bool QAbstractGraphicsShapeItem_virtualbase_sceneEvent(VirtualQAbstractGraphicsShapeItem* self, QEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_contextMenuEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneContextMenuEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_dragEnterEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneDragDropEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_dragLeaveEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneDragDropEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_dragMoveEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneDragDropEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_dropEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneDragDropEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_focusInEvent(VirtualQAbstractGraphicsShapeItem* self, QFocusEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_focusOutEvent(VirtualQAbstractGraphicsShapeItem* self, QFocusEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_hoverEnterEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneHoverEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_hoverMoveEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneHoverEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_hoverLeaveEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneHoverEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_keyPressEvent(VirtualQAbstractGraphicsShapeItem* self, QKeyEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_keyReleaseEvent(VirtualQAbstractGraphicsShapeItem* self, QKeyEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_mousePressEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneMouseEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_mouseMoveEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneMouseEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_mouseReleaseEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneMouseEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_mouseDoubleClickEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneMouseEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_wheelEvent(VirtualQAbstractGraphicsShapeItem* self, QGraphicsSceneWheelEvent* event);
void QAbstractGraphicsShapeItem_virtualbase_inputMethodEvent(VirtualQAbstractGraphicsShapeItem* self, QInputMethodEvent* event);
QVariant* QAbstractGraphicsShapeItem_virtualbase_inputMethodQuery(const VirtualQAbstractGraphicsShapeItem* self, int query);
QVariant* QAbstractGraphicsShapeItem_virtualbase_itemChange(VirtualQAbstractGraphicsShapeItem* self, int change, QVariant* value);
bool QAbstractGraphicsShapeItem_virtualbase_supportsExtension(const VirtualQAbstractGraphicsShapeItem* self, int extension);
void QAbstractGraphicsShapeItem_virtualbase_setExtension(VirtualQAbstractGraphicsShapeItem* self, int extension, QVariant* variant);
QVariant* QAbstractGraphicsShapeItem_virtualbase_extension(const VirtualQAbstractGraphicsShapeItem* self, QVariant* variant);

void QAbstractGraphicsShapeItem_protectedbase_updateMicroFocus(VirtualQAbstractGraphicsShapeItem* self);
void QAbstractGraphicsShapeItem_protectedbase_addToIndex(VirtualQAbstractGraphicsShapeItem* self);
void QAbstractGraphicsShapeItem_protectedbase_removeFromIndex(VirtualQAbstractGraphicsShapeItem* self);
void QAbstractGraphicsShapeItem_protectedbase_prepareGeometryChange(VirtualQAbstractGraphicsShapeItem* self);

void QAbstractGraphicsShapeItem_delete(QAbstractGraphicsShapeItem* self);

typedef struct VirtualQGraphicsPathItem VirtualQGraphicsPathItem;
typedef struct QGraphicsPathItem_VTable{
	void (*destructor)(VirtualQGraphicsPathItem* self);
	QRectF* (*boundingRect)(const VirtualQGraphicsPathItem* self);
	QPainterPath* (*shape)(const VirtualQGraphicsPathItem* self);
	bool (*contains)(const VirtualQGraphicsPathItem* self, QPointF* point);
	void (*paint)(VirtualQGraphicsPathItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	bool (*isObscuredBy)(const VirtualQGraphicsPathItem* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsPathItem* self);
	int (*type)(const VirtualQGraphicsPathItem* self);
	bool (*supportsExtension)(const VirtualQGraphicsPathItem* self, int extension);
	void (*setExtension)(VirtualQGraphicsPathItem* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsPathItem* self, QVariant* variant);
	void (*advance)(VirtualQGraphicsPathItem* self, int phase);
	bool (*collidesWithItem)(const VirtualQGraphicsPathItem* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsPathItem* self, QPainterPath* path, int mode);
	bool (*sceneEventFilter)(VirtualQGraphicsPathItem* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQGraphicsPathItem* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQGraphicsPathItem* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsPathItem* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsPathItem* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsPathItem* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsPathItem* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsPathItem* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsPathItem* self, int query);
	QVariant* (*itemChange)(VirtualQGraphicsPathItem* self, int change, QVariant* value);
}QGraphicsPathItem_VTable;

const QGraphicsPathItem_VTable* QGraphicsPathItem_vtbl(const VirtualQGraphicsPathItem* self);
void* QGraphicsPathItem_vdata(const VirtualQGraphicsPathItem* self);
void QGraphicsPathItem_setVdata(VirtualQGraphicsPathItem* self, void* vdata);

VirtualQGraphicsPathItem* QGraphicsPathItem_new(const QGraphicsPathItem_VTable* vtbl, void* vdata);
VirtualQGraphicsPathItem* QGraphicsPathItem_new2(const QGraphicsPathItem_VTable* vtbl, void* vdata, QPainterPath* path);
VirtualQGraphicsPathItem* QGraphicsPathItem_new3(const QGraphicsPathItem_VTable* vtbl, void* vdata, QGraphicsItem* parent);
VirtualQGraphicsPathItem* QGraphicsPathItem_new4(const QGraphicsPathItem_VTable* vtbl, void* vdata, QPainterPath* path, QGraphicsItem* parent);

void QGraphicsPathItem_virtbase(QGraphicsPathItem* src, QAbstractGraphicsShapeItem** outptr_QAbstractGraphicsShapeItem);
QPainterPath* QGraphicsPathItem_path(const QGraphicsPathItem* self);
void QGraphicsPathItem_setPath(QGraphicsPathItem* self, QPainterPath* path);
QRectF* QGraphicsPathItem_boundingRect(const QGraphicsPathItem* self);
QPainterPath* QGraphicsPathItem_shape(const QGraphicsPathItem* self);
bool QGraphicsPathItem_contains(const QGraphicsPathItem* self, QPointF* point);
void QGraphicsPathItem_paint(QGraphicsPathItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsPathItem_isObscuredBy(const QGraphicsPathItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsPathItem_opaqueArea(const QGraphicsPathItem* self);
int QGraphicsPathItem_type(const QGraphicsPathItem* self);
bool QGraphicsPathItem_supportsExtension(const QGraphicsPathItem* self, int extension);
void QGraphicsPathItem_setExtension(QGraphicsPathItem* self, int extension, QVariant* variant);
QVariant* QGraphicsPathItem_extension(const QGraphicsPathItem* self, QVariant* variant);

QRectF* QGraphicsPathItem_virtualbase_boundingRect(const VirtualQGraphicsPathItem* self);
QPainterPath* QGraphicsPathItem_virtualbase_shape(const VirtualQGraphicsPathItem* self);
bool QGraphicsPathItem_virtualbase_contains(const VirtualQGraphicsPathItem* self, QPointF* point);
void QGraphicsPathItem_virtualbase_paint(VirtualQGraphicsPathItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsPathItem_virtualbase_isObscuredBy(const VirtualQGraphicsPathItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsPathItem_virtualbase_opaqueArea(const VirtualQGraphicsPathItem* self);
int QGraphicsPathItem_virtualbase_type(const VirtualQGraphicsPathItem* self);
bool QGraphicsPathItem_virtualbase_supportsExtension(const VirtualQGraphicsPathItem* self, int extension);
void QGraphicsPathItem_virtualbase_setExtension(VirtualQGraphicsPathItem* self, int extension, QVariant* variant);
QVariant* QGraphicsPathItem_virtualbase_extension(const VirtualQGraphicsPathItem* self, QVariant* variant);
void QGraphicsPathItem_virtualbase_advance(VirtualQGraphicsPathItem* self, int phase);
bool QGraphicsPathItem_virtualbase_collidesWithItem(const VirtualQGraphicsPathItem* self, QGraphicsItem* other, int mode);
bool QGraphicsPathItem_virtualbase_collidesWithPath(const VirtualQGraphicsPathItem* self, QPainterPath* path, int mode);
bool QGraphicsPathItem_virtualbase_sceneEventFilter(VirtualQGraphicsPathItem* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsPathItem_virtualbase_sceneEvent(VirtualQGraphicsPathItem* self, QEvent* event);
void QGraphicsPathItem_virtualbase_contextMenuEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsPathItem_virtualbase_dragEnterEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPathItem_virtualbase_dragLeaveEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPathItem_virtualbase_dragMoveEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPathItem_virtualbase_dropEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPathItem_virtualbase_focusInEvent(VirtualQGraphicsPathItem* self, QFocusEvent* event);
void QGraphicsPathItem_virtualbase_focusOutEvent(VirtualQGraphicsPathItem* self, QFocusEvent* event);
void QGraphicsPathItem_virtualbase_hoverEnterEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsPathItem_virtualbase_hoverMoveEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsPathItem_virtualbase_hoverLeaveEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsPathItem_virtualbase_keyPressEvent(VirtualQGraphicsPathItem* self, QKeyEvent* event);
void QGraphicsPathItem_virtualbase_keyReleaseEvent(VirtualQGraphicsPathItem* self, QKeyEvent* event);
void QGraphicsPathItem_virtualbase_mousePressEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPathItem_virtualbase_mouseMoveEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPathItem_virtualbase_mouseReleaseEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPathItem_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPathItem_virtualbase_wheelEvent(VirtualQGraphicsPathItem* self, QGraphicsSceneWheelEvent* event);
void QGraphicsPathItem_virtualbase_inputMethodEvent(VirtualQGraphicsPathItem* self, QInputMethodEvent* event);
QVariant* QGraphicsPathItem_virtualbase_inputMethodQuery(const VirtualQGraphicsPathItem* self, int query);
QVariant* QGraphicsPathItem_virtualbase_itemChange(VirtualQGraphicsPathItem* self, int change, QVariant* value);

void QGraphicsPathItem_protectedbase_updateMicroFocus(VirtualQGraphicsPathItem* self);
void QGraphicsPathItem_protectedbase_addToIndex(VirtualQGraphicsPathItem* self);
void QGraphicsPathItem_protectedbase_removeFromIndex(VirtualQGraphicsPathItem* self);
void QGraphicsPathItem_protectedbase_prepareGeometryChange(VirtualQGraphicsPathItem* self);

void QGraphicsPathItem_delete(QGraphicsPathItem* self);

typedef struct VirtualQGraphicsRectItem VirtualQGraphicsRectItem;
typedef struct QGraphicsRectItem_VTable{
	void (*destructor)(VirtualQGraphicsRectItem* self);
	QRectF* (*boundingRect)(const VirtualQGraphicsRectItem* self);
	QPainterPath* (*shape)(const VirtualQGraphicsRectItem* self);
	bool (*contains)(const VirtualQGraphicsRectItem* self, QPointF* point);
	void (*paint)(VirtualQGraphicsRectItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	bool (*isObscuredBy)(const VirtualQGraphicsRectItem* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsRectItem* self);
	int (*type)(const VirtualQGraphicsRectItem* self);
	bool (*supportsExtension)(const VirtualQGraphicsRectItem* self, int extension);
	void (*setExtension)(VirtualQGraphicsRectItem* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsRectItem* self, QVariant* variant);
	void (*advance)(VirtualQGraphicsRectItem* self, int phase);
	bool (*collidesWithItem)(const VirtualQGraphicsRectItem* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsRectItem* self, QPainterPath* path, int mode);
	bool (*sceneEventFilter)(VirtualQGraphicsRectItem* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQGraphicsRectItem* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQGraphicsRectItem* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsRectItem* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsRectItem* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsRectItem* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsRectItem* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsRectItem* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsRectItem* self, int query);
	QVariant* (*itemChange)(VirtualQGraphicsRectItem* self, int change, QVariant* value);
}QGraphicsRectItem_VTable;

const QGraphicsRectItem_VTable* QGraphicsRectItem_vtbl(const VirtualQGraphicsRectItem* self);
void* QGraphicsRectItem_vdata(const VirtualQGraphicsRectItem* self);
void QGraphicsRectItem_setVdata(VirtualQGraphicsRectItem* self, void* vdata);

VirtualQGraphicsRectItem* QGraphicsRectItem_new(const QGraphicsRectItem_VTable* vtbl, void* vdata);
VirtualQGraphicsRectItem* QGraphicsRectItem_new2(const QGraphicsRectItem_VTable* vtbl, void* vdata, QRectF* rect);
VirtualQGraphicsRectItem* QGraphicsRectItem_new3(const QGraphicsRectItem_VTable* vtbl, void* vdata, double x, double y, double w, double h);
VirtualQGraphicsRectItem* QGraphicsRectItem_new4(const QGraphicsRectItem_VTable* vtbl, void* vdata, QGraphicsItem* parent);
VirtualQGraphicsRectItem* QGraphicsRectItem_new5(const QGraphicsRectItem_VTable* vtbl, void* vdata, QRectF* rect, QGraphicsItem* parent);
VirtualQGraphicsRectItem* QGraphicsRectItem_new6(const QGraphicsRectItem_VTable* vtbl, void* vdata, double x, double y, double w, double h, QGraphicsItem* parent);

void QGraphicsRectItem_virtbase(QGraphicsRectItem* src, QAbstractGraphicsShapeItem** outptr_QAbstractGraphicsShapeItem);
QRectF* QGraphicsRectItem_rect(const QGraphicsRectItem* self);
void QGraphicsRectItem_setRect(QGraphicsRectItem* self, QRectF* rect);
void QGraphicsRectItem_setRect2(QGraphicsRectItem* self, double x, double y, double w, double h);
QRectF* QGraphicsRectItem_boundingRect(const QGraphicsRectItem* self);
QPainterPath* QGraphicsRectItem_shape(const QGraphicsRectItem* self);
bool QGraphicsRectItem_contains(const QGraphicsRectItem* self, QPointF* point);
void QGraphicsRectItem_paint(QGraphicsRectItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsRectItem_isObscuredBy(const QGraphicsRectItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsRectItem_opaqueArea(const QGraphicsRectItem* self);
int QGraphicsRectItem_type(const QGraphicsRectItem* self);
bool QGraphicsRectItem_supportsExtension(const QGraphicsRectItem* self, int extension);
void QGraphicsRectItem_setExtension(QGraphicsRectItem* self, int extension, QVariant* variant);
QVariant* QGraphicsRectItem_extension(const QGraphicsRectItem* self, QVariant* variant);

QRectF* QGraphicsRectItem_virtualbase_boundingRect(const VirtualQGraphicsRectItem* self);
QPainterPath* QGraphicsRectItem_virtualbase_shape(const VirtualQGraphicsRectItem* self);
bool QGraphicsRectItem_virtualbase_contains(const VirtualQGraphicsRectItem* self, QPointF* point);
void QGraphicsRectItem_virtualbase_paint(VirtualQGraphicsRectItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsRectItem_virtualbase_isObscuredBy(const VirtualQGraphicsRectItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsRectItem_virtualbase_opaqueArea(const VirtualQGraphicsRectItem* self);
int QGraphicsRectItem_virtualbase_type(const VirtualQGraphicsRectItem* self);
bool QGraphicsRectItem_virtualbase_supportsExtension(const VirtualQGraphicsRectItem* self, int extension);
void QGraphicsRectItem_virtualbase_setExtension(VirtualQGraphicsRectItem* self, int extension, QVariant* variant);
QVariant* QGraphicsRectItem_virtualbase_extension(const VirtualQGraphicsRectItem* self, QVariant* variant);
void QGraphicsRectItem_virtualbase_advance(VirtualQGraphicsRectItem* self, int phase);
bool QGraphicsRectItem_virtualbase_collidesWithItem(const VirtualQGraphicsRectItem* self, QGraphicsItem* other, int mode);
bool QGraphicsRectItem_virtualbase_collidesWithPath(const VirtualQGraphicsRectItem* self, QPainterPath* path, int mode);
bool QGraphicsRectItem_virtualbase_sceneEventFilter(VirtualQGraphicsRectItem* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsRectItem_virtualbase_sceneEvent(VirtualQGraphicsRectItem* self, QEvent* event);
void QGraphicsRectItem_virtualbase_contextMenuEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsRectItem_virtualbase_dragEnterEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsRectItem_virtualbase_dragLeaveEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsRectItem_virtualbase_dragMoveEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsRectItem_virtualbase_dropEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsRectItem_virtualbase_focusInEvent(VirtualQGraphicsRectItem* self, QFocusEvent* event);
void QGraphicsRectItem_virtualbase_focusOutEvent(VirtualQGraphicsRectItem* self, QFocusEvent* event);
void QGraphicsRectItem_virtualbase_hoverEnterEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsRectItem_virtualbase_hoverMoveEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsRectItem_virtualbase_hoverLeaveEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsRectItem_virtualbase_keyPressEvent(VirtualQGraphicsRectItem* self, QKeyEvent* event);
void QGraphicsRectItem_virtualbase_keyReleaseEvent(VirtualQGraphicsRectItem* self, QKeyEvent* event);
void QGraphicsRectItem_virtualbase_mousePressEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsRectItem_virtualbase_mouseMoveEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsRectItem_virtualbase_mouseReleaseEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsRectItem_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsRectItem_virtualbase_wheelEvent(VirtualQGraphicsRectItem* self, QGraphicsSceneWheelEvent* event);
void QGraphicsRectItem_virtualbase_inputMethodEvent(VirtualQGraphicsRectItem* self, QInputMethodEvent* event);
QVariant* QGraphicsRectItem_virtualbase_inputMethodQuery(const VirtualQGraphicsRectItem* self, int query);
QVariant* QGraphicsRectItem_virtualbase_itemChange(VirtualQGraphicsRectItem* self, int change, QVariant* value);

void QGraphicsRectItem_protectedbase_updateMicroFocus(VirtualQGraphicsRectItem* self);
void QGraphicsRectItem_protectedbase_addToIndex(VirtualQGraphicsRectItem* self);
void QGraphicsRectItem_protectedbase_removeFromIndex(VirtualQGraphicsRectItem* self);
void QGraphicsRectItem_protectedbase_prepareGeometryChange(VirtualQGraphicsRectItem* self);

void QGraphicsRectItem_delete(QGraphicsRectItem* self);

typedef struct VirtualQGraphicsEllipseItem VirtualQGraphicsEllipseItem;
typedef struct QGraphicsEllipseItem_VTable{
	void (*destructor)(VirtualQGraphicsEllipseItem* self);
	QRectF* (*boundingRect)(const VirtualQGraphicsEllipseItem* self);
	QPainterPath* (*shape)(const VirtualQGraphicsEllipseItem* self);
	bool (*contains)(const VirtualQGraphicsEllipseItem* self, QPointF* point);
	void (*paint)(VirtualQGraphicsEllipseItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	bool (*isObscuredBy)(const VirtualQGraphicsEllipseItem* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsEllipseItem* self);
	int (*type)(const VirtualQGraphicsEllipseItem* self);
	bool (*supportsExtension)(const VirtualQGraphicsEllipseItem* self, int extension);
	void (*setExtension)(VirtualQGraphicsEllipseItem* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsEllipseItem* self, QVariant* variant);
	void (*advance)(VirtualQGraphicsEllipseItem* self, int phase);
	bool (*collidesWithItem)(const VirtualQGraphicsEllipseItem* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsEllipseItem* self, QPainterPath* path, int mode);
	bool (*sceneEventFilter)(VirtualQGraphicsEllipseItem* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQGraphicsEllipseItem* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQGraphicsEllipseItem* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsEllipseItem* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsEllipseItem* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsEllipseItem* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsEllipseItem* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsEllipseItem* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsEllipseItem* self, int query);
	QVariant* (*itemChange)(VirtualQGraphicsEllipseItem* self, int change, QVariant* value);
}QGraphicsEllipseItem_VTable;

const QGraphicsEllipseItem_VTable* QGraphicsEllipseItem_vtbl(const VirtualQGraphicsEllipseItem* self);
void* QGraphicsEllipseItem_vdata(const VirtualQGraphicsEllipseItem* self);
void QGraphicsEllipseItem_setVdata(VirtualQGraphicsEllipseItem* self, void* vdata);

VirtualQGraphicsEllipseItem* QGraphicsEllipseItem_new(const QGraphicsEllipseItem_VTable* vtbl, void* vdata);
VirtualQGraphicsEllipseItem* QGraphicsEllipseItem_new2(const QGraphicsEllipseItem_VTable* vtbl, void* vdata, QRectF* rect);
VirtualQGraphicsEllipseItem* QGraphicsEllipseItem_new3(const QGraphicsEllipseItem_VTable* vtbl, void* vdata, double x, double y, double w, double h);
VirtualQGraphicsEllipseItem* QGraphicsEllipseItem_new4(const QGraphicsEllipseItem_VTable* vtbl, void* vdata, QGraphicsItem* parent);
VirtualQGraphicsEllipseItem* QGraphicsEllipseItem_new5(const QGraphicsEllipseItem_VTable* vtbl, void* vdata, QRectF* rect, QGraphicsItem* parent);
VirtualQGraphicsEllipseItem* QGraphicsEllipseItem_new6(const QGraphicsEllipseItem_VTable* vtbl, void* vdata, double x, double y, double w, double h, QGraphicsItem* parent);

void QGraphicsEllipseItem_virtbase(QGraphicsEllipseItem* src, QAbstractGraphicsShapeItem** outptr_QAbstractGraphicsShapeItem);
QRectF* QGraphicsEllipseItem_rect(const QGraphicsEllipseItem* self);
void QGraphicsEllipseItem_setRect(QGraphicsEllipseItem* self, QRectF* rect);
void QGraphicsEllipseItem_setRect2(QGraphicsEllipseItem* self, double x, double y, double w, double h);
int QGraphicsEllipseItem_startAngle(const QGraphicsEllipseItem* self);
void QGraphicsEllipseItem_setStartAngle(QGraphicsEllipseItem* self, int angle);
int QGraphicsEllipseItem_spanAngle(const QGraphicsEllipseItem* self);
void QGraphicsEllipseItem_setSpanAngle(QGraphicsEllipseItem* self, int angle);
QRectF* QGraphicsEllipseItem_boundingRect(const QGraphicsEllipseItem* self);
QPainterPath* QGraphicsEllipseItem_shape(const QGraphicsEllipseItem* self);
bool QGraphicsEllipseItem_contains(const QGraphicsEllipseItem* self, QPointF* point);
void QGraphicsEllipseItem_paint(QGraphicsEllipseItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsEllipseItem_isObscuredBy(const QGraphicsEllipseItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsEllipseItem_opaqueArea(const QGraphicsEllipseItem* self);
int QGraphicsEllipseItem_type(const QGraphicsEllipseItem* self);
bool QGraphicsEllipseItem_supportsExtension(const QGraphicsEllipseItem* self, int extension);
void QGraphicsEllipseItem_setExtension(QGraphicsEllipseItem* self, int extension, QVariant* variant);
QVariant* QGraphicsEllipseItem_extension(const QGraphicsEllipseItem* self, QVariant* variant);

QRectF* QGraphicsEllipseItem_virtualbase_boundingRect(const VirtualQGraphicsEllipseItem* self);
QPainterPath* QGraphicsEllipseItem_virtualbase_shape(const VirtualQGraphicsEllipseItem* self);
bool QGraphicsEllipseItem_virtualbase_contains(const VirtualQGraphicsEllipseItem* self, QPointF* point);
void QGraphicsEllipseItem_virtualbase_paint(VirtualQGraphicsEllipseItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsEllipseItem_virtualbase_isObscuredBy(const VirtualQGraphicsEllipseItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsEllipseItem_virtualbase_opaqueArea(const VirtualQGraphicsEllipseItem* self);
int QGraphicsEllipseItem_virtualbase_type(const VirtualQGraphicsEllipseItem* self);
bool QGraphicsEllipseItem_virtualbase_supportsExtension(const VirtualQGraphicsEllipseItem* self, int extension);
void QGraphicsEllipseItem_virtualbase_setExtension(VirtualQGraphicsEllipseItem* self, int extension, QVariant* variant);
QVariant* QGraphicsEllipseItem_virtualbase_extension(const VirtualQGraphicsEllipseItem* self, QVariant* variant);
void QGraphicsEllipseItem_virtualbase_advance(VirtualQGraphicsEllipseItem* self, int phase);
bool QGraphicsEllipseItem_virtualbase_collidesWithItem(const VirtualQGraphicsEllipseItem* self, QGraphicsItem* other, int mode);
bool QGraphicsEllipseItem_virtualbase_collidesWithPath(const VirtualQGraphicsEllipseItem* self, QPainterPath* path, int mode);
bool QGraphicsEllipseItem_virtualbase_sceneEventFilter(VirtualQGraphicsEllipseItem* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsEllipseItem_virtualbase_sceneEvent(VirtualQGraphicsEllipseItem* self, QEvent* event);
void QGraphicsEllipseItem_virtualbase_contextMenuEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsEllipseItem_virtualbase_dragEnterEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsEllipseItem_virtualbase_dragLeaveEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsEllipseItem_virtualbase_dragMoveEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsEllipseItem_virtualbase_dropEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsEllipseItem_virtualbase_focusInEvent(VirtualQGraphicsEllipseItem* self, QFocusEvent* event);
void QGraphicsEllipseItem_virtualbase_focusOutEvent(VirtualQGraphicsEllipseItem* self, QFocusEvent* event);
void QGraphicsEllipseItem_virtualbase_hoverEnterEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsEllipseItem_virtualbase_hoverMoveEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsEllipseItem_virtualbase_hoverLeaveEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsEllipseItem_virtualbase_keyPressEvent(VirtualQGraphicsEllipseItem* self, QKeyEvent* event);
void QGraphicsEllipseItem_virtualbase_keyReleaseEvent(VirtualQGraphicsEllipseItem* self, QKeyEvent* event);
void QGraphicsEllipseItem_virtualbase_mousePressEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsEllipseItem_virtualbase_mouseMoveEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsEllipseItem_virtualbase_mouseReleaseEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsEllipseItem_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsEllipseItem_virtualbase_wheelEvent(VirtualQGraphicsEllipseItem* self, QGraphicsSceneWheelEvent* event);
void QGraphicsEllipseItem_virtualbase_inputMethodEvent(VirtualQGraphicsEllipseItem* self, QInputMethodEvent* event);
QVariant* QGraphicsEllipseItem_virtualbase_inputMethodQuery(const VirtualQGraphicsEllipseItem* self, int query);
QVariant* QGraphicsEllipseItem_virtualbase_itemChange(VirtualQGraphicsEllipseItem* self, int change, QVariant* value);

void QGraphicsEllipseItem_protectedbase_updateMicroFocus(VirtualQGraphicsEllipseItem* self);
void QGraphicsEllipseItem_protectedbase_addToIndex(VirtualQGraphicsEllipseItem* self);
void QGraphicsEllipseItem_protectedbase_removeFromIndex(VirtualQGraphicsEllipseItem* self);
void QGraphicsEllipseItem_protectedbase_prepareGeometryChange(VirtualQGraphicsEllipseItem* self);

void QGraphicsEllipseItem_delete(QGraphicsEllipseItem* self);

typedef struct VirtualQGraphicsPolygonItem VirtualQGraphicsPolygonItem;
typedef struct QGraphicsPolygonItem_VTable{
	void (*destructor)(VirtualQGraphicsPolygonItem* self);
	QRectF* (*boundingRect)(const VirtualQGraphicsPolygonItem* self);
	QPainterPath* (*shape)(const VirtualQGraphicsPolygonItem* self);
	bool (*contains)(const VirtualQGraphicsPolygonItem* self, QPointF* point);
	void (*paint)(VirtualQGraphicsPolygonItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	bool (*isObscuredBy)(const VirtualQGraphicsPolygonItem* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsPolygonItem* self);
	int (*type)(const VirtualQGraphicsPolygonItem* self);
	bool (*supportsExtension)(const VirtualQGraphicsPolygonItem* self, int extension);
	void (*setExtension)(VirtualQGraphicsPolygonItem* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsPolygonItem* self, QVariant* variant);
	void (*advance)(VirtualQGraphicsPolygonItem* self, int phase);
	bool (*collidesWithItem)(const VirtualQGraphicsPolygonItem* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsPolygonItem* self, QPainterPath* path, int mode);
	bool (*sceneEventFilter)(VirtualQGraphicsPolygonItem* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQGraphicsPolygonItem* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQGraphicsPolygonItem* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsPolygonItem* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsPolygonItem* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsPolygonItem* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsPolygonItem* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsPolygonItem* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsPolygonItem* self, int query);
	QVariant* (*itemChange)(VirtualQGraphicsPolygonItem* self, int change, QVariant* value);
}QGraphicsPolygonItem_VTable;

const QGraphicsPolygonItem_VTable* QGraphicsPolygonItem_vtbl(const VirtualQGraphicsPolygonItem* self);
void* QGraphicsPolygonItem_vdata(const VirtualQGraphicsPolygonItem* self);
void QGraphicsPolygonItem_setVdata(VirtualQGraphicsPolygonItem* self, void* vdata);

VirtualQGraphicsPolygonItem* QGraphicsPolygonItem_new(const QGraphicsPolygonItem_VTable* vtbl, void* vdata);
VirtualQGraphicsPolygonItem* QGraphicsPolygonItem_new2(const QGraphicsPolygonItem_VTable* vtbl, void* vdata, QGraphicsItem* parent);

void QGraphicsPolygonItem_virtbase(QGraphicsPolygonItem* src, QAbstractGraphicsShapeItem** outptr_QAbstractGraphicsShapeItem);
int QGraphicsPolygonItem_fillRule(const QGraphicsPolygonItem* self);
void QGraphicsPolygonItem_setFillRule(QGraphicsPolygonItem* self, int rule);
QRectF* QGraphicsPolygonItem_boundingRect(const QGraphicsPolygonItem* self);
QPainterPath* QGraphicsPolygonItem_shape(const QGraphicsPolygonItem* self);
bool QGraphicsPolygonItem_contains(const QGraphicsPolygonItem* self, QPointF* point);
void QGraphicsPolygonItem_paint(QGraphicsPolygonItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsPolygonItem_isObscuredBy(const QGraphicsPolygonItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsPolygonItem_opaqueArea(const QGraphicsPolygonItem* self);
int QGraphicsPolygonItem_type(const QGraphicsPolygonItem* self);
bool QGraphicsPolygonItem_supportsExtension(const QGraphicsPolygonItem* self, int extension);
void QGraphicsPolygonItem_setExtension(QGraphicsPolygonItem* self, int extension, QVariant* variant);
QVariant* QGraphicsPolygonItem_extension(const QGraphicsPolygonItem* self, QVariant* variant);

QRectF* QGraphicsPolygonItem_virtualbase_boundingRect(const VirtualQGraphicsPolygonItem* self);
QPainterPath* QGraphicsPolygonItem_virtualbase_shape(const VirtualQGraphicsPolygonItem* self);
bool QGraphicsPolygonItem_virtualbase_contains(const VirtualQGraphicsPolygonItem* self, QPointF* point);
void QGraphicsPolygonItem_virtualbase_paint(VirtualQGraphicsPolygonItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsPolygonItem_virtualbase_isObscuredBy(const VirtualQGraphicsPolygonItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsPolygonItem_virtualbase_opaqueArea(const VirtualQGraphicsPolygonItem* self);
int QGraphicsPolygonItem_virtualbase_type(const VirtualQGraphicsPolygonItem* self);
bool QGraphicsPolygonItem_virtualbase_supportsExtension(const VirtualQGraphicsPolygonItem* self, int extension);
void QGraphicsPolygonItem_virtualbase_setExtension(VirtualQGraphicsPolygonItem* self, int extension, QVariant* variant);
QVariant* QGraphicsPolygonItem_virtualbase_extension(const VirtualQGraphicsPolygonItem* self, QVariant* variant);
void QGraphicsPolygonItem_virtualbase_advance(VirtualQGraphicsPolygonItem* self, int phase);
bool QGraphicsPolygonItem_virtualbase_collidesWithItem(const VirtualQGraphicsPolygonItem* self, QGraphicsItem* other, int mode);
bool QGraphicsPolygonItem_virtualbase_collidesWithPath(const VirtualQGraphicsPolygonItem* self, QPainterPath* path, int mode);
bool QGraphicsPolygonItem_virtualbase_sceneEventFilter(VirtualQGraphicsPolygonItem* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsPolygonItem_virtualbase_sceneEvent(VirtualQGraphicsPolygonItem* self, QEvent* event);
void QGraphicsPolygonItem_virtualbase_contextMenuEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsPolygonItem_virtualbase_dragEnterEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPolygonItem_virtualbase_dragLeaveEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPolygonItem_virtualbase_dragMoveEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPolygonItem_virtualbase_dropEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPolygonItem_virtualbase_focusInEvent(VirtualQGraphicsPolygonItem* self, QFocusEvent* event);
void QGraphicsPolygonItem_virtualbase_focusOutEvent(VirtualQGraphicsPolygonItem* self, QFocusEvent* event);
void QGraphicsPolygonItem_virtualbase_hoverEnterEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsPolygonItem_virtualbase_hoverMoveEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsPolygonItem_virtualbase_hoverLeaveEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsPolygonItem_virtualbase_keyPressEvent(VirtualQGraphicsPolygonItem* self, QKeyEvent* event);
void QGraphicsPolygonItem_virtualbase_keyReleaseEvent(VirtualQGraphicsPolygonItem* self, QKeyEvent* event);
void QGraphicsPolygonItem_virtualbase_mousePressEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPolygonItem_virtualbase_mouseMoveEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPolygonItem_virtualbase_mouseReleaseEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPolygonItem_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPolygonItem_virtualbase_wheelEvent(VirtualQGraphicsPolygonItem* self, QGraphicsSceneWheelEvent* event);
void QGraphicsPolygonItem_virtualbase_inputMethodEvent(VirtualQGraphicsPolygonItem* self, QInputMethodEvent* event);
QVariant* QGraphicsPolygonItem_virtualbase_inputMethodQuery(const VirtualQGraphicsPolygonItem* self, int query);
QVariant* QGraphicsPolygonItem_virtualbase_itemChange(VirtualQGraphicsPolygonItem* self, int change, QVariant* value);

void QGraphicsPolygonItem_protectedbase_updateMicroFocus(VirtualQGraphicsPolygonItem* self);
void QGraphicsPolygonItem_protectedbase_addToIndex(VirtualQGraphicsPolygonItem* self);
void QGraphicsPolygonItem_protectedbase_removeFromIndex(VirtualQGraphicsPolygonItem* self);
void QGraphicsPolygonItem_protectedbase_prepareGeometryChange(VirtualQGraphicsPolygonItem* self);

void QGraphicsPolygonItem_delete(QGraphicsPolygonItem* self);

typedef struct VirtualQGraphicsLineItem VirtualQGraphicsLineItem;
typedef struct QGraphicsLineItem_VTable{
	void (*destructor)(VirtualQGraphicsLineItem* self);
	QRectF* (*boundingRect)(const VirtualQGraphicsLineItem* self);
	QPainterPath* (*shape)(const VirtualQGraphicsLineItem* self);
	bool (*contains)(const VirtualQGraphicsLineItem* self, QPointF* point);
	void (*paint)(VirtualQGraphicsLineItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	bool (*isObscuredBy)(const VirtualQGraphicsLineItem* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsLineItem* self);
	int (*type)(const VirtualQGraphicsLineItem* self);
	bool (*supportsExtension)(const VirtualQGraphicsLineItem* self, int extension);
	void (*setExtension)(VirtualQGraphicsLineItem* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsLineItem* self, QVariant* variant);
	void (*advance)(VirtualQGraphicsLineItem* self, int phase);
	bool (*collidesWithItem)(const VirtualQGraphicsLineItem* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsLineItem* self, QPainterPath* path, int mode);
	bool (*sceneEventFilter)(VirtualQGraphicsLineItem* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQGraphicsLineItem* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQGraphicsLineItem* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsLineItem* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsLineItem* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsLineItem* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsLineItem* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsLineItem* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsLineItem* self, int query);
	QVariant* (*itemChange)(VirtualQGraphicsLineItem* self, int change, QVariant* value);
}QGraphicsLineItem_VTable;

const QGraphicsLineItem_VTable* QGraphicsLineItem_vtbl(const VirtualQGraphicsLineItem* self);
void* QGraphicsLineItem_vdata(const VirtualQGraphicsLineItem* self);
void QGraphicsLineItem_setVdata(VirtualQGraphicsLineItem* self, void* vdata);

VirtualQGraphicsLineItem* QGraphicsLineItem_new(const QGraphicsLineItem_VTable* vtbl, void* vdata);
VirtualQGraphicsLineItem* QGraphicsLineItem_new2(const QGraphicsLineItem_VTable* vtbl, void* vdata, QLineF* line);
VirtualQGraphicsLineItem* QGraphicsLineItem_new3(const QGraphicsLineItem_VTable* vtbl, void* vdata, double x1, double y1, double x2, double y2);
VirtualQGraphicsLineItem* QGraphicsLineItem_new4(const QGraphicsLineItem_VTable* vtbl, void* vdata, QGraphicsItem* parent);
VirtualQGraphicsLineItem* QGraphicsLineItem_new5(const QGraphicsLineItem_VTable* vtbl, void* vdata, QLineF* line, QGraphicsItem* parent);
VirtualQGraphicsLineItem* QGraphicsLineItem_new6(const QGraphicsLineItem_VTable* vtbl, void* vdata, double x1, double y1, double x2, double y2, QGraphicsItem* parent);

void QGraphicsLineItem_virtbase(QGraphicsLineItem* src, QGraphicsItem** outptr_QGraphicsItem);
QPen* QGraphicsLineItem_pen(const QGraphicsLineItem* self);
void QGraphicsLineItem_setPen(QGraphicsLineItem* self, QPen* pen);
QLineF* QGraphicsLineItem_line(const QGraphicsLineItem* self);
void QGraphicsLineItem_setLine(QGraphicsLineItem* self, QLineF* line);
void QGraphicsLineItem_setLine2(QGraphicsLineItem* self, double x1, double y1, double x2, double y2);
QRectF* QGraphicsLineItem_boundingRect(const QGraphicsLineItem* self);
QPainterPath* QGraphicsLineItem_shape(const QGraphicsLineItem* self);
bool QGraphicsLineItem_contains(const QGraphicsLineItem* self, QPointF* point);
void QGraphicsLineItem_paint(QGraphicsLineItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsLineItem_isObscuredBy(const QGraphicsLineItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsLineItem_opaqueArea(const QGraphicsLineItem* self);
int QGraphicsLineItem_type(const QGraphicsLineItem* self);
bool QGraphicsLineItem_supportsExtension(const QGraphicsLineItem* self, int extension);
void QGraphicsLineItem_setExtension(QGraphicsLineItem* self, int extension, QVariant* variant);
QVariant* QGraphicsLineItem_extension(const QGraphicsLineItem* self, QVariant* variant);

QRectF* QGraphicsLineItem_virtualbase_boundingRect(const VirtualQGraphicsLineItem* self);
QPainterPath* QGraphicsLineItem_virtualbase_shape(const VirtualQGraphicsLineItem* self);
bool QGraphicsLineItem_virtualbase_contains(const VirtualQGraphicsLineItem* self, QPointF* point);
void QGraphicsLineItem_virtualbase_paint(VirtualQGraphicsLineItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsLineItem_virtualbase_isObscuredBy(const VirtualQGraphicsLineItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsLineItem_virtualbase_opaqueArea(const VirtualQGraphicsLineItem* self);
int QGraphicsLineItem_virtualbase_type(const VirtualQGraphicsLineItem* self);
bool QGraphicsLineItem_virtualbase_supportsExtension(const VirtualQGraphicsLineItem* self, int extension);
void QGraphicsLineItem_virtualbase_setExtension(VirtualQGraphicsLineItem* self, int extension, QVariant* variant);
QVariant* QGraphicsLineItem_virtualbase_extension(const VirtualQGraphicsLineItem* self, QVariant* variant);
void QGraphicsLineItem_virtualbase_advance(VirtualQGraphicsLineItem* self, int phase);
bool QGraphicsLineItem_virtualbase_collidesWithItem(const VirtualQGraphicsLineItem* self, QGraphicsItem* other, int mode);
bool QGraphicsLineItem_virtualbase_collidesWithPath(const VirtualQGraphicsLineItem* self, QPainterPath* path, int mode);
bool QGraphicsLineItem_virtualbase_sceneEventFilter(VirtualQGraphicsLineItem* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsLineItem_virtualbase_sceneEvent(VirtualQGraphicsLineItem* self, QEvent* event);
void QGraphicsLineItem_virtualbase_contextMenuEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsLineItem_virtualbase_dragEnterEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsLineItem_virtualbase_dragLeaveEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsLineItem_virtualbase_dragMoveEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsLineItem_virtualbase_dropEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsLineItem_virtualbase_focusInEvent(VirtualQGraphicsLineItem* self, QFocusEvent* event);
void QGraphicsLineItem_virtualbase_focusOutEvent(VirtualQGraphicsLineItem* self, QFocusEvent* event);
void QGraphicsLineItem_virtualbase_hoverEnterEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsLineItem_virtualbase_hoverMoveEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsLineItem_virtualbase_hoverLeaveEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsLineItem_virtualbase_keyPressEvent(VirtualQGraphicsLineItem* self, QKeyEvent* event);
void QGraphicsLineItem_virtualbase_keyReleaseEvent(VirtualQGraphicsLineItem* self, QKeyEvent* event);
void QGraphicsLineItem_virtualbase_mousePressEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsLineItem_virtualbase_mouseMoveEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsLineItem_virtualbase_mouseReleaseEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsLineItem_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsLineItem_virtualbase_wheelEvent(VirtualQGraphicsLineItem* self, QGraphicsSceneWheelEvent* event);
void QGraphicsLineItem_virtualbase_inputMethodEvent(VirtualQGraphicsLineItem* self, QInputMethodEvent* event);
QVariant* QGraphicsLineItem_virtualbase_inputMethodQuery(const VirtualQGraphicsLineItem* self, int query);
QVariant* QGraphicsLineItem_virtualbase_itemChange(VirtualQGraphicsLineItem* self, int change, QVariant* value);

void QGraphicsLineItem_protectedbase_updateMicroFocus(VirtualQGraphicsLineItem* self);
void QGraphicsLineItem_protectedbase_addToIndex(VirtualQGraphicsLineItem* self);
void QGraphicsLineItem_protectedbase_removeFromIndex(VirtualQGraphicsLineItem* self);
void QGraphicsLineItem_protectedbase_prepareGeometryChange(VirtualQGraphicsLineItem* self);

void QGraphicsLineItem_delete(QGraphicsLineItem* self);

typedef struct VirtualQGraphicsPixmapItem VirtualQGraphicsPixmapItem;
typedef struct QGraphicsPixmapItem_VTable{
	void (*destructor)(VirtualQGraphicsPixmapItem* self);
	QRectF* (*boundingRect)(const VirtualQGraphicsPixmapItem* self);
	QPainterPath* (*shape)(const VirtualQGraphicsPixmapItem* self);
	bool (*contains)(const VirtualQGraphicsPixmapItem* self, QPointF* point);
	void (*paint)(VirtualQGraphicsPixmapItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	bool (*isObscuredBy)(const VirtualQGraphicsPixmapItem* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsPixmapItem* self);
	int (*type)(const VirtualQGraphicsPixmapItem* self);
	bool (*supportsExtension)(const VirtualQGraphicsPixmapItem* self, int extension);
	void (*setExtension)(VirtualQGraphicsPixmapItem* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsPixmapItem* self, QVariant* variant);
	void (*advance)(VirtualQGraphicsPixmapItem* self, int phase);
	bool (*collidesWithItem)(const VirtualQGraphicsPixmapItem* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsPixmapItem* self, QPainterPath* path, int mode);
	bool (*sceneEventFilter)(VirtualQGraphicsPixmapItem* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQGraphicsPixmapItem* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQGraphicsPixmapItem* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsPixmapItem* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsPixmapItem* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsPixmapItem* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsPixmapItem* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsPixmapItem* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsPixmapItem* self, int query);
	QVariant* (*itemChange)(VirtualQGraphicsPixmapItem* self, int change, QVariant* value);
}QGraphicsPixmapItem_VTable;

const QGraphicsPixmapItem_VTable* QGraphicsPixmapItem_vtbl(const VirtualQGraphicsPixmapItem* self);
void* QGraphicsPixmapItem_vdata(const VirtualQGraphicsPixmapItem* self);
void QGraphicsPixmapItem_setVdata(VirtualQGraphicsPixmapItem* self, void* vdata);

VirtualQGraphicsPixmapItem* QGraphicsPixmapItem_new(const QGraphicsPixmapItem_VTable* vtbl, void* vdata);
VirtualQGraphicsPixmapItem* QGraphicsPixmapItem_new2(const QGraphicsPixmapItem_VTable* vtbl, void* vdata, QPixmap* pixmap);
VirtualQGraphicsPixmapItem* QGraphicsPixmapItem_new3(const QGraphicsPixmapItem_VTable* vtbl, void* vdata, QGraphicsItem* parent);
VirtualQGraphicsPixmapItem* QGraphicsPixmapItem_new4(const QGraphicsPixmapItem_VTable* vtbl, void* vdata, QPixmap* pixmap, QGraphicsItem* parent);

void QGraphicsPixmapItem_virtbase(QGraphicsPixmapItem* src, QGraphicsItem** outptr_QGraphicsItem);
QPixmap* QGraphicsPixmapItem_pixmap(const QGraphicsPixmapItem* self);
void QGraphicsPixmapItem_setPixmap(QGraphicsPixmapItem* self, QPixmap* pixmap);
int QGraphicsPixmapItem_transformationMode(const QGraphicsPixmapItem* self);
void QGraphicsPixmapItem_setTransformationMode(QGraphicsPixmapItem* self, int mode);
QPointF* QGraphicsPixmapItem_offset(const QGraphicsPixmapItem* self);
void QGraphicsPixmapItem_setOffset(QGraphicsPixmapItem* self, QPointF* offset);
void QGraphicsPixmapItem_setOffset2(QGraphicsPixmapItem* self, double x, double y);
QRectF* QGraphicsPixmapItem_boundingRect(const QGraphicsPixmapItem* self);
QPainterPath* QGraphicsPixmapItem_shape(const QGraphicsPixmapItem* self);
bool QGraphicsPixmapItem_contains(const QGraphicsPixmapItem* self, QPointF* point);
void QGraphicsPixmapItem_paint(QGraphicsPixmapItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsPixmapItem_isObscuredBy(const QGraphicsPixmapItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsPixmapItem_opaqueArea(const QGraphicsPixmapItem* self);
int QGraphicsPixmapItem_type(const QGraphicsPixmapItem* self);
int QGraphicsPixmapItem_shapeMode(const QGraphicsPixmapItem* self);
void QGraphicsPixmapItem_setShapeMode(QGraphicsPixmapItem* self, int mode);
bool QGraphicsPixmapItem_supportsExtension(const QGraphicsPixmapItem* self, int extension);
void QGraphicsPixmapItem_setExtension(QGraphicsPixmapItem* self, int extension, QVariant* variant);
QVariant* QGraphicsPixmapItem_extension(const QGraphicsPixmapItem* self, QVariant* variant);

QRectF* QGraphicsPixmapItem_virtualbase_boundingRect(const VirtualQGraphicsPixmapItem* self);
QPainterPath* QGraphicsPixmapItem_virtualbase_shape(const VirtualQGraphicsPixmapItem* self);
bool QGraphicsPixmapItem_virtualbase_contains(const VirtualQGraphicsPixmapItem* self, QPointF* point);
void QGraphicsPixmapItem_virtualbase_paint(VirtualQGraphicsPixmapItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsPixmapItem_virtualbase_isObscuredBy(const VirtualQGraphicsPixmapItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsPixmapItem_virtualbase_opaqueArea(const VirtualQGraphicsPixmapItem* self);
int QGraphicsPixmapItem_virtualbase_type(const VirtualQGraphicsPixmapItem* self);
bool QGraphicsPixmapItem_virtualbase_supportsExtension(const VirtualQGraphicsPixmapItem* self, int extension);
void QGraphicsPixmapItem_virtualbase_setExtension(VirtualQGraphicsPixmapItem* self, int extension, QVariant* variant);
QVariant* QGraphicsPixmapItem_virtualbase_extension(const VirtualQGraphicsPixmapItem* self, QVariant* variant);
void QGraphicsPixmapItem_virtualbase_advance(VirtualQGraphicsPixmapItem* self, int phase);
bool QGraphicsPixmapItem_virtualbase_collidesWithItem(const VirtualQGraphicsPixmapItem* self, QGraphicsItem* other, int mode);
bool QGraphicsPixmapItem_virtualbase_collidesWithPath(const VirtualQGraphicsPixmapItem* self, QPainterPath* path, int mode);
bool QGraphicsPixmapItem_virtualbase_sceneEventFilter(VirtualQGraphicsPixmapItem* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsPixmapItem_virtualbase_sceneEvent(VirtualQGraphicsPixmapItem* self, QEvent* event);
void QGraphicsPixmapItem_virtualbase_contextMenuEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsPixmapItem_virtualbase_dragEnterEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPixmapItem_virtualbase_dragLeaveEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPixmapItem_virtualbase_dragMoveEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPixmapItem_virtualbase_dropEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsPixmapItem_virtualbase_focusInEvent(VirtualQGraphicsPixmapItem* self, QFocusEvent* event);
void QGraphicsPixmapItem_virtualbase_focusOutEvent(VirtualQGraphicsPixmapItem* self, QFocusEvent* event);
void QGraphicsPixmapItem_virtualbase_hoverEnterEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsPixmapItem_virtualbase_hoverMoveEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsPixmapItem_virtualbase_hoverLeaveEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsPixmapItem_virtualbase_keyPressEvent(VirtualQGraphicsPixmapItem* self, QKeyEvent* event);
void QGraphicsPixmapItem_virtualbase_keyReleaseEvent(VirtualQGraphicsPixmapItem* self, QKeyEvent* event);
void QGraphicsPixmapItem_virtualbase_mousePressEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPixmapItem_virtualbase_mouseMoveEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPixmapItem_virtualbase_mouseReleaseEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPixmapItem_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsPixmapItem_virtualbase_wheelEvent(VirtualQGraphicsPixmapItem* self, QGraphicsSceneWheelEvent* event);
void QGraphicsPixmapItem_virtualbase_inputMethodEvent(VirtualQGraphicsPixmapItem* self, QInputMethodEvent* event);
QVariant* QGraphicsPixmapItem_virtualbase_inputMethodQuery(const VirtualQGraphicsPixmapItem* self, int query);
QVariant* QGraphicsPixmapItem_virtualbase_itemChange(VirtualQGraphicsPixmapItem* self, int change, QVariant* value);

void QGraphicsPixmapItem_protectedbase_updateMicroFocus(VirtualQGraphicsPixmapItem* self);
void QGraphicsPixmapItem_protectedbase_addToIndex(VirtualQGraphicsPixmapItem* self);
void QGraphicsPixmapItem_protectedbase_removeFromIndex(VirtualQGraphicsPixmapItem* self);
void QGraphicsPixmapItem_protectedbase_prepareGeometryChange(VirtualQGraphicsPixmapItem* self);

void QGraphicsPixmapItem_delete(QGraphicsPixmapItem* self);

typedef struct VirtualQGraphicsTextItem VirtualQGraphicsTextItem;
typedef struct QGraphicsTextItem_VTable{
	void (*destructor)(VirtualQGraphicsTextItem* self);
	QMetaObject* (*metaObject)(const VirtualQGraphicsTextItem* self);
	void* (*metacast)(VirtualQGraphicsTextItem* self, const char* param1);
	int (*metacall)(VirtualQGraphicsTextItem* self, int param1, int param2, void** param3);
	QRectF* (*boundingRect)(const VirtualQGraphicsTextItem* self);
	QPainterPath* (*shape)(const VirtualQGraphicsTextItem* self);
	bool (*contains)(const VirtualQGraphicsTextItem* self, QPointF* point);
	void (*paint)(VirtualQGraphicsTextItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	bool (*isObscuredBy)(const VirtualQGraphicsTextItem* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsTextItem* self);
	int (*type)(const VirtualQGraphicsTextItem* self);
	bool (*sceneEvent)(VirtualQGraphicsTextItem* self, QEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneContextMenuEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsTextItem* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsTextItem* self, QKeyEvent* event);
	void (*focusInEvent)(VirtualQGraphicsTextItem* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsTextItem* self, QFocusEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsTextItem* self, QInputMethodEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneHoverEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsTextItem* self, int query);
	bool (*supportsExtension)(const VirtualQGraphicsTextItem* self, int extension);
	void (*setExtension)(VirtualQGraphicsTextItem* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsTextItem* self, QVariant* variant);
	bool (*event)(VirtualQGraphicsTextItem* self, QEvent* ev);
	bool (*eventFilter)(VirtualQGraphicsTextItem* self, QObject* watched, QEvent* event);
	void (*timerEvent)(VirtualQGraphicsTextItem* self, QTimerEvent* event);
	void (*childEvent)(VirtualQGraphicsTextItem* self, QChildEvent* event);
	void (*customEvent)(VirtualQGraphicsTextItem* self, QEvent* event);
	void (*connectNotify)(VirtualQGraphicsTextItem* self, QMetaMethod* signal);
	void (*disconnectNotify)(VirtualQGraphicsTextItem* self, QMetaMethod* signal);
	void (*advance)(VirtualQGraphicsTextItem* self, int phase);
	bool (*collidesWithItem)(const VirtualQGraphicsTextItem* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsTextItem* self, QPainterPath* path, int mode);
	bool (*sceneEventFilter)(VirtualQGraphicsTextItem* self, QGraphicsItem* watched, QEvent* event);
	void (*wheelEvent)(VirtualQGraphicsTextItem* self, QGraphicsSceneWheelEvent* event);
	QVariant* (*itemChange)(VirtualQGraphicsTextItem* self, int change, QVariant* value);
}QGraphicsTextItem_VTable;

const QGraphicsTextItem_VTable* QGraphicsTextItem_vtbl(const VirtualQGraphicsTextItem* self);
void* QGraphicsTextItem_vdata(const VirtualQGraphicsTextItem* self);
void QGraphicsTextItem_setVdata(VirtualQGraphicsTextItem* self, void* vdata);

VirtualQGraphicsTextItem* QGraphicsTextItem_new(const QGraphicsTextItem_VTable* vtbl, void* vdata);
VirtualQGraphicsTextItem* QGraphicsTextItem_new2(const QGraphicsTextItem_VTable* vtbl, void* vdata, struct miqt_string text);
VirtualQGraphicsTextItem* QGraphicsTextItem_new3(const QGraphicsTextItem_VTable* vtbl, void* vdata, QGraphicsItem* parent);
VirtualQGraphicsTextItem* QGraphicsTextItem_new4(const QGraphicsTextItem_VTable* vtbl, void* vdata, struct miqt_string text, QGraphicsItem* parent);

void QGraphicsTextItem_virtbase(QGraphicsTextItem* src, QGraphicsObject** outptr_QGraphicsObject);
QMetaObject* QGraphicsTextItem_metaObject(const QGraphicsTextItem* self);
void* QGraphicsTextItem_metacast(QGraphicsTextItem* self, const char* param1);
int QGraphicsTextItem_metacall(QGraphicsTextItem* self, int param1, int param2, void** param3);
struct miqt_string QGraphicsTextItem_tr(const char* s);
struct miqt_string QGraphicsTextItem_toHtml(const QGraphicsTextItem* self);
void QGraphicsTextItem_setHtml(QGraphicsTextItem* self, struct miqt_string html);
struct miqt_string QGraphicsTextItem_toPlainText(const QGraphicsTextItem* self);
void QGraphicsTextItem_setPlainText(QGraphicsTextItem* self, struct miqt_string text);
QFont* QGraphicsTextItem_font(const QGraphicsTextItem* self);
void QGraphicsTextItem_setFont(QGraphicsTextItem* self, QFont* font);
void QGraphicsTextItem_setDefaultTextColor(QGraphicsTextItem* self, QColor* c);
QColor* QGraphicsTextItem_defaultTextColor(const QGraphicsTextItem* self);
QRectF* QGraphicsTextItem_boundingRect(const QGraphicsTextItem* self);
QPainterPath* QGraphicsTextItem_shape(const QGraphicsTextItem* self);
bool QGraphicsTextItem_contains(const QGraphicsTextItem* self, QPointF* point);
void QGraphicsTextItem_paint(QGraphicsTextItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsTextItem_isObscuredBy(const QGraphicsTextItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsTextItem_opaqueArea(const QGraphicsTextItem* self);
int QGraphicsTextItem_type(const QGraphicsTextItem* self);
void QGraphicsTextItem_setTextWidth(QGraphicsTextItem* self, double width);
double QGraphicsTextItem_textWidth(const QGraphicsTextItem* self);
void QGraphicsTextItem_adjustSize(QGraphicsTextItem* self);
void QGraphicsTextItem_setDocument(QGraphicsTextItem* self, QTextDocument* document);
QTextDocument* QGraphicsTextItem_document(const QGraphicsTextItem* self);
void QGraphicsTextItem_setTextInteractionFlags(QGraphicsTextItem* self, int flags);
int QGraphicsTextItem_textInteractionFlags(const QGraphicsTextItem* self);
void QGraphicsTextItem_setTabChangesFocus(QGraphicsTextItem* self, bool b);
bool QGraphicsTextItem_tabChangesFocus(const QGraphicsTextItem* self);
void QGraphicsTextItem_setOpenExternalLinks(QGraphicsTextItem* self, bool open);
bool QGraphicsTextItem_openExternalLinks(const QGraphicsTextItem* self);
void QGraphicsTextItem_setTextCursor(QGraphicsTextItem* self, QTextCursor* cursor);
QTextCursor* QGraphicsTextItem_textCursor(const QGraphicsTextItem* self);
void QGraphicsTextItem_linkActivated(QGraphicsTextItem* self, struct miqt_string param1);
void QGraphicsTextItem_connect_linkActivated(VirtualQGraphicsTextItem* self, intptr_t slot, void (*callback)(intptr_t, struct miqt_string), void (*release)(intptr_t));
void QGraphicsTextItem_linkHovered(QGraphicsTextItem* self, struct miqt_string param1);
void QGraphicsTextItem_connect_linkHovered(VirtualQGraphicsTextItem* self, intptr_t slot, void (*callback)(intptr_t, struct miqt_string), void (*release)(intptr_t));
bool QGraphicsTextItem_sceneEvent(QGraphicsTextItem* self, QEvent* event);
void QGraphicsTextItem_mousePressEvent(QGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsTextItem_mouseMoveEvent(QGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsTextItem_mouseReleaseEvent(QGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsTextItem_mouseDoubleClickEvent(QGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsTextItem_contextMenuEvent(QGraphicsTextItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsTextItem_keyPressEvent(QGraphicsTextItem* self, QKeyEvent* event);
void QGraphicsTextItem_keyReleaseEvent(QGraphicsTextItem* self, QKeyEvent* event);
void QGraphicsTextItem_focusInEvent(QGraphicsTextItem* self, QFocusEvent* event);
void QGraphicsTextItem_focusOutEvent(QGraphicsTextItem* self, QFocusEvent* event);
void QGraphicsTextItem_dragEnterEvent(QGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsTextItem_dragLeaveEvent(QGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsTextItem_dragMoveEvent(QGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsTextItem_dropEvent(QGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsTextItem_inputMethodEvent(QGraphicsTextItem* self, QInputMethodEvent* event);
void QGraphicsTextItem_hoverEnterEvent(QGraphicsTextItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsTextItem_hoverMoveEvent(QGraphicsTextItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsTextItem_hoverLeaveEvent(QGraphicsTextItem* self, QGraphicsSceneHoverEvent* event);
QVariant* QGraphicsTextItem_inputMethodQuery(const QGraphicsTextItem* self, int query);
bool QGraphicsTextItem_supportsExtension(const QGraphicsTextItem* self, int extension);
void QGraphicsTextItem_setExtension(QGraphicsTextItem* self, int extension, QVariant* variant);
QVariant* QGraphicsTextItem_extension(const QGraphicsTextItem* self, QVariant* variant);
struct miqt_string QGraphicsTextItem_tr2(const char* s, const char* c);
struct miqt_string QGraphicsTextItem_tr3(const char* s, const char* c, int n);

QMetaObject* QGraphicsTextItem_virtualbase_metaObject(const VirtualQGraphicsTextItem* self);
void* QGraphicsTextItem_virtualbase_metacast(VirtualQGraphicsTextItem* self, const char* param1);
int QGraphicsTextItem_virtualbase_metacall(VirtualQGraphicsTextItem* self, int param1, int param2, void** param3);
QRectF* QGraphicsTextItem_virtualbase_boundingRect(const VirtualQGraphicsTextItem* self);
QPainterPath* QGraphicsTextItem_virtualbase_shape(const VirtualQGraphicsTextItem* self);
bool QGraphicsTextItem_virtualbase_contains(const VirtualQGraphicsTextItem* self, QPointF* point);
void QGraphicsTextItem_virtualbase_paint(VirtualQGraphicsTextItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsTextItem_virtualbase_isObscuredBy(const VirtualQGraphicsTextItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsTextItem_virtualbase_opaqueArea(const VirtualQGraphicsTextItem* self);
int QGraphicsTextItem_virtualbase_type(const VirtualQGraphicsTextItem* self);
bool QGraphicsTextItem_virtualbase_sceneEvent(VirtualQGraphicsTextItem* self, QEvent* event);
void QGraphicsTextItem_virtualbase_mousePressEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsTextItem_virtualbase_mouseMoveEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsTextItem_virtualbase_mouseReleaseEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsTextItem_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsTextItem_virtualbase_contextMenuEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsTextItem_virtualbase_keyPressEvent(VirtualQGraphicsTextItem* self, QKeyEvent* event);
void QGraphicsTextItem_virtualbase_keyReleaseEvent(VirtualQGraphicsTextItem* self, QKeyEvent* event);
void QGraphicsTextItem_virtualbase_focusInEvent(VirtualQGraphicsTextItem* self, QFocusEvent* event);
void QGraphicsTextItem_virtualbase_focusOutEvent(VirtualQGraphicsTextItem* self, QFocusEvent* event);
void QGraphicsTextItem_virtualbase_dragEnterEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsTextItem_virtualbase_dragLeaveEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsTextItem_virtualbase_dragMoveEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsTextItem_virtualbase_dropEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsTextItem_virtualbase_inputMethodEvent(VirtualQGraphicsTextItem* self, QInputMethodEvent* event);
void QGraphicsTextItem_virtualbase_hoverEnterEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsTextItem_virtualbase_hoverMoveEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsTextItem_virtualbase_hoverLeaveEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneHoverEvent* event);
QVariant* QGraphicsTextItem_virtualbase_inputMethodQuery(const VirtualQGraphicsTextItem* self, int query);
bool QGraphicsTextItem_virtualbase_supportsExtension(const VirtualQGraphicsTextItem* self, int extension);
void QGraphicsTextItem_virtualbase_setExtension(VirtualQGraphicsTextItem* self, int extension, QVariant* variant);
QVariant* QGraphicsTextItem_virtualbase_extension(const VirtualQGraphicsTextItem* self, QVariant* variant);
bool QGraphicsTextItem_virtualbase_event(VirtualQGraphicsTextItem* self, QEvent* ev);
bool QGraphicsTextItem_virtualbase_eventFilter(VirtualQGraphicsTextItem* self, QObject* watched, QEvent* event);
void QGraphicsTextItem_virtualbase_timerEvent(VirtualQGraphicsTextItem* self, QTimerEvent* event);
void QGraphicsTextItem_virtualbase_childEvent(VirtualQGraphicsTextItem* self, QChildEvent* event);
void QGraphicsTextItem_virtualbase_customEvent(VirtualQGraphicsTextItem* self, QEvent* event);
void QGraphicsTextItem_virtualbase_connectNotify(VirtualQGraphicsTextItem* self, QMetaMethod* signal);
void QGraphicsTextItem_virtualbase_disconnectNotify(VirtualQGraphicsTextItem* self, QMetaMethod* signal);
void QGraphicsTextItem_virtualbase_advance(VirtualQGraphicsTextItem* self, int phase);
bool QGraphicsTextItem_virtualbase_collidesWithItem(const VirtualQGraphicsTextItem* self, QGraphicsItem* other, int mode);
bool QGraphicsTextItem_virtualbase_collidesWithPath(const VirtualQGraphicsTextItem* self, QPainterPath* path, int mode);
bool QGraphicsTextItem_virtualbase_sceneEventFilter(VirtualQGraphicsTextItem* self, QGraphicsItem* watched, QEvent* event);
void QGraphicsTextItem_virtualbase_wheelEvent(VirtualQGraphicsTextItem* self, QGraphicsSceneWheelEvent* event);
QVariant* QGraphicsTextItem_virtualbase_itemChange(VirtualQGraphicsTextItem* self, int change, QVariant* value);

void QGraphicsTextItem_protectedbase_updateMicroFocus(VirtualQGraphicsTextItem* self);
QObject* QGraphicsTextItem_protectedbase_sender(const VirtualQGraphicsTextItem* self);
int QGraphicsTextItem_protectedbase_senderSignalIndex(const VirtualQGraphicsTextItem* self);
int QGraphicsTextItem_protectedbase_receivers(const VirtualQGraphicsTextItem* self, const char* signal);
bool QGraphicsTextItem_protectedbase_isSignalConnected(const VirtualQGraphicsTextItem* self, QMetaMethod* signal);
void QGraphicsTextItem_protectedbase_addToIndex(VirtualQGraphicsTextItem* self);
void QGraphicsTextItem_protectedbase_removeFromIndex(VirtualQGraphicsTextItem* self);
void QGraphicsTextItem_protectedbase_prepareGeometryChange(VirtualQGraphicsTextItem* self);

const QMetaObject* QGraphicsTextItem_staticMetaObject();
void QGraphicsTextItem_delete(QGraphicsTextItem* self);

typedef struct VirtualQGraphicsSimpleTextItem VirtualQGraphicsSimpleTextItem;
typedef struct QGraphicsSimpleTextItem_VTable{
	void (*destructor)(VirtualQGraphicsSimpleTextItem* self);
	QRectF* (*boundingRect)(const VirtualQGraphicsSimpleTextItem* self);
	QPainterPath* (*shape)(const VirtualQGraphicsSimpleTextItem* self);
	bool (*contains)(const VirtualQGraphicsSimpleTextItem* self, QPointF* point);
	void (*paint)(VirtualQGraphicsSimpleTextItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	bool (*isObscuredBy)(const VirtualQGraphicsSimpleTextItem* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsSimpleTextItem* self);
	int (*type)(const VirtualQGraphicsSimpleTextItem* self);
	bool (*supportsExtension)(const VirtualQGraphicsSimpleTextItem* self, int extension);
	void (*setExtension)(VirtualQGraphicsSimpleTextItem* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsSimpleTextItem* self, QVariant* variant);
	void (*advance)(VirtualQGraphicsSimpleTextItem* self, int phase);
	bool (*collidesWithItem)(const VirtualQGraphicsSimpleTextItem* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsSimpleTextItem* self, QPainterPath* path, int mode);
	bool (*sceneEventFilter)(VirtualQGraphicsSimpleTextItem* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQGraphicsSimpleTextItem* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQGraphicsSimpleTextItem* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsSimpleTextItem* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsSimpleTextItem* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsSimpleTextItem* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsSimpleTextItem* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsSimpleTextItem* self, int query);
	QVariant* (*itemChange)(VirtualQGraphicsSimpleTextItem* self, int change, QVariant* value);
}QGraphicsSimpleTextItem_VTable;

const QGraphicsSimpleTextItem_VTable* QGraphicsSimpleTextItem_vtbl(const VirtualQGraphicsSimpleTextItem* self);
void* QGraphicsSimpleTextItem_vdata(const VirtualQGraphicsSimpleTextItem* self);
void QGraphicsSimpleTextItem_setVdata(VirtualQGraphicsSimpleTextItem* self, void* vdata);

VirtualQGraphicsSimpleTextItem* QGraphicsSimpleTextItem_new(const QGraphicsSimpleTextItem_VTable* vtbl, void* vdata);
VirtualQGraphicsSimpleTextItem* QGraphicsSimpleTextItem_new2(const QGraphicsSimpleTextItem_VTable* vtbl, void* vdata, struct miqt_string text);
VirtualQGraphicsSimpleTextItem* QGraphicsSimpleTextItem_new3(const QGraphicsSimpleTextItem_VTable* vtbl, void* vdata, QGraphicsItem* parent);
VirtualQGraphicsSimpleTextItem* QGraphicsSimpleTextItem_new4(const QGraphicsSimpleTextItem_VTable* vtbl, void* vdata, struct miqt_string text, QGraphicsItem* parent);

void QGraphicsSimpleTextItem_virtbase(QGraphicsSimpleTextItem* src, QAbstractGraphicsShapeItem** outptr_QAbstractGraphicsShapeItem);
void QGraphicsSimpleTextItem_setText(QGraphicsSimpleTextItem* self, struct miqt_string text);
struct miqt_string QGraphicsSimpleTextItem_text(const QGraphicsSimpleTextItem* self);
void QGraphicsSimpleTextItem_setFont(QGraphicsSimpleTextItem* self, QFont* font);
QFont* QGraphicsSimpleTextItem_font(const QGraphicsSimpleTextItem* self);
QRectF* QGraphicsSimpleTextItem_boundingRect(const QGraphicsSimpleTextItem* self);
QPainterPath* QGraphicsSimpleTextItem_shape(const QGraphicsSimpleTextItem* self);
bool QGraphicsSimpleTextItem_contains(const QGraphicsSimpleTextItem* self, QPointF* point);
void QGraphicsSimpleTextItem_paint(QGraphicsSimpleTextItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsSimpleTextItem_isObscuredBy(const QGraphicsSimpleTextItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsSimpleTextItem_opaqueArea(const QGraphicsSimpleTextItem* self);
int QGraphicsSimpleTextItem_type(const QGraphicsSimpleTextItem* self);
bool QGraphicsSimpleTextItem_supportsExtension(const QGraphicsSimpleTextItem* self, int extension);
void QGraphicsSimpleTextItem_setExtension(QGraphicsSimpleTextItem* self, int extension, QVariant* variant);
QVariant* QGraphicsSimpleTextItem_extension(const QGraphicsSimpleTextItem* self, QVariant* variant);

QRectF* QGraphicsSimpleTextItem_virtualbase_boundingRect(const VirtualQGraphicsSimpleTextItem* self);
QPainterPath* QGraphicsSimpleTextItem_virtualbase_shape(const VirtualQGraphicsSimpleTextItem* self);
bool QGraphicsSimpleTextItem_virtualbase_contains(const VirtualQGraphicsSimpleTextItem* self, QPointF* point);
void QGraphicsSimpleTextItem_virtualbase_paint(VirtualQGraphicsSimpleTextItem* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsSimpleTextItem_virtualbase_isObscuredBy(const VirtualQGraphicsSimpleTextItem* self, QGraphicsItem* item);
QPainterPath* QGraphicsSimpleTextItem_virtualbase_opaqueArea(const VirtualQGraphicsSimpleTextItem* self);
int QGraphicsSimpleTextItem_virtualbase_type(const VirtualQGraphicsSimpleTextItem* self);
bool QGraphicsSimpleTextItem_virtualbase_supportsExtension(const VirtualQGraphicsSimpleTextItem* self, int extension);
void QGraphicsSimpleTextItem_virtualbase_setExtension(VirtualQGraphicsSimpleTextItem* self, int extension, QVariant* variant);
QVariant* QGraphicsSimpleTextItem_virtualbase_extension(const VirtualQGraphicsSimpleTextItem* self, QVariant* variant);
void QGraphicsSimpleTextItem_virtualbase_advance(VirtualQGraphicsSimpleTextItem* self, int phase);
bool QGraphicsSimpleTextItem_virtualbase_collidesWithItem(const VirtualQGraphicsSimpleTextItem* self, QGraphicsItem* other, int mode);
bool QGraphicsSimpleTextItem_virtualbase_collidesWithPath(const VirtualQGraphicsSimpleTextItem* self, QPainterPath* path, int mode);
bool QGraphicsSimpleTextItem_virtualbase_sceneEventFilter(VirtualQGraphicsSimpleTextItem* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsSimpleTextItem_virtualbase_sceneEvent(VirtualQGraphicsSimpleTextItem* self, QEvent* event);
void QGraphicsSimpleTextItem_virtualbase_contextMenuEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsSimpleTextItem_virtualbase_dragEnterEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsSimpleTextItem_virtualbase_dragLeaveEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsSimpleTextItem_virtualbase_dragMoveEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsSimpleTextItem_virtualbase_dropEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsSimpleTextItem_virtualbase_focusInEvent(VirtualQGraphicsSimpleTextItem* self, QFocusEvent* event);
void QGraphicsSimpleTextItem_virtualbase_focusOutEvent(VirtualQGraphicsSimpleTextItem* self, QFocusEvent* event);
void QGraphicsSimpleTextItem_virtualbase_hoverEnterEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsSimpleTextItem_virtualbase_hoverMoveEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsSimpleTextItem_virtualbase_hoverLeaveEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneHoverEvent* event);
void QGraphicsSimpleTextItem_virtualbase_keyPressEvent(VirtualQGraphicsSimpleTextItem* self, QKeyEvent* event);
void QGraphicsSimpleTextItem_virtualbase_keyReleaseEvent(VirtualQGraphicsSimpleTextItem* self, QKeyEvent* event);
void QGraphicsSimpleTextItem_virtualbase_mousePressEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsSimpleTextItem_virtualbase_mouseMoveEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsSimpleTextItem_virtualbase_mouseReleaseEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsSimpleTextItem_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneMouseEvent* event);
void QGraphicsSimpleTextItem_virtualbase_wheelEvent(VirtualQGraphicsSimpleTextItem* self, QGraphicsSceneWheelEvent* event);
void QGraphicsSimpleTextItem_virtualbase_inputMethodEvent(VirtualQGraphicsSimpleTextItem* self, QInputMethodEvent* event);
QVariant* QGraphicsSimpleTextItem_virtualbase_inputMethodQuery(const VirtualQGraphicsSimpleTextItem* self, int query);
QVariant* QGraphicsSimpleTextItem_virtualbase_itemChange(VirtualQGraphicsSimpleTextItem* self, int change, QVariant* value);

void QGraphicsSimpleTextItem_protectedbase_updateMicroFocus(VirtualQGraphicsSimpleTextItem* self);
void QGraphicsSimpleTextItem_protectedbase_addToIndex(VirtualQGraphicsSimpleTextItem* self);
void QGraphicsSimpleTextItem_protectedbase_removeFromIndex(VirtualQGraphicsSimpleTextItem* self);
void QGraphicsSimpleTextItem_protectedbase_prepareGeometryChange(VirtualQGraphicsSimpleTextItem* self);

void QGraphicsSimpleTextItem_delete(QGraphicsSimpleTextItem* self);

typedef struct VirtualQGraphicsItemGroup VirtualQGraphicsItemGroup;
typedef struct QGraphicsItemGroup_VTable{
	void (*destructor)(VirtualQGraphicsItemGroup* self);
	QRectF* (*boundingRect)(const VirtualQGraphicsItemGroup* self);
	void (*paint)(VirtualQGraphicsItemGroup* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	bool (*isObscuredBy)(const VirtualQGraphicsItemGroup* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsItemGroup* self);
	int (*type)(const VirtualQGraphicsItemGroup* self);
	void (*advance)(VirtualQGraphicsItemGroup* self, int phase);
	QPainterPath* (*shape)(const VirtualQGraphicsItemGroup* self);
	bool (*contains)(const VirtualQGraphicsItemGroup* self, QPointF* point);
	bool (*collidesWithItem)(const VirtualQGraphicsItemGroup* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsItemGroup* self, QPainterPath* path, int mode);
	bool (*sceneEventFilter)(VirtualQGraphicsItemGroup* self, QGraphicsItem* watched, QEvent* event);
	bool (*sceneEvent)(VirtualQGraphicsItemGroup* self, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneDragDropEvent* event);
	void (*focusInEvent)(VirtualQGraphicsItemGroup* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQGraphicsItemGroup* self, QFocusEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneHoverEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsItemGroup* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsItemGroup* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsItemGroup* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsItemGroup* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsItemGroup* self, int query);
	QVariant* (*itemChange)(VirtualQGraphicsItemGroup* self, int change, QVariant* value);
	bool (*supportsExtension)(const VirtualQGraphicsItemGroup* self, int extension);
	void (*setExtension)(VirtualQGraphicsItemGroup* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsItemGroup* self, QVariant* variant);
}QGraphicsItemGroup_VTable;

const QGraphicsItemGroup_VTable* QGraphicsItemGroup_vtbl(const VirtualQGraphicsItemGroup* self);
void* QGraphicsItemGroup_vdata(const VirtualQGraphicsItemGroup* self);
void QGraphicsItemGroup_setVdata(VirtualQGraphicsItemGroup* self, void* vdata);

VirtualQGraphicsItemGroup* QGraphicsItemGroup_new(const QGraphicsItemGroup_VTable* vtbl, void* vdata);
VirtualQGraphicsItemGroup* QGraphicsItemGroup_new2(const QGraphicsItemGroup_VTable* vtbl, void* vdata, QGraphicsItem* parent);

void QGraphicsItemGroup_virtbase(QGraphicsItemGroup* src, QGraphicsItem** outptr_QGraphicsItem);
void QGraphicsItemGroup_addToGroup(QGraphicsItemGroup* self, QGraphicsItem* item);
void QGraphicsItemGroup_removeFromGroup(QGraphicsItemGroup* self, QGraphicsItem* item);
QRectF* QGraphicsItemGroup_boundingRect(const QGraphicsItemGroup* self);
void QGraphicsItemGroup_paint(QGraphicsItemGroup* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsItemGroup_isObscuredBy(const QGraphicsItemGroup* self, QGraphicsItem* item);
QPainterPath* QGraphicsItemGroup_opaqueArea(const QGraphicsItemGroup* self);
int QGraphicsItemGroup_type(const QGraphicsItemGroup* self);

QRectF* QGraphicsItemGroup_virtualbase_boundingRect(const VirtualQGraphicsItemGroup* self);
void QGraphicsItemGroup_virtualbase_paint(VirtualQGraphicsItemGroup* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
bool QGraphicsItemGroup_virtualbase_isObscuredBy(const VirtualQGraphicsItemGroup* self, QGraphicsItem* item);
QPainterPath* QGraphicsItemGroup_virtualbase_opaqueArea(const VirtualQGraphicsItemGroup* self);
int QGraphicsItemGroup_virtualbase_type(const VirtualQGraphicsItemGroup* self);
void QGraphicsItemGroup_virtualbase_advance(VirtualQGraphicsItemGroup* self, int phase);
QPainterPath* QGraphicsItemGroup_virtualbase_shape(const VirtualQGraphicsItemGroup* self);
bool QGraphicsItemGroup_virtualbase_contains(const VirtualQGraphicsItemGroup* self, QPointF* point);
bool QGraphicsItemGroup_virtualbase_collidesWithItem(const VirtualQGraphicsItemGroup* self, QGraphicsItem* other, int mode);
bool QGraphicsItemGroup_virtualbase_collidesWithPath(const VirtualQGraphicsItemGroup* self, QPainterPath* path, int mode);
bool QGraphicsItemGroup_virtualbase_sceneEventFilter(VirtualQGraphicsItemGroup* self, QGraphicsItem* watched, QEvent* event);
bool QGraphicsItemGroup_virtualbase_sceneEvent(VirtualQGraphicsItemGroup* self, QEvent* event);
void QGraphicsItemGroup_virtualbase_contextMenuEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsItemGroup_virtualbase_dragEnterEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItemGroup_virtualbase_dragLeaveEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItemGroup_virtualbase_dragMoveEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItemGroup_virtualbase_dropEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsItemGroup_virtualbase_focusInEvent(VirtualQGraphicsItemGroup* self, QFocusEvent* event);
void QGraphicsItemGroup_virtualbase_focusOutEvent(VirtualQGraphicsItemGroup* self, QFocusEvent* event);
void QGraphicsItemGroup_virtualbase_hoverEnterEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneHoverEvent* event);
void QGraphicsItemGroup_virtualbase_hoverMoveEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneHoverEvent* event);
void QGraphicsItemGroup_virtualbase_hoverLeaveEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneHoverEvent* event);
void QGraphicsItemGroup_virtualbase_keyPressEvent(VirtualQGraphicsItemGroup* self, QKeyEvent* event);
void QGraphicsItemGroup_virtualbase_keyReleaseEvent(VirtualQGraphicsItemGroup* self, QKeyEvent* event);
void QGraphicsItemGroup_virtualbase_mousePressEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItemGroup_virtualbase_mouseMoveEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItemGroup_virtualbase_mouseReleaseEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItemGroup_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneMouseEvent* event);
void QGraphicsItemGroup_virtualbase_wheelEvent(VirtualQGraphicsItemGroup* self, QGraphicsSceneWheelEvent* event);
void QGraphicsItemGroup_virtualbase_inputMethodEvent(VirtualQGraphicsItemGroup* self, QInputMethodEvent* event);
QVariant* QGraphicsItemGroup_virtualbase_inputMethodQuery(const VirtualQGraphicsItemGroup* self, int query);
QVariant* QGraphicsItemGroup_virtualbase_itemChange(VirtualQGraphicsItemGroup* self, int change, QVariant* value);
bool QGraphicsItemGroup_virtualbase_supportsExtension(const VirtualQGraphicsItemGroup* self, int extension);
void QGraphicsItemGroup_virtualbase_setExtension(VirtualQGraphicsItemGroup* self, int extension, QVariant* variant);
QVariant* QGraphicsItemGroup_virtualbase_extension(const VirtualQGraphicsItemGroup* self, QVariant* variant);

void QGraphicsItemGroup_protectedbase_updateMicroFocus(VirtualQGraphicsItemGroup* self);
void QGraphicsItemGroup_protectedbase_addToIndex(VirtualQGraphicsItemGroup* self);
void QGraphicsItemGroup_protectedbase_removeFromIndex(VirtualQGraphicsItemGroup* self);
void QGraphicsItemGroup_protectedbase_prepareGeometryChange(VirtualQGraphicsItemGroup* self);

void QGraphicsItemGroup_delete(QGraphicsItemGroup* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
