#pragma once
#ifndef SEAQT_QTWIDGETS_GEN_QGRAPHICSWIDGET_H
#define SEAQT_QTWIDGETS_GEN_QGRAPHICSWIDGET_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../libseaqt/libseaqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAction;
class QChildEvent;
class QCloseEvent;
class QEvent;
class QFocusEvent;
class QFont;
class QGraphicsItem;
class QGraphicsLayout;
class QGraphicsLayoutItem;
class QGraphicsObject;
class QGraphicsSceneContextMenuEvent;
class QGraphicsSceneDragDropEvent;
class QGraphicsSceneHoverEvent;
class QGraphicsSceneMouseEvent;
class QGraphicsSceneMoveEvent;
class QGraphicsSceneResizeEvent;
class QGraphicsSceneWheelEvent;
class QGraphicsWidget;
class QHideEvent;
class QInputMethodEvent;
class QKeyEvent;
class QKeySequence;
class QMarginsF;
class QMetaMethod;
class QMetaObject;
class QObject;
class QPainter;
class QPainterPath;
class QPalette;
class QPointF;
class QRectF;
class QShowEvent;
class QSizeF;
class QStyle;
class QStyleOption;
class QStyleOptionGraphicsItem;
class QTimerEvent;
class QVariant;
class QWidget;
#else
typedef struct QAction QAction;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QGraphicsItem QGraphicsItem;
typedef struct QGraphicsLayout QGraphicsLayout;
typedef struct QGraphicsLayoutItem QGraphicsLayoutItem;
typedef struct QGraphicsObject QGraphicsObject;
typedef struct QGraphicsSceneContextMenuEvent QGraphicsSceneContextMenuEvent;
typedef struct QGraphicsSceneDragDropEvent QGraphicsSceneDragDropEvent;
typedef struct QGraphicsSceneHoverEvent QGraphicsSceneHoverEvent;
typedef struct QGraphicsSceneMouseEvent QGraphicsSceneMouseEvent;
typedef struct QGraphicsSceneMoveEvent QGraphicsSceneMoveEvent;
typedef struct QGraphicsSceneResizeEvent QGraphicsSceneResizeEvent;
typedef struct QGraphicsSceneWheelEvent QGraphicsSceneWheelEvent;
typedef struct QGraphicsWidget QGraphicsWidget;
typedef struct QHideEvent QHideEvent;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QKeySequence QKeySequence;
typedef struct QMarginsF QMarginsF;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QObject QObject;
typedef struct QPainter QPainter;
typedef struct QPainterPath QPainterPath;
typedef struct QPalette QPalette;
typedef struct QPointF QPointF;
typedef struct QRectF QRectF;
typedef struct QShowEvent QShowEvent;
typedef struct QSizeF QSizeF;
typedef struct QStyle QStyle;
typedef struct QStyleOption QStyleOption;
typedef struct QStyleOptionGraphicsItem QStyleOptionGraphicsItem;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWidget QWidget;
#endif

typedef struct VirtualQGraphicsWidget VirtualQGraphicsWidget;
typedef struct QGraphicsWidget_VTable{
	void (*destructor)(VirtualQGraphicsWidget* self);
	QMetaObject* (*metaObject)(const VirtualQGraphicsWidget* self);
	void* (*metacast)(VirtualQGraphicsWidget* self, const char* param1);
	int (*metacall)(VirtualQGraphicsWidget* self, int param1, int param2, void** param3);
	void (*setGeometry)(VirtualQGraphicsWidget* self, QRectF* rect);
	void (*getContentsMargins)(const VirtualQGraphicsWidget* self, double* left, double* top, double* right, double* bottom);
	int (*type)(const VirtualQGraphicsWidget* self);
	void (*paint)(VirtualQGraphicsWidget* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	void (*paintWindowFrame)(VirtualQGraphicsWidget* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
	QRectF* (*boundingRect)(const VirtualQGraphicsWidget* self);
	QPainterPath* (*shape)(const VirtualQGraphicsWidget* self);
	void (*initStyleOption)(const VirtualQGraphicsWidget* self, QStyleOption* option);
	QSizeF* (*sizeHint)(const VirtualQGraphicsWidget* self, int which, QSizeF* constraint);
	void (*updateGeometry)(VirtualQGraphicsWidget* self);
	QVariant* (*itemChange)(VirtualQGraphicsWidget* self, int change, QVariant* value);
	QVariant* (*propertyChange)(VirtualQGraphicsWidget* self, struct miqt_string propertyName, QVariant* value);
	bool (*sceneEvent)(VirtualQGraphicsWidget* self, QEvent* event);
	bool (*windowFrameEvent)(VirtualQGraphicsWidget* self, QEvent* e);
	int (*windowFrameSectionAt)(const VirtualQGraphicsWidget* self, QPointF* pos);
	bool (*event)(VirtualQGraphicsWidget* self, QEvent* event);
	void (*changeEvent)(VirtualQGraphicsWidget* self, QEvent* event);
	void (*closeEvent)(VirtualQGraphicsWidget* self, QCloseEvent* event);
	void (*focusInEvent)(VirtualQGraphicsWidget* self, QFocusEvent* event);
	bool (*focusNextPrevChild)(VirtualQGraphicsWidget* self, bool next);
	void (*focusOutEvent)(VirtualQGraphicsWidget* self, QFocusEvent* event);
	void (*hideEvent)(VirtualQGraphicsWidget* self, QHideEvent* event);
	void (*moveEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneMoveEvent* event);
	void (*polishEvent)(VirtualQGraphicsWidget* self);
	void (*resizeEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneResizeEvent* event);
	void (*showEvent)(VirtualQGraphicsWidget* self, QShowEvent* event);
	void (*hoverMoveEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneHoverEvent* event);
	void (*hoverLeaveEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneHoverEvent* event);
	void (*grabMouseEvent)(VirtualQGraphicsWidget* self, QEvent* event);
	void (*ungrabMouseEvent)(VirtualQGraphicsWidget* self, QEvent* event);
	void (*grabKeyboardEvent)(VirtualQGraphicsWidget* self, QEvent* event);
	void (*ungrabKeyboardEvent)(VirtualQGraphicsWidget* self, QEvent* event);
	bool (*eventFilter)(VirtualQGraphicsWidget* self, QObject* watched, QEvent* event);
	void (*timerEvent)(VirtualQGraphicsWidget* self, QTimerEvent* event);
	void (*childEvent)(VirtualQGraphicsWidget* self, QChildEvent* event);
	void (*customEvent)(VirtualQGraphicsWidget* self, QEvent* event);
	void (*connectNotify)(VirtualQGraphicsWidget* self, QMetaMethod* signal);
	void (*disconnectNotify)(VirtualQGraphicsWidget* self, QMetaMethod* signal);
	void (*advance)(VirtualQGraphicsWidget* self, int phase);
	bool (*contains)(const VirtualQGraphicsWidget* self, QPointF* point);
	bool (*collidesWithItem)(const VirtualQGraphicsWidget* self, QGraphicsItem* other, int mode);
	bool (*collidesWithPath)(const VirtualQGraphicsWidget* self, QPainterPath* path, int mode);
	bool (*isObscuredBy)(const VirtualQGraphicsWidget* self, QGraphicsItem* item);
	QPainterPath* (*opaqueArea)(const VirtualQGraphicsWidget* self);
	bool (*sceneEventFilter)(VirtualQGraphicsWidget* self, QGraphicsItem* watched, QEvent* event);
	void (*contextMenuEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneContextMenuEvent* event);
	void (*dragEnterEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneDragDropEvent* event);
	void (*dragLeaveEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneDragDropEvent* event);
	void (*dragMoveEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneDragDropEvent* event);
	void (*dropEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneDragDropEvent* event);
	void (*hoverEnterEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneHoverEvent* event);
	void (*keyPressEvent)(VirtualQGraphicsWidget* self, QKeyEvent* event);
	void (*keyReleaseEvent)(VirtualQGraphicsWidget* self, QKeyEvent* event);
	void (*mousePressEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneMouseEvent* event);
	void (*mouseMoveEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneMouseEvent* event);
	void (*mouseReleaseEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneMouseEvent* event);
	void (*wheelEvent)(VirtualQGraphicsWidget* self, QGraphicsSceneWheelEvent* event);
	void (*inputMethodEvent)(VirtualQGraphicsWidget* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(const VirtualQGraphicsWidget* self, int query);
	bool (*supportsExtension)(const VirtualQGraphicsWidget* self, int extension);
	void (*setExtension)(VirtualQGraphicsWidget* self, int extension, QVariant* variant);
	QVariant* (*extension)(const VirtualQGraphicsWidget* self, QVariant* variant);
	bool (*isEmpty)(const VirtualQGraphicsWidget* self);
}QGraphicsWidget_VTable;

const QGraphicsWidget_VTable* QGraphicsWidget_vtbl(const VirtualQGraphicsWidget* self);
void* QGraphicsWidget_vdata(const VirtualQGraphicsWidget* self);
void QGraphicsWidget_setVdata(VirtualQGraphicsWidget* self, void* vdata);

VirtualQGraphicsWidget* QGraphicsWidget_new(const QGraphicsWidget_VTable* vtbl, void* vdata);
VirtualQGraphicsWidget* QGraphicsWidget_new2(const QGraphicsWidget_VTable* vtbl, void* vdata, QGraphicsItem* parent);
VirtualQGraphicsWidget* QGraphicsWidget_new3(const QGraphicsWidget_VTable* vtbl, void* vdata, QGraphicsItem* parent, int wFlags);

void QGraphicsWidget_virtbase(QGraphicsWidget* src, QGraphicsObject** outptr_QGraphicsObject, QGraphicsLayoutItem** outptr_QGraphicsLayoutItem);
QMetaObject* QGraphicsWidget_metaObject(const QGraphicsWidget* self);
void* QGraphicsWidget_metacast(QGraphicsWidget* self, const char* param1);
int QGraphicsWidget_metacall(QGraphicsWidget* self, int param1, int param2, void** param3);
struct miqt_string QGraphicsWidget_tr(const char* s);
QGraphicsLayout* QGraphicsWidget_layout(const QGraphicsWidget* self);
void QGraphicsWidget_setLayout(QGraphicsWidget* self, QGraphicsLayout* layout);
void QGraphicsWidget_adjustSize(QGraphicsWidget* self);
int QGraphicsWidget_layoutDirection(const QGraphicsWidget* self);
void QGraphicsWidget_setLayoutDirection(QGraphicsWidget* self, int direction);
void QGraphicsWidget_unsetLayoutDirection(QGraphicsWidget* self);
QStyle* QGraphicsWidget_style(const QGraphicsWidget* self);
void QGraphicsWidget_setStyle(QGraphicsWidget* self, QStyle* style);
QFont* QGraphicsWidget_font(const QGraphicsWidget* self);
void QGraphicsWidget_setFont(QGraphicsWidget* self, QFont* font);
QPalette* QGraphicsWidget_palette(const QGraphicsWidget* self);
void QGraphicsWidget_setPalette(QGraphicsWidget* self, QPalette* palette);
bool QGraphicsWidget_autoFillBackground(const QGraphicsWidget* self);
void QGraphicsWidget_setAutoFillBackground(QGraphicsWidget* self, bool enabled);
void QGraphicsWidget_resize(QGraphicsWidget* self, QSizeF* size);
void QGraphicsWidget_resize2(QGraphicsWidget* self, double w, double h);
QSizeF* QGraphicsWidget_size(const QGraphicsWidget* self);
void QGraphicsWidget_setGeometry(QGraphicsWidget* self, QRectF* rect);
void QGraphicsWidget_setGeometry2(QGraphicsWidget* self, double x, double y, double w, double h);
QRectF* QGraphicsWidget_rect(const QGraphicsWidget* self);
void QGraphicsWidget_setContentsMargins(QGraphicsWidget* self, double left, double top, double right, double bottom);
void QGraphicsWidget_setContentsMarginsWithMargins(QGraphicsWidget* self, QMarginsF* margins);
void QGraphicsWidget_getContentsMargins(const QGraphicsWidget* self, double* left, double* top, double* right, double* bottom);
void QGraphicsWidget_setWindowFrameMargins(QGraphicsWidget* self, double left, double top, double right, double bottom);
void QGraphicsWidget_setWindowFrameMarginsWithMargins(QGraphicsWidget* self, QMarginsF* margins);
void QGraphicsWidget_getWindowFrameMargins(const QGraphicsWidget* self, double* left, double* top, double* right, double* bottom);
void QGraphicsWidget_unsetWindowFrameMargins(QGraphicsWidget* self);
QRectF* QGraphicsWidget_windowFrameGeometry(const QGraphicsWidget* self);
QRectF* QGraphicsWidget_windowFrameRect(const QGraphicsWidget* self);
int QGraphicsWidget_windowFlags(const QGraphicsWidget* self);
int QGraphicsWidget_windowType(const QGraphicsWidget* self);
void QGraphicsWidget_setWindowFlags(QGraphicsWidget* self, int wFlags);
bool QGraphicsWidget_isActiveWindow(const QGraphicsWidget* self);
void QGraphicsWidget_setWindowTitle(QGraphicsWidget* self, struct miqt_string title);
struct miqt_string QGraphicsWidget_windowTitle(const QGraphicsWidget* self);
int QGraphicsWidget_focusPolicy(const QGraphicsWidget* self);
void QGraphicsWidget_setFocusPolicy(QGraphicsWidget* self, int policy);
void QGraphicsWidget_setTabOrder(QGraphicsWidget* first, QGraphicsWidget* second);
QGraphicsWidget* QGraphicsWidget_focusWidget(const QGraphicsWidget* self);
int QGraphicsWidget_grabShortcut(QGraphicsWidget* self, QKeySequence* sequence);
void QGraphicsWidget_releaseShortcut(QGraphicsWidget* self, int id);
void QGraphicsWidget_setShortcutEnabled(QGraphicsWidget* self, int id);
void QGraphicsWidget_setShortcutAutoRepeat(QGraphicsWidget* self, int id);
void QGraphicsWidget_addAction(QGraphicsWidget* self, QAction* action);
void QGraphicsWidget_addActions(QGraphicsWidget* self, struct miqt_array /* of QAction* */  actions);
void QGraphicsWidget_insertActions(QGraphicsWidget* self, QAction* before, struct miqt_array /* of QAction* */  actions);
void QGraphicsWidget_insertAction(QGraphicsWidget* self, QAction* before, QAction* action);
void QGraphicsWidget_removeAction(QGraphicsWidget* self, QAction* action);
struct miqt_array /* of QAction* */  QGraphicsWidget_actions(const QGraphicsWidget* self);
void QGraphicsWidget_setAttribute(QGraphicsWidget* self, int attribute);
bool QGraphicsWidget_testAttribute(const QGraphicsWidget* self, int attribute);
int QGraphicsWidget_type(const QGraphicsWidget* self);
void QGraphicsWidget_paint(QGraphicsWidget* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
void QGraphicsWidget_paintWindowFrame(QGraphicsWidget* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
QRectF* QGraphicsWidget_boundingRect(const QGraphicsWidget* self);
QPainterPath* QGraphicsWidget_shape(const QGraphicsWidget* self);
void QGraphicsWidget_geometryChanged(QGraphicsWidget* self);
void QGraphicsWidget_connect_geometryChanged(VirtualQGraphicsWidget* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
void QGraphicsWidget_layoutChanged(QGraphicsWidget* self);
void QGraphicsWidget_connect_layoutChanged(VirtualQGraphicsWidget* self, intptr_t slot, void (*callback)(intptr_t), void (*release)(intptr_t));
bool QGraphicsWidget_close(QGraphicsWidget* self);
void QGraphicsWidget_initStyleOption(const QGraphicsWidget* self, QStyleOption* option);
QSizeF* QGraphicsWidget_sizeHint(const QGraphicsWidget* self, int which, QSizeF* constraint);
void QGraphicsWidget_updateGeometry(QGraphicsWidget* self);
QVariant* QGraphicsWidget_itemChange(QGraphicsWidget* self, int change, QVariant* value);
QVariant* QGraphicsWidget_propertyChange(QGraphicsWidget* self, struct miqt_string propertyName, QVariant* value);
bool QGraphicsWidget_sceneEvent(QGraphicsWidget* self, QEvent* event);
bool QGraphicsWidget_windowFrameEvent(QGraphicsWidget* self, QEvent* e);
int QGraphicsWidget_windowFrameSectionAt(const QGraphicsWidget* self, QPointF* pos);
bool QGraphicsWidget_event(QGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_changeEvent(QGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_closeEvent(QGraphicsWidget* self, QCloseEvent* event);
void QGraphicsWidget_focusInEvent(QGraphicsWidget* self, QFocusEvent* event);
bool QGraphicsWidget_focusNextPrevChild(QGraphicsWidget* self, bool next);
void QGraphicsWidget_focusOutEvent(QGraphicsWidget* self, QFocusEvent* event);
void QGraphicsWidget_hideEvent(QGraphicsWidget* self, QHideEvent* event);
void QGraphicsWidget_moveEvent(QGraphicsWidget* self, QGraphicsSceneMoveEvent* event);
void QGraphicsWidget_polishEvent(QGraphicsWidget* self);
void QGraphicsWidget_resizeEvent(QGraphicsWidget* self, QGraphicsSceneResizeEvent* event);
void QGraphicsWidget_showEvent(QGraphicsWidget* self, QShowEvent* event);
void QGraphicsWidget_hoverMoveEvent(QGraphicsWidget* self, QGraphicsSceneHoverEvent* event);
void QGraphicsWidget_hoverLeaveEvent(QGraphicsWidget* self, QGraphicsSceneHoverEvent* event);
void QGraphicsWidget_grabMouseEvent(QGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_ungrabMouseEvent(QGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_grabKeyboardEvent(QGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_ungrabKeyboardEvent(QGraphicsWidget* self, QEvent* event);
struct miqt_string QGraphicsWidget_tr2(const char* s, const char* c);
struct miqt_string QGraphicsWidget_tr3(const char* s, const char* c, int n);
int QGraphicsWidget_grabShortcut2(QGraphicsWidget* self, QKeySequence* sequence, int context);
void QGraphicsWidget_setShortcutEnabled2(QGraphicsWidget* self, int id, bool enabled);
void QGraphicsWidget_setShortcutAutoRepeat2(QGraphicsWidget* self, int id, bool enabled);
void QGraphicsWidget_setAttribute2(QGraphicsWidget* self, int attribute, bool on);

QMetaObject* QGraphicsWidget_virtualbase_metaObject(const VirtualQGraphicsWidget* self);
void* QGraphicsWidget_virtualbase_metacast(VirtualQGraphicsWidget* self, const char* param1);
int QGraphicsWidget_virtualbase_metacall(VirtualQGraphicsWidget* self, int param1, int param2, void** param3);
void QGraphicsWidget_virtualbase_setGeometry(VirtualQGraphicsWidget* self, QRectF* rect);
void QGraphicsWidget_virtualbase_getContentsMargins(const VirtualQGraphicsWidget* self, double* left, double* top, double* right, double* bottom);
int QGraphicsWidget_virtualbase_type(const VirtualQGraphicsWidget* self);
void QGraphicsWidget_virtualbase_paint(VirtualQGraphicsWidget* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
void QGraphicsWidget_virtualbase_paintWindowFrame(VirtualQGraphicsWidget* self, QPainter* painter, QStyleOptionGraphicsItem* option, QWidget* widget);
QRectF* QGraphicsWidget_virtualbase_boundingRect(const VirtualQGraphicsWidget* self);
QPainterPath* QGraphicsWidget_virtualbase_shape(const VirtualQGraphicsWidget* self);
void QGraphicsWidget_virtualbase_initStyleOption(const VirtualQGraphicsWidget* self, QStyleOption* option);
QSizeF* QGraphicsWidget_virtualbase_sizeHint(const VirtualQGraphicsWidget* self, int which, QSizeF* constraint);
void QGraphicsWidget_virtualbase_updateGeometry(VirtualQGraphicsWidget* self);
QVariant* QGraphicsWidget_virtualbase_itemChange(VirtualQGraphicsWidget* self, int change, QVariant* value);
QVariant* QGraphicsWidget_virtualbase_propertyChange(VirtualQGraphicsWidget* self, struct miqt_string propertyName, QVariant* value);
bool QGraphicsWidget_virtualbase_sceneEvent(VirtualQGraphicsWidget* self, QEvent* event);
bool QGraphicsWidget_virtualbase_windowFrameEvent(VirtualQGraphicsWidget* self, QEvent* e);
int QGraphicsWidget_virtualbase_windowFrameSectionAt(const VirtualQGraphicsWidget* self, QPointF* pos);
bool QGraphicsWidget_virtualbase_event(VirtualQGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_virtualbase_changeEvent(VirtualQGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_virtualbase_closeEvent(VirtualQGraphicsWidget* self, QCloseEvent* event);
void QGraphicsWidget_virtualbase_focusInEvent(VirtualQGraphicsWidget* self, QFocusEvent* event);
bool QGraphicsWidget_virtualbase_focusNextPrevChild(VirtualQGraphicsWidget* self, bool next);
void QGraphicsWidget_virtualbase_focusOutEvent(VirtualQGraphicsWidget* self, QFocusEvent* event);
void QGraphicsWidget_virtualbase_hideEvent(VirtualQGraphicsWidget* self, QHideEvent* event);
void QGraphicsWidget_virtualbase_moveEvent(VirtualQGraphicsWidget* self, QGraphicsSceneMoveEvent* event);
void QGraphicsWidget_virtualbase_polishEvent(VirtualQGraphicsWidget* self);
void QGraphicsWidget_virtualbase_resizeEvent(VirtualQGraphicsWidget* self, QGraphicsSceneResizeEvent* event);
void QGraphicsWidget_virtualbase_showEvent(VirtualQGraphicsWidget* self, QShowEvent* event);
void QGraphicsWidget_virtualbase_hoverMoveEvent(VirtualQGraphicsWidget* self, QGraphicsSceneHoverEvent* event);
void QGraphicsWidget_virtualbase_hoverLeaveEvent(VirtualQGraphicsWidget* self, QGraphicsSceneHoverEvent* event);
void QGraphicsWidget_virtualbase_grabMouseEvent(VirtualQGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_virtualbase_ungrabMouseEvent(VirtualQGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_virtualbase_grabKeyboardEvent(VirtualQGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_virtualbase_ungrabKeyboardEvent(VirtualQGraphicsWidget* self, QEvent* event);
bool QGraphicsWidget_virtualbase_eventFilter(VirtualQGraphicsWidget* self, QObject* watched, QEvent* event);
void QGraphicsWidget_virtualbase_timerEvent(VirtualQGraphicsWidget* self, QTimerEvent* event);
void QGraphicsWidget_virtualbase_childEvent(VirtualQGraphicsWidget* self, QChildEvent* event);
void QGraphicsWidget_virtualbase_customEvent(VirtualQGraphicsWidget* self, QEvent* event);
void QGraphicsWidget_virtualbase_connectNotify(VirtualQGraphicsWidget* self, QMetaMethod* signal);
void QGraphicsWidget_virtualbase_disconnectNotify(VirtualQGraphicsWidget* self, QMetaMethod* signal);
void QGraphicsWidget_virtualbase_advance(VirtualQGraphicsWidget* self, int phase);
bool QGraphicsWidget_virtualbase_contains(const VirtualQGraphicsWidget* self, QPointF* point);
bool QGraphicsWidget_virtualbase_collidesWithItem(const VirtualQGraphicsWidget* self, QGraphicsItem* other, int mode);
bool QGraphicsWidget_virtualbase_collidesWithPath(const VirtualQGraphicsWidget* self, QPainterPath* path, int mode);
bool QGraphicsWidget_virtualbase_isObscuredBy(const VirtualQGraphicsWidget* self, QGraphicsItem* item);
QPainterPath* QGraphicsWidget_virtualbase_opaqueArea(const VirtualQGraphicsWidget* self);
bool QGraphicsWidget_virtualbase_sceneEventFilter(VirtualQGraphicsWidget* self, QGraphicsItem* watched, QEvent* event);
void QGraphicsWidget_virtualbase_contextMenuEvent(VirtualQGraphicsWidget* self, QGraphicsSceneContextMenuEvent* event);
void QGraphicsWidget_virtualbase_dragEnterEvent(VirtualQGraphicsWidget* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsWidget_virtualbase_dragLeaveEvent(VirtualQGraphicsWidget* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsWidget_virtualbase_dragMoveEvent(VirtualQGraphicsWidget* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsWidget_virtualbase_dropEvent(VirtualQGraphicsWidget* self, QGraphicsSceneDragDropEvent* event);
void QGraphicsWidget_virtualbase_hoverEnterEvent(VirtualQGraphicsWidget* self, QGraphicsSceneHoverEvent* event);
void QGraphicsWidget_virtualbase_keyPressEvent(VirtualQGraphicsWidget* self, QKeyEvent* event);
void QGraphicsWidget_virtualbase_keyReleaseEvent(VirtualQGraphicsWidget* self, QKeyEvent* event);
void QGraphicsWidget_virtualbase_mousePressEvent(VirtualQGraphicsWidget* self, QGraphicsSceneMouseEvent* event);
void QGraphicsWidget_virtualbase_mouseMoveEvent(VirtualQGraphicsWidget* self, QGraphicsSceneMouseEvent* event);
void QGraphicsWidget_virtualbase_mouseReleaseEvent(VirtualQGraphicsWidget* self, QGraphicsSceneMouseEvent* event);
void QGraphicsWidget_virtualbase_mouseDoubleClickEvent(VirtualQGraphicsWidget* self, QGraphicsSceneMouseEvent* event);
void QGraphicsWidget_virtualbase_wheelEvent(VirtualQGraphicsWidget* self, QGraphicsSceneWheelEvent* event);
void QGraphicsWidget_virtualbase_inputMethodEvent(VirtualQGraphicsWidget* self, QInputMethodEvent* event);
QVariant* QGraphicsWidget_virtualbase_inputMethodQuery(const VirtualQGraphicsWidget* self, int query);
bool QGraphicsWidget_virtualbase_supportsExtension(const VirtualQGraphicsWidget* self, int extension);
void QGraphicsWidget_virtualbase_setExtension(VirtualQGraphicsWidget* self, int extension, QVariant* variant);
QVariant* QGraphicsWidget_virtualbase_extension(const VirtualQGraphicsWidget* self, QVariant* variant);
bool QGraphicsWidget_virtualbase_isEmpty(const VirtualQGraphicsWidget* self);

void QGraphicsWidget_protectedbase_updateMicroFocus(VirtualQGraphicsWidget* self);
QObject* QGraphicsWidget_protectedbase_sender(const VirtualQGraphicsWidget* self);
int QGraphicsWidget_protectedbase_senderSignalIndex(const VirtualQGraphicsWidget* self);
int QGraphicsWidget_protectedbase_receivers(const VirtualQGraphicsWidget* self, const char* signal);
bool QGraphicsWidget_protectedbase_isSignalConnected(const VirtualQGraphicsWidget* self, QMetaMethod* signal);
void QGraphicsWidget_protectedbase_addToIndex(VirtualQGraphicsWidget* self);
void QGraphicsWidget_protectedbase_removeFromIndex(VirtualQGraphicsWidget* self);
void QGraphicsWidget_protectedbase_prepareGeometryChange(VirtualQGraphicsWidget* self);
void QGraphicsWidget_protectedbase_setGraphicsItem(VirtualQGraphicsWidget* self, QGraphicsItem* item);
void QGraphicsWidget_protectedbase_setOwnedByLayout(VirtualQGraphicsWidget* self, bool ownedByLayout);

const QMetaObject* QGraphicsWidget_staticMetaObject();
void QGraphicsWidget_delete(QGraphicsWidget* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
