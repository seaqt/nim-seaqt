#pragma once
#ifndef SEAQT_QTWIDGETS_GEN_QUNDOVIEW_H
#define SEAQT_QTWIDGETS_GEN_QUNDOVIEW_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../libseaqt/libseaqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAbstractItemDelegate;
class QAbstractItemModel;
class QAbstractItemView;
class QAbstractScrollArea;
class QActionEvent;
class QChildEvent;
class QCloseEvent;
class QContextMenuEvent;
class QDragEnterEvent;
class QDragLeaveEvent;
class QDragMoveEvent;
class QDropEvent;
class QEnterEvent;
class QEvent;
class QFocusEvent;
class QFrame;
class QHideEvent;
class QIcon;
class QInputMethodEvent;
class QItemSelection;
class QItemSelectionModel;
class QKeyEvent;
class QListView;
class QMargins;
class QMetaMethod;
class QMetaObject;
class QModelIndex;
class QMouseEvent;
class QMoveEvent;
class QObject;
class QPaintDevice;
class QPaintEngine;
class QPaintEvent;
class QPainter;
class QPoint;
class QRect;
class QRegion;
class QResizeEvent;
class QShowEvent;
class QSize;
class QStyleOptionFrame;
class QStyleOptionViewItem;
class QTabletEvent;
class QTimerEvent;
class QUndoGroup;
class QUndoStack;
class QUndoView;
class QVariant;
class QWheelEvent;
class QWidget;
#else
typedef struct QAbstractItemDelegate QAbstractItemDelegate;
typedef struct QAbstractItemModel QAbstractItemModel;
typedef struct QAbstractItemView QAbstractItemView;
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QIcon QIcon;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QItemSelection QItemSelection;
typedef struct QItemSelectionModel QItemSelectionModel;
typedef struct QKeyEvent QKeyEvent;
typedef struct QListView QListView;
typedef struct QMargins QMargins;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QModelIndex QModelIndex;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPoint QPoint;
typedef struct QRect QRect;
typedef struct QRegion QRegion;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QStyleOptionViewItem QStyleOptionViewItem;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QUndoGroup QUndoGroup;
typedef struct QUndoStack QUndoStack;
typedef struct QUndoView QUndoView;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
#endif

typedef struct VirtualQUndoView VirtualQUndoView;
typedef struct QUndoView_VTable{
	void (*destructor)(VirtualQUndoView* self);
	QMetaObject* (*metaObject)(const VirtualQUndoView* self);
	void* (*metacast)(VirtualQUndoView* self, const char* param1);
	int (*metacall)(VirtualQUndoView* self, int param1, int param2, void** param3);
	QRect* (*visualRect)(const VirtualQUndoView* self, QModelIndex* index);
	void (*scrollTo)(VirtualQUndoView* self, QModelIndex* index, int hint);
	QModelIndex* (*indexAt)(const VirtualQUndoView* self, QPoint* p);
	void (*doItemsLayout)(VirtualQUndoView* self);
	void (*reset)(VirtualQUndoView* self);
	void (*setRootIndex)(VirtualQUndoView* self, QModelIndex* index);
	bool (*event)(VirtualQUndoView* self, QEvent* e);
	void (*scrollContentsBy)(VirtualQUndoView* self, int dx, int dy);
	void (*dataChanged)(VirtualQUndoView* self, QModelIndex* topLeft, QModelIndex* bottomRight, struct miqt_array /* of int */  roles);
	void (*rowsInserted)(VirtualQUndoView* self, QModelIndex* parent, int start, int end);
	void (*rowsAboutToBeRemoved)(VirtualQUndoView* self, QModelIndex* parent, int start, int end);
	void (*mouseMoveEvent)(VirtualQUndoView* self, QMouseEvent* e);
	void (*mouseReleaseEvent)(VirtualQUndoView* self, QMouseEvent* e);
	void (*wheelEvent)(VirtualQUndoView* self, QWheelEvent* e);
	void (*timerEvent)(VirtualQUndoView* self, QTimerEvent* e);
	void (*resizeEvent)(VirtualQUndoView* self, QResizeEvent* e);
	void (*dragMoveEvent)(VirtualQUndoView* self, QDragMoveEvent* e);
	void (*dragLeaveEvent)(VirtualQUndoView* self, QDragLeaveEvent* e);
	void (*dropEvent)(VirtualQUndoView* self, QDropEvent* e);
	void (*startDrag)(VirtualQUndoView* self, int supportedActions);
	void (*initViewItemOption)(const VirtualQUndoView* self, QStyleOptionViewItem* option);
	void (*paintEvent)(VirtualQUndoView* self, QPaintEvent* e);
	int (*horizontalOffset)(const VirtualQUndoView* self);
	int (*verticalOffset)(const VirtualQUndoView* self);
	QModelIndex* (*moveCursor)(VirtualQUndoView* self, int cursorAction, int modifiers);
	void (*setSelection)(VirtualQUndoView* self, QRect* rect, int command);
	QRegion* (*visualRegionForSelection)(const VirtualQUndoView* self, QItemSelection* selection);
	struct miqt_array /* of QModelIndex* */  (*selectedIndexes)(const VirtualQUndoView* self);
	void (*updateGeometries)(VirtualQUndoView* self);
	bool (*isIndexHidden)(const VirtualQUndoView* self, QModelIndex* index);
	void (*selectionChanged)(VirtualQUndoView* self, QItemSelection* selected, QItemSelection* deselected);
	void (*currentChanged)(VirtualQUndoView* self, QModelIndex* current, QModelIndex* previous);
	QSize* (*viewportSizeHint)(const VirtualQUndoView* self);
	void (*setModel)(VirtualQUndoView* self, QAbstractItemModel* model);
	void (*setSelectionModel)(VirtualQUndoView* self, QItemSelectionModel* selectionModel);
	void (*keyboardSearch)(VirtualQUndoView* self, struct miqt_string search);
	int (*sizeHintForRow)(const VirtualQUndoView* self, int row);
	int (*sizeHintForColumn)(const VirtualQUndoView* self, int column);
	QAbstractItemDelegate* (*itemDelegateForIndex)(const VirtualQUndoView* self, QModelIndex* index);
	QVariant* (*inputMethodQuery)(const VirtualQUndoView* self, int query);
	void (*selectAll)(VirtualQUndoView* self);
	void (*updateEditorData)(VirtualQUndoView* self);
	void (*updateEditorGeometries)(VirtualQUndoView* self);
	void (*verticalScrollbarAction)(VirtualQUndoView* self, int action);
	void (*horizontalScrollbarAction)(VirtualQUndoView* self, int action);
	void (*verticalScrollbarValueChanged)(VirtualQUndoView* self, int value);
	void (*horizontalScrollbarValueChanged)(VirtualQUndoView* self, int value);
	void (*closeEditor)(VirtualQUndoView* self, QWidget* editor, int hint);
	void (*commitData)(VirtualQUndoView* self, QWidget* editor);
	void (*editorDestroyed)(VirtualQUndoView* self, QObject* editor);
	bool (*edit2)(VirtualQUndoView* self, QModelIndex* index, int trigger, QEvent* event);
	int (*selectionCommand)(const VirtualQUndoView* self, QModelIndex* index, QEvent* event);
	bool (*focusNextPrevChild)(VirtualQUndoView* self, bool next);
	bool (*viewportEvent)(VirtualQUndoView* self, QEvent* event);
	void (*mousePressEvent)(VirtualQUndoView* self, QMouseEvent* event);
	void (*mouseDoubleClickEvent)(VirtualQUndoView* self, QMouseEvent* event);
	void (*dragEnterEvent)(VirtualQUndoView* self, QDragEnterEvent* event);
	void (*focusInEvent)(VirtualQUndoView* self, QFocusEvent* event);
	void (*focusOutEvent)(VirtualQUndoView* self, QFocusEvent* event);
	void (*keyPressEvent)(VirtualQUndoView* self, QKeyEvent* event);
	void (*inputMethodEvent)(VirtualQUndoView* self, QInputMethodEvent* event);
	bool (*eventFilter)(VirtualQUndoView* self, QObject* object, QEvent* event);
	QSize* (*minimumSizeHint)(const VirtualQUndoView* self);
	QSize* (*sizeHint)(const VirtualQUndoView* self);
	void (*setupViewport)(VirtualQUndoView* self, QWidget* viewport);
	void (*contextMenuEvent)(VirtualQUndoView* self, QContextMenuEvent* param1);
	void (*changeEvent)(VirtualQUndoView* self, QEvent* param1);
	void (*initStyleOption)(const VirtualQUndoView* self, QStyleOptionFrame* option);
	int (*devType)(const VirtualQUndoView* self);
	void (*setVisible)(VirtualQUndoView* self, bool visible);
	int (*heightForWidth)(const VirtualQUndoView* self, int param1);
	bool (*hasHeightForWidth)(const VirtualQUndoView* self);
	QPaintEngine* (*paintEngine)(const VirtualQUndoView* self);
	void (*keyReleaseEvent)(VirtualQUndoView* self, QKeyEvent* event);
	void (*enterEvent)(VirtualQUndoView* self, QEnterEvent* event);
	void (*leaveEvent)(VirtualQUndoView* self, QEvent* event);
	void (*moveEvent)(VirtualQUndoView* self, QMoveEvent* event);
	void (*closeEvent)(VirtualQUndoView* self, QCloseEvent* event);
	void (*tabletEvent)(VirtualQUndoView* self, QTabletEvent* event);
	void (*actionEvent)(VirtualQUndoView* self, QActionEvent* event);
	void (*showEvent)(VirtualQUndoView* self, QShowEvent* event);
	void (*hideEvent)(VirtualQUndoView* self, QHideEvent* event);
	bool (*nativeEvent)(VirtualQUndoView* self, struct miqt_string eventType, void* message, intptr_t* result);
	int (*metric)(const VirtualQUndoView* self, int param1);
	void (*initPainter)(const VirtualQUndoView* self, QPainter* painter);
	QPaintDevice* (*redirected)(const VirtualQUndoView* self, QPoint* offset);
	QPainter* (*sharedPainter)(const VirtualQUndoView* self);
	void (*childEvent)(VirtualQUndoView* self, QChildEvent* event);
	void (*customEvent)(VirtualQUndoView* self, QEvent* event);
	void (*connectNotify)(VirtualQUndoView* self, QMetaMethod* signal);
	void (*disconnectNotify)(VirtualQUndoView* self, QMetaMethod* signal);
}QUndoView_VTable;

const QUndoView_VTable* QUndoView_vtbl(const VirtualQUndoView* self);
void* QUndoView_vdata(const VirtualQUndoView* self);
void QUndoView_setVdata(VirtualQUndoView* self, void* vdata);

VirtualQUndoView* QUndoView_new(const QUndoView_VTable* vtbl, void* vdata, QWidget* parent);
VirtualQUndoView* QUndoView_new2(const QUndoView_VTable* vtbl, void* vdata);
VirtualQUndoView* QUndoView_new3(const QUndoView_VTable* vtbl, void* vdata, QUndoStack* stack);
VirtualQUndoView* QUndoView_new4(const QUndoView_VTable* vtbl, void* vdata, QUndoGroup* group);
VirtualQUndoView* QUndoView_new5(const QUndoView_VTable* vtbl, void* vdata, QUndoStack* stack, QWidget* parent);
VirtualQUndoView* QUndoView_new6(const QUndoView_VTable* vtbl, void* vdata, QUndoGroup* group, QWidget* parent);

void QUndoView_virtbase(QUndoView* src, QListView** outptr_QListView);
QMetaObject* QUndoView_metaObject(const QUndoView* self);
void* QUndoView_metacast(QUndoView* self, const char* param1);
int QUndoView_metacall(QUndoView* self, int param1, int param2, void** param3);
struct miqt_string QUndoView_tr(const char* s);
QUndoStack* QUndoView_stack(const QUndoView* self);
QUndoGroup* QUndoView_group(const QUndoView* self);
void QUndoView_setEmptyLabel(QUndoView* self, struct miqt_string label);
struct miqt_string QUndoView_emptyLabel(const QUndoView* self);
void QUndoView_setCleanIcon(QUndoView* self, QIcon* icon);
QIcon* QUndoView_cleanIcon(const QUndoView* self);
void QUndoView_setStack(QUndoView* self, QUndoStack* stack);
void QUndoView_setGroup(QUndoView* self, QUndoGroup* group);
struct miqt_string QUndoView_tr2(const char* s, const char* c);
struct miqt_string QUndoView_tr3(const char* s, const char* c, int n);

QMetaObject* QUndoView_virtualbase_metaObject(const VirtualQUndoView* self);
void* QUndoView_virtualbase_metacast(VirtualQUndoView* self, const char* param1);
int QUndoView_virtualbase_metacall(VirtualQUndoView* self, int param1, int param2, void** param3);
QRect* QUndoView_virtualbase_visualRect(const VirtualQUndoView* self, QModelIndex* index);
void QUndoView_virtualbase_scrollTo(VirtualQUndoView* self, QModelIndex* index, int hint);
QModelIndex* QUndoView_virtualbase_indexAt(const VirtualQUndoView* self, QPoint* p);
void QUndoView_virtualbase_doItemsLayout(VirtualQUndoView* self);
void QUndoView_virtualbase_reset(VirtualQUndoView* self);
void QUndoView_virtualbase_setRootIndex(VirtualQUndoView* self, QModelIndex* index);
bool QUndoView_virtualbase_event(VirtualQUndoView* self, QEvent* e);
void QUndoView_virtualbase_scrollContentsBy(VirtualQUndoView* self, int dx, int dy);
void QUndoView_virtualbase_dataChanged(VirtualQUndoView* self, QModelIndex* topLeft, QModelIndex* bottomRight, struct miqt_array /* of int */  roles);
void QUndoView_virtualbase_rowsInserted(VirtualQUndoView* self, QModelIndex* parent, int start, int end);
void QUndoView_virtualbase_rowsAboutToBeRemoved(VirtualQUndoView* self, QModelIndex* parent, int start, int end);
void QUndoView_virtualbase_mouseMoveEvent(VirtualQUndoView* self, QMouseEvent* e);
void QUndoView_virtualbase_mouseReleaseEvent(VirtualQUndoView* self, QMouseEvent* e);
void QUndoView_virtualbase_wheelEvent(VirtualQUndoView* self, QWheelEvent* e);
void QUndoView_virtualbase_timerEvent(VirtualQUndoView* self, QTimerEvent* e);
void QUndoView_virtualbase_resizeEvent(VirtualQUndoView* self, QResizeEvent* e);
void QUndoView_virtualbase_dragMoveEvent(VirtualQUndoView* self, QDragMoveEvent* e);
void QUndoView_virtualbase_dragLeaveEvent(VirtualQUndoView* self, QDragLeaveEvent* e);
void QUndoView_virtualbase_dropEvent(VirtualQUndoView* self, QDropEvent* e);
void QUndoView_virtualbase_startDrag(VirtualQUndoView* self, int supportedActions);
void QUndoView_virtualbase_initViewItemOption(const VirtualQUndoView* self, QStyleOptionViewItem* option);
void QUndoView_virtualbase_paintEvent(VirtualQUndoView* self, QPaintEvent* e);
int QUndoView_virtualbase_horizontalOffset(const VirtualQUndoView* self);
int QUndoView_virtualbase_verticalOffset(const VirtualQUndoView* self);
QModelIndex* QUndoView_virtualbase_moveCursor(VirtualQUndoView* self, int cursorAction, int modifiers);
void QUndoView_virtualbase_setSelection(VirtualQUndoView* self, QRect* rect, int command);
QRegion* QUndoView_virtualbase_visualRegionForSelection(const VirtualQUndoView* self, QItemSelection* selection);
struct miqt_array /* of QModelIndex* */  QUndoView_virtualbase_selectedIndexes(const VirtualQUndoView* self);
void QUndoView_virtualbase_updateGeometries(VirtualQUndoView* self);
bool QUndoView_virtualbase_isIndexHidden(const VirtualQUndoView* self, QModelIndex* index);
void QUndoView_virtualbase_selectionChanged(VirtualQUndoView* self, QItemSelection* selected, QItemSelection* deselected);
void QUndoView_virtualbase_currentChanged(VirtualQUndoView* self, QModelIndex* current, QModelIndex* previous);
QSize* QUndoView_virtualbase_viewportSizeHint(const VirtualQUndoView* self);
void QUndoView_virtualbase_setModel(VirtualQUndoView* self, QAbstractItemModel* model);
void QUndoView_virtualbase_setSelectionModel(VirtualQUndoView* self, QItemSelectionModel* selectionModel);
void QUndoView_virtualbase_keyboardSearch(VirtualQUndoView* self, struct miqt_string search);
int QUndoView_virtualbase_sizeHintForRow(const VirtualQUndoView* self, int row);
int QUndoView_virtualbase_sizeHintForColumn(const VirtualQUndoView* self, int column);
QAbstractItemDelegate* QUndoView_virtualbase_itemDelegateForIndex(const VirtualQUndoView* self, QModelIndex* index);
QVariant* QUndoView_virtualbase_inputMethodQuery(const VirtualQUndoView* self, int query);
void QUndoView_virtualbase_selectAll(VirtualQUndoView* self);
void QUndoView_virtualbase_updateEditorData(VirtualQUndoView* self);
void QUndoView_virtualbase_updateEditorGeometries(VirtualQUndoView* self);
void QUndoView_virtualbase_verticalScrollbarAction(VirtualQUndoView* self, int action);
void QUndoView_virtualbase_horizontalScrollbarAction(VirtualQUndoView* self, int action);
void QUndoView_virtualbase_verticalScrollbarValueChanged(VirtualQUndoView* self, int value);
void QUndoView_virtualbase_horizontalScrollbarValueChanged(VirtualQUndoView* self, int value);
void QUndoView_virtualbase_closeEditor(VirtualQUndoView* self, QWidget* editor, int hint);
void QUndoView_virtualbase_commitData(VirtualQUndoView* self, QWidget* editor);
void QUndoView_virtualbase_editorDestroyed(VirtualQUndoView* self, QObject* editor);
bool QUndoView_virtualbase_edit2(VirtualQUndoView* self, QModelIndex* index, int trigger, QEvent* event);
int QUndoView_virtualbase_selectionCommand(const VirtualQUndoView* self, QModelIndex* index, QEvent* event);
bool QUndoView_virtualbase_focusNextPrevChild(VirtualQUndoView* self, bool next);
bool QUndoView_virtualbase_viewportEvent(VirtualQUndoView* self, QEvent* event);
void QUndoView_virtualbase_mousePressEvent(VirtualQUndoView* self, QMouseEvent* event);
void QUndoView_virtualbase_mouseDoubleClickEvent(VirtualQUndoView* self, QMouseEvent* event);
void QUndoView_virtualbase_dragEnterEvent(VirtualQUndoView* self, QDragEnterEvent* event);
void QUndoView_virtualbase_focusInEvent(VirtualQUndoView* self, QFocusEvent* event);
void QUndoView_virtualbase_focusOutEvent(VirtualQUndoView* self, QFocusEvent* event);
void QUndoView_virtualbase_keyPressEvent(VirtualQUndoView* self, QKeyEvent* event);
void QUndoView_virtualbase_inputMethodEvent(VirtualQUndoView* self, QInputMethodEvent* event);
bool QUndoView_virtualbase_eventFilter(VirtualQUndoView* self, QObject* object, QEvent* event);
QSize* QUndoView_virtualbase_minimumSizeHint(const VirtualQUndoView* self);
QSize* QUndoView_virtualbase_sizeHint(const VirtualQUndoView* self);
void QUndoView_virtualbase_setupViewport(VirtualQUndoView* self, QWidget* viewport);
void QUndoView_virtualbase_contextMenuEvent(VirtualQUndoView* self, QContextMenuEvent* param1);
void QUndoView_virtualbase_changeEvent(VirtualQUndoView* self, QEvent* param1);
void QUndoView_virtualbase_initStyleOption(const VirtualQUndoView* self, QStyleOptionFrame* option);
int QUndoView_virtualbase_devType(const VirtualQUndoView* self);
void QUndoView_virtualbase_setVisible(VirtualQUndoView* self, bool visible);
int QUndoView_virtualbase_heightForWidth(const VirtualQUndoView* self, int param1);
bool QUndoView_virtualbase_hasHeightForWidth(const VirtualQUndoView* self);
QPaintEngine* QUndoView_virtualbase_paintEngine(const VirtualQUndoView* self);
void QUndoView_virtualbase_keyReleaseEvent(VirtualQUndoView* self, QKeyEvent* event);
void QUndoView_virtualbase_enterEvent(VirtualQUndoView* self, QEnterEvent* event);
void QUndoView_virtualbase_leaveEvent(VirtualQUndoView* self, QEvent* event);
void QUndoView_virtualbase_moveEvent(VirtualQUndoView* self, QMoveEvent* event);
void QUndoView_virtualbase_closeEvent(VirtualQUndoView* self, QCloseEvent* event);
void QUndoView_virtualbase_tabletEvent(VirtualQUndoView* self, QTabletEvent* event);
void QUndoView_virtualbase_actionEvent(VirtualQUndoView* self, QActionEvent* event);
void QUndoView_virtualbase_showEvent(VirtualQUndoView* self, QShowEvent* event);
void QUndoView_virtualbase_hideEvent(VirtualQUndoView* self, QHideEvent* event);
bool QUndoView_virtualbase_nativeEvent(VirtualQUndoView* self, struct miqt_string eventType, void* message, intptr_t* result);
int QUndoView_virtualbase_metric(const VirtualQUndoView* self, int param1);
void QUndoView_virtualbase_initPainter(const VirtualQUndoView* self, QPainter* painter);
QPaintDevice* QUndoView_virtualbase_redirected(const VirtualQUndoView* self, QPoint* offset);
QPainter* QUndoView_virtualbase_sharedPainter(const VirtualQUndoView* self);
void QUndoView_virtualbase_childEvent(VirtualQUndoView* self, QChildEvent* event);
void QUndoView_virtualbase_customEvent(VirtualQUndoView* self, QEvent* event);
void QUndoView_virtualbase_connectNotify(VirtualQUndoView* self, QMetaMethod* signal);
void QUndoView_virtualbase_disconnectNotify(VirtualQUndoView* self, QMetaMethod* signal);

void QUndoView_protectedbase_resizeContents(VirtualQUndoView* self, int width, int height);
QSize* QUndoView_protectedbase_contentsSize(const VirtualQUndoView* self);
QRect* QUndoView_protectedbase_rectForIndex(const VirtualQUndoView* self, QModelIndex* index);
void QUndoView_protectedbase_setPositionForIndex(VirtualQUndoView* self, QPoint* position, QModelIndex* index);
int QUndoView_protectedbase_state(const VirtualQUndoView* self);
void QUndoView_protectedbase_setState(VirtualQUndoView* self, int state);
void QUndoView_protectedbase_scheduleDelayedItemsLayout(VirtualQUndoView* self);
void QUndoView_protectedbase_executeDelayedItemsLayout(VirtualQUndoView* self);
void QUndoView_protectedbase_setDirtyRegion(VirtualQUndoView* self, QRegion* region);
void QUndoView_protectedbase_scrollDirtyRegion(VirtualQUndoView* self, int dx, int dy);
QPoint* QUndoView_protectedbase_dirtyRegionOffset(const VirtualQUndoView* self);
void QUndoView_protectedbase_startAutoScroll(VirtualQUndoView* self);
void QUndoView_protectedbase_stopAutoScroll(VirtualQUndoView* self);
void QUndoView_protectedbase_doAutoScroll(VirtualQUndoView* self);
int QUndoView_protectedbase_dropIndicatorPosition(const VirtualQUndoView* self);
void QUndoView_protectedbase_setViewportMargins(VirtualQUndoView* self, int left, int top, int right, int bottom);
QMargins* QUndoView_protectedbase_viewportMargins(const VirtualQUndoView* self);
void QUndoView_protectedbase_drawFrame(VirtualQUndoView* self, QPainter* param1);
void QUndoView_protectedbase_updateMicroFocus(VirtualQUndoView* self);
void QUndoView_protectedbase_create(VirtualQUndoView* self);
void QUndoView_protectedbase_destroy(VirtualQUndoView* self);
bool QUndoView_protectedbase_focusNextChild(VirtualQUndoView* self);
bool QUndoView_protectedbase_focusPreviousChild(VirtualQUndoView* self);
QObject* QUndoView_protectedbase_sender(const VirtualQUndoView* self);
int QUndoView_protectedbase_senderSignalIndex(const VirtualQUndoView* self);
int QUndoView_protectedbase_receivers(const VirtualQUndoView* self, const char* signal);
bool QUndoView_protectedbase_isSignalConnected(const VirtualQUndoView* self, QMetaMethod* signal);

const QMetaObject* QUndoView_staticMetaObject();
void QUndoView_delete(QUndoView* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
